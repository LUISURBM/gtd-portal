{"version":3,"sources":["./projects/docs/src/app/animations/form-animation.ts","./projects/docs/src/app/app-routing.module.ts","./projects/docs/src/app/app.component.ts","./projects/docs/src/app/app.component.html","./projects/docs/src/app/app.module.ts","./projects/docs/src/app/b2c-config.ts","./projects/docs/src/app/dashboard/dashboard-components/pivot-table/config.ts","./projects/docs/src/app/dashboard/dashboard-components/pivot-table/data.ts","./projects/docs/src/app/dashboard/dashboard-components/pivot-table/pivot-table.component.ts","./projects/docs/src/app/demo-material-module.ts","./projects/docs/src/app/guards/dirty-check.guard.ts","./projects/docs/src/app/guards/gtd-input.formatter.ts","./projects/docs/src/app/guards/gtd-text.formatter.ts","./projects/docs/src/app/layouts/full/full.component.ts","./projects/docs/src/app/layouts/full/full.component.html","./projects/docs/src/app/layouts/full/header/header.component.ts","./projects/docs/src/app/layouts/full/header/header.component.html","./projects/docs/src/app/layouts/full/header/sign-in.component.ts","./projects/docs/src/app/layouts/full/helper/helper.component.ts","./projects/docs/src/app/layouts/full/helper/helper.component.html","./projects/docs/src/app/layouts/full/sidebar/sidebar.component.ts","./projects/docs/src/app/layouts/full/sidebar/sidebar.component.html","./projects/docs/src/app/layouts/full/sidebar/sidemenu.component.ts","./projects/docs/src/app/layouts/full/sidebar/sidemenu.component.html","./projects/docs/src/app/material-component/toolbar/toolbar.component.ts","./projects/docs/src/app/material-component/toolbar/toolbar.component.html","./projects/docs/src/app/security/login-form.component.ts","./projects/docs/src/app/security/login-form.component.html","./projects/docs/src/app/shared/accordion/accordion.directive.ts","./projects/docs/src/app/shared/accordion/accordionanchor.directive.ts","./projects/docs/src/app/shared/accordion/accordionlink.directive.ts","./projects/docs/src/app/shared/accordion/index.ts","./projects/docs/src/app/shared/dialog/confirm/confirm-dialog.component.ts","./projects/docs/src/app/shared/dialog/confirm/confirm-dialog.component.html","./projects/docs/src/app/shared/menu-items/menu-items.ts","./projects/docs/src/app/shared/shared.module.ts","./projects/docs/src/app/shared/spinner.component.ts","./projects/docs/src/app/shared/unicode-emoji.pipe.ts","./projects/docs/src/app/srv/app-state.service.ts","./projects/docs/src/app/srv/in-mem-data-service.ts","./projects/docs/src/app/srv/in-mem-service.ts","./projects/docs/src/app/srv/navigation.service.ts","./projects/docs/src/app/srv/payroll/api.module.ts","./projects/docs/src/app/srv/payroll/configuration.ts","./projects/docs/src/app/srv/payroll/encoder.ts","./projects/docs/src/app/srv/payroll/rest/anticipos.service.ts","./projects/docs/src/app/srv/payroll/rest/api.ts","./projects/docs/src/app/srv/payroll/rest/auxilios.service.ts","./projects/docs/src/app/srv/payroll/rest/basicos.service.ts","./projects/docs/src/app/srv/payroll/rest/bonificaciones.service.ts","./projects/docs/src/app/srv/payroll/rest/bonosEPCTV.service.ts","./projects/docs/src/app/srv/payroll/rest/cesantias.service.ts","./projects/docs/src/app/srv/payroll/rest/comisiones.service.ts","./projects/docs/src/app/srv/payroll/rest/compensaciones.service.ts","./projects/docs/src/app/srv/payroll/rest/deducciones.service.ts","./projects/docs/src/app/srv/payroll/rest/devengados.service.ts","./projects/docs/src/app/srv/payroll/rest/empleadores.service.ts","./projects/docs/src/app/srv/payroll/rest/fechasPagos.service.ts","./projects/docs/src/app/srv/payroll/rest/fondosSP.service.ts","./projects/docs/src/app/srv/payroll/rest/horariosAdicionales.service.ts","./projects/docs/src/app/srv/payroll/rest/huelgasLegales.service.ts","./projects/docs/src/app/srv/payroll/rest/incapacidades.service.ts","./projects/docs/src/app/srv/payroll/rest/informacionesGenerales.service.ts","./projects/docs/src/app/srv/payroll/rest/libranzas.service.ts","./projects/docs/src/app/srv/payroll/rest/licencias.service.ts","./projects/docs/src/app/srv/payroll/rest/lugaresGeneracionXML.service.ts","./projects/docs/src/app/srv/payroll/rest/nominasGenerales.service.ts","./projects/docs/src/app/srv/payroll/rest/nominasIndividuales.service.ts","./projects/docs/src/app/srv/payroll/rest/notas.service.ts","./projects/docs/src/app/srv/payroll/rest/numerosSecuenciaXML.service.ts","./projects/docs/src/app/srv/payroll/rest/otrasDeducciones.service.ts","./projects/docs/src/app/srv/payroll/rest/otrosConceptos.service.ts","./projects/docs/src/app/srv/payroll/rest/pagos.service.ts","./projects/docs/src/app/srv/payroll/rest/pagosTerceros.service.ts","./projects/docs/src/app/srv/payroll/rest/payrolls.service.ts","./projects/docs/src/app/srv/payroll/rest/periodos.service.ts","./projects/docs/src/app/srv/payroll/rest/primas.service.ts","./projects/docs/src/app/srv/payroll/rest/proveedoresXML.service.ts","./projects/docs/src/app/srv/payroll/rest/saludPensionSindicatos.service.ts","./projects/docs/src/app/srv/payroll/rest/sanciones.service.ts","./projects/docs/src/app/srv/payroll/rest/storedProcedure.service.ts","./projects/docs/src/app/srv/payroll/rest/trabajadores.service.ts","./projects/docs/src/app/srv/payroll/rest/transportes.service.ts","./projects/docs/src/app/srv/payroll/rest/vacacionesCompensadas.service.ts","./projects/docs/src/app/srv/payroll/rest/vacacionesComunes.service.ts","./projects/docs/src/app/srv/payroll/variables.ts","./projects/docs/src/app/srv/selective-preloading-strategy.service.ts","./projects/docs/src/app/srv/style-manager.service.ts","./projects/docs/src/app/types/common-types.ts","./projects/docs/src/app/values-catalog.ts","./projects/docs/src/environments/environment.ts","./projects/docs/src/main.ts","./projects/docs/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { animate, group, state, style, transition, trigger } from '@angular/animations';\r\n\r\n\r\nexport const animationsForm = [\r\n  trigger('heightGrow', [\r\n      state('closed', style({\r\n          height: 0,\r\n          padding: 0,\r\n          overflow: 'hidden'\r\n      })),\r\n      state('open', style({\r\n          height: 'auto',\r\n          padding: '1.25rem'\r\n      })),\r\n      transition('void => *', animate('0.3s ease'))\r\n  ]),\r\n];\r\n\r\nexport const animationsForm2 = [\r\n  trigger('heightGrow', [\r\n    transition('void <=> *', []),\r\n    transition('* <=> *', [\r\n      style({height: '{{startHeight}}px', opacity: 0}),\r\n      animate('.5s ease'),\r\n    ], {params: {startHeight: 0}})\r\n  ])\r\n];\r\n\r\nexport const animationsForm1 = [\r\n  trigger('heightGrow', [\r\n    transition('void <=> *', []),\r\n    transition('* <=> *', [style({ height: '{{startHeight}}px', opacity: 0 }), animate('.5s ease')], {\r\n      params: { startHeight: 0 }\r\n    })\r\n  ])\r\n];\r\n\r\nexport const animationsForm3 = [\r\n  trigger('heightGrow', [\r\n    state('open', style({ maxHeight: '100px', overflow: 'auto' })),\r\n    state('closed', style({ maxHeight: '60px' })),\r\n    transition('* => closed', animate('0.2s ease')),\r\n    transition('* => open', animate('0.5s ease')),\r\n  ])\r\n];\r\n\r\n\r\nexport const animationsForm4 =  [\r\n  trigger('flyInOut', [\r\n    state('open', style({\r\n      width: 120,\r\n      transform: 'translateX(0)', opacity: 1\r\n    })),\r\n    transition('void => *', [\r\n      style({ width: 10, transform: 'translateX(50px)', opacity: 0 }),\r\n      group([\r\n        animate('0.3s 0.1s ease', style({\r\n          transform: 'translateX(0)',\r\n          width: 120\r\n        })),\r\n        animate('0.3s ease', style({\r\n          opacity: 1\r\n        }))\r\n      ])\r\n    ]),\r\n    transition('* => void', [\r\n      group([\r\n        animate('0.3s ease', style({\r\n          transform: 'translateX(50px)',\r\n          width: 10\r\n        })),\r\n        animate('0.3s 0.2s ease', style({\r\n          opacity: 0\r\n        }))\r\n      ])\r\n    ])\r\n  ])\r\n];\r\n\r\nexport const animationsForm5 = [\r\n  trigger('slideInOut', [\r\n    transition(':enter', [\r\n      style({transform: 'translateY(-100%)'}),\r\n      animate('200ms ease-in', style({transform: 'translateY(0%)'}))\r\n    ]),\r\n    transition(':leave', [\r\n      animate('200ms ease-in', style({transform: 'translateY(-100%)'}))\r\n    ])\r\n  ])\r\n]\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MsalGuard } from '@azure/msal-angular';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { LogInFormComponent } from './security/login-form.component';\r\nimport { SelectivePreloadingStrategyService } from './srv/selective-preloading-strategy.service';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'login', component: LogInFormComponent },\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: [\r\n      { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () =>\r\n          import('./dashboard/dashboard.module').then((m) => m.DashboardModule),\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadChildren: () =>\r\n          import('./home/home.module').then((m) => m.HomeComponentsModule),\r\n      },\r\n      {\r\n        // Needed for hash routing\r\n        path: 'error',\r\n        loadChildren: () =>\r\n          import('./home/home.module').then((m) => m.HomeComponentsModule),\r\n      },\r\n      {\r\n        // Needed for hash routing\r\n        path: 'state',\r\n        loadChildren: () =>\r\n          import('./home/home.module').then((m) => m.HomeComponentsModule),\r\n      },\r\n      {\r\n        // Needed for hash routing\r\n        path: 'code',\r\n        loadChildren: () =>\r\n          import('./home/home.module').then((m) => m.HomeComponentsModule),\r\n      },\r\n      {\r\n        path: 'profile',\r\n        loadChildren: () =>\r\n          import('./profile/profile.module').then((m) => m.ProfileModule),\r\n      },\r\n      {\r\n        path: 'trabajador',\r\n        loadChildren: () =>\r\n          import('./trabajador/trabajador.module').then(\r\n            (m) => m.TrabajadorModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'nómina',\r\n        loadChildren: () =>\r\n          import('./payroll/payroll.module').then((m) => m.PayrollModule),\r\n      },\r\n      {\r\n        path: 'parámetros',\r\n        loadChildren: () =>\r\n          import('./material-component/material.module').then(\r\n            (m) => m.MaterialComponentsModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'subscripciones',\r\n        loadChildren: () =>\r\n          import('./subscription/subscription.module').then(\r\n            (m) => m.SubscriptionComponentsModule\r\n          ),\r\n      },\r\n    ],\r\n  },\r\n  { path: '**', redirectTo: '/dashboard'},\r\n];\r\n\r\nconst isIframe = window !== window.parent && !window.opener;\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      preloadingStrategy: SelectivePreloadingStrategyService,\r\n      initialNavigation: !isIframe ? 'enabled' : 'disabled',\r\n      useHash: true,\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  NavigationCancel,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router,\r\n  RouterEvent,\r\n} from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppStateService } from './srv/app-state.service';\r\nimport { NavigationService } from './srv/navigation.service';\r\nimport { StoredProcedureService } from './srv/payroll/rest/api';\r\nimport { valoresCatalogos } from './types/common-types';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'docs';\r\n  loading: boolean;\r\n  subscriptions: Subscription[] = [];\r\n  states: any[] = [];\r\n  constructor(\r\n    public stateSrv: AppStateService,\r\n    public navSrv: NavigationService,\r\n    private storedProcedureAPISrv: StoredProcedureService\r\n  ) {\r\n    this.loading = true;\r\n    this.subscriptions.push(\r\n      this.exectuteProcedureUsingPOST1(\r\n        valoresCatalogos({\r\n          codigoCatalogo: 'TextosNE',\r\n        })\r\n      ).subscribe({\r\n        next: this.leerTextos,\r\n        error: (err: any) => console.log(err),\r\n      })\r\n    );\r\n  }\r\n\r\n  leerTextos = (data?: any) => {\r\n    if (!data.body?.body) return;\r\n    this.stateSrv.setTextos(\r\n      data.body?.body?.reduce((y: any, t: any) => {\r\n        y[y['code']] = { name: y['name'], description: y['description'] };\r\n        y[t['code']] = { name: t['name'], description: t['description'] };\r\n        return y;\r\n      })\r\n    );\r\n  };\r\n  exectuteProcedureUsingPOST1 = (params: any) =>\r\n    this.storedProcedureAPISrv.exectuteProcedureUsingPOST1(\r\n      params,\r\n      'events',\r\n      true,\r\n      { httpHeaderAccept: 'application/json' }\r\n    );\r\n  get themeState$() {\r\n    return this.stateSrv.themeState$;\r\n  }\r\n}\r\n","<div *ngIf=\"themeState$|async as state\" [attr.class]=\"state.uiPalette\">\r\n  <router-outlet>\r\n    <app-spinner></app-spinner>\r\n  </router-outlet>\r\n\r\n  <mat-card *ngIf=\"state.loading\" class=\"m-0\" style=\"display: flex; justify-content: center; align-items: center\">\r\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n  </mat-card>\r\n</div>\r\n\r\n<div class=\"loading-overlay\" *ngIf=\"navSrv.routeState$ | async as route\">\r\n  <mat-card-content *ngIf=\"route.loading\">\r\n    <mat-card-title>Buffer progress-bar</mat-card-title>\r\n    <mat-card-subtitle><code>&lt;mat-progress-bar mode=\"buffer\"&gt;</code> is a horizontal progress-bar for indicating\r\n      progress and activity.</mat-card-subtitle>\r\n    <mat-progress-bar mode=\"buffer\"></mat-progress-bar>\r\n  </mat-card-content>\r\n  <span class=\"d\">.</span><span class=\"d d-2\">.</span><span class=\"d d-3\">.</span>\r\n</div>\r\n","import { OverlayContainer } from '@angular/cdk/overlay';\r\nimport {\r\n  CommonModule,\r\n  CurrencyPipe,\r\n  getLocaleNumberSymbol,\r\n  LocationStrategy,\r\n  NumberSymbol,\r\n  PathLocationStrategy,\r\n  registerLocaleData,\r\n} from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport localeCo from '@angular/common/locales/es-CO';\r\nimport { DEFAULT_CURRENCY_CODE, LOCALE_ID, NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  MsalBroadcastService,\r\n  MsalGuard,\r\n  MsalGuardConfiguration,\r\n  MsalInterceptor,\r\n  MsalInterceptorConfiguration,\r\n  MsalModule,\r\n  MsalService,\r\n  MSAL_GUARD_CONFIG,\r\n  MSAL_INSTANCE,\r\n  MSAL_INTERCEPTOR_CONFIG,\r\n} from '@azure/msal-angular';\r\nimport {\r\n  BrowserCacheLocation,\r\n  ILoggerCallback,\r\n  InteractionType,\r\n  IPublicClientApplication,\r\n  LogLevel,\r\n  PublicClientApplication,\r\n} from '@azure/msal-browser';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { pairwise } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { apiConfig, b2cPolicies } from './b2c-config';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\nimport { GtdHttpInterceptor } from './guards/http-interceptor.guard';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { HelperComponent } from './layouts/full/helper/helper.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { AppSideMenuComponent } from './layouts/full/sidebar/sidemenu.component';\r\nimport { LogInFormComponent } from './security/login-form.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\nimport { AppStateService } from './srv/app-state.service';\r\nimport { InMemDataService } from './srv/in-mem-data-service';\r\nimport { InMemService } from './srv/in-mem-service';\r\nimport { ApiModule } from './srv/payroll/api.module';\r\nimport {\r\n  Configuration,\r\n  ConfigurationParameters,\r\n} from './srv/payroll/configuration';\r\nimport { StyleManagerService } from './srv/style-manager.service';\r\nimport { NgGtdThemes } from './types/common-types';\r\n\r\nregisterLocaleData(localeCo, 'es-Co');\r\ngetLocaleNumberSymbol('es-CO', NumberSymbol.CurrencyGroup);\r\n\r\nconst isIE =\r\n  window.navigator.userAgent.indexOf('MSIE ') > -1 ||\r\n  window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\nexport const loggerCallback: ILoggerCallback = (\r\n  level: LogLevel,\r\n  message: string,\r\n  containsPii: boolean\r\n) => {\r\n  console.log(message);\r\n};\r\n\r\nexport function MSALInstanceFactory(): IPublicClientApplication {\r\n  return new PublicClientApplication({\r\n    auth: {\r\n      clientId: '81564fb6-eaa3-4c3f-918b-b5f567d4b595',\r\n      authority: b2cPolicies.authorities.signUpSignIn.authority,\r\n      redirectUri: 'https://payroll.dev.fpicolombia.com/',\r\n      postLogoutRedirectUri: '/',\r\n      knownAuthorities: [b2cPolicies.authorityDomain],\r\n    },\r\n    cache: {\r\n      cacheLocation: BrowserCacheLocation.LocalStorage,\r\n      storeAuthStateInCookie: isIE, // set to true for IE 11\r\n    },\r\n    system: {\r\n      loggerOptions: {\r\n        loggerCallback,\r\n        logLevel: LogLevel.Info,\r\n        piiLoggingEnabled: false,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\r\n  const protectedResourceMap = new Map<string, Array<string>>();\r\n  protectedResourceMap.set(apiConfig.uri, apiConfig.scopes);\r\n\r\n  return {\r\n    interactionType: InteractionType.Redirect,\r\n    protectedResourceMap,\r\n  };\r\n}\r\n\r\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\r\n  return {\r\n    interactionType: InteractionType.Redirect,\r\n    authRequest: {\r\n      scopes: [...apiConfig.scopes],\r\n    },\r\n  };\r\n}\r\nexport function apiConfigFactory(): Configuration {\r\n  const params: ConfigurationParameters = {\r\n    apiKeys: {\r\n      'content-Type': 'application/json',\r\n      Authorization: `82e2f0e5-30b2-4e6b-a7ce-99fa407d3b68`,\r\n    },\r\n    basePath: environment.API_GATEWAY,\r\n  };\r\n  return new Configuration(params);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    AppSidebarComponent,\r\n    AppSideMenuComponent,\r\n    HelperComponent,\r\n    SpinnerComponent,\r\n    LogInFormComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    MsalModule,\r\n    MatToolbarModule,\r\n    GoogleChartsModule,\r\n    ApiModule.forRoot(apiConfigFactory),\r\n  ],\r\n  providers: [\r\n    CurrencyPipe,\r\n    { provide: DEFAULT_CURRENCY_CODE, useValue: 'COP' },\r\n    { provide: LOCALE_ID, useValue: 'es-Co' },\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: PathLocationStrategy,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: MsalInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory,\r\n    },\r\n    {\r\n      provide: MSAL_GUARD_CONFIG,\r\n      useFactory: MSALGuardConfigFactory,\r\n    },\r\n    {\r\n      provide: MSAL_INTERCEPTOR_CONFIG,\r\n      useFactory: MSALInterceptorConfigFactory,\r\n    },\r\n    MsalService,\r\n    MsalGuard,\r\n    MsalBroadcastService,\r\n    InMemService,\r\n    InMemDataService,\r\n    AppStateService,\r\n    StyleManagerService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n  constructor(overlayContainer: OverlayContainer, stateSrv: AppStateService) {\r\n    overlayContainer.getContainerElement().classList.add(NgGtdThemes.FpiSkin);\r\n    stateSrv.themeState$.pipe(pairwise()).subscribe(([p, q]) => {\r\n      if (q)\r\n        overlayContainer.getContainerElement().classList.remove(p.uiPalette);\r\n      if (p) overlayContainer.getContainerElement().classList.add(q.uiPalette);\r\n    });\r\n  }\r\n}\r\n","\n/**\n * Enter here the user flows and custom policies for your B2C application,\n * To learn more about user flows, visit https://docs.microsoft.com/en-us/azure/active-directory-b2c/user-flow-overview\n * To learn more about custom policies, visit https://docs.microsoft.com/en-us/azure/active-directory-b2c/custom-policy-overview\n */\nexport const b2cPolicies = {\n    names: {\n        signUpSignIn: \"b2c_1_susi\",\n        forgotPassword: \"b2c_1_reset\",\n        editProfile: \"b2c_1_edit_profile\"\n    },\n    authorities: {\n        signUpSignIn: {\n            authority: \"https://login.microsoftonline.com/49f746c9-a2ca-4f9a-8999-a116947ff6f6\",\n        },\n        forgotPassword: {\n            authority: \"https://fabrikamb2c.b2clogin.com/fabrikamb2c.onmicrosoft.com/b2c_1_reset\",\n        },\n        editProfile: {\n            authority: \"https://fabrikamb2c.b2clogin.com/fabrikamb2c.onmicrosoft.com/b2c_1_edit_profile\"\n        }\n    },\n    authorityDomain: \"fabrikamb2c.b2clogin.com\"\n};\n\n/**\n * Enter here the coordinates of your Web API and scopes for access token request\n * The current application coordinates were pre-registered in a B2C tenant.\n */\nexport const apiConfig: {scopes: string[]; uri: string} = {\n    scopes: ['user.read'],\n    uri: 'https://graph.microsoft.com/v1.0/me'\n};\n","import { PIVOT_DATA } from './data';\r\n\r\nexport const PIVOT_CFG = {\r\n  dataSource: {\r\n    data: PIVOT_DATA,\r\n  },\r\n  slice: {\r\n    rows: [\r\n      {\r\n        uniqueName: 'Concepto',\r\n        sort: 'asc',\r\n      },\r\n      {\r\n        uniqueName: 'Category',\r\n        sort: 'asc',\r\n      },\r\n      {\r\n        uniqueName: 'Measures',\r\n      },\r\n    ],\r\n    columns: [\r\n      {\r\n        uniqueName: 'Tipo',\r\n        sort: 'asc',\r\n      },\r\n    ],\r\n    measures: [\r\n      {\r\n        uniqueName: 'Pago',\r\n        aggregation: 'sum',\r\n        format: \"currency\"\r\n      },\r\n      {\r\n        uniqueName: 'Cantidad',\r\n        aggregation: 'sum',\r\n        format: \"currency\"\r\n      },\r\n    ],\r\n    expands: {\r\n      expandAll: false,\r\n      rows: [\r\n        {\r\n          tuple: ['Concepto.Devengado'],\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          tuple: ['Category.Auxilio'],\r\n        },\r\n      ],\r\n    },\r\n    drills: {\r\n      drillAll: false,\r\n    },\r\n  },\r\n  options: {\r\n    grid: {\r\n      type: 'compact',\r\n      title: '',\r\n      showFilter: true,\r\n      showHeaders: true,\r\n      showTotals: true,\r\n      showGrandTotals: 'on',\r\n      showHierarchies: true,\r\n      showHierarchyCaptions: true,\r\n      showReportFiltersArea: true,\r\n    },\r\n    configuratorActive: false,\r\n    configuratorButton: true,\r\n    showAggregations: true,\r\n    showCalculatedValuesButton: true,\r\n    drillThrough: true,\r\n    showDrillThroughConfigurator: true,\r\n    sorting: 'on',\r\n    datePattern: 'dd/MM/yyyy',\r\n    dateTimePattern: 'dd/MM/yyyy HH:mm:ss',\r\n    saveAllFormats: false,\r\n    showDefaultSlice: true,\r\n    defaultHierarchySortName: 'asc',\r\n  },\r\n  formats: [\r\n    {\r\n      name: '',\r\n      thousandsSeparator: ' ',\r\n      decimalSeparator: '.',\r\n      decimalPlaces: 2,\r\n      maxSymbols: 20,\r\n      currencySymbol: '',\r\n      currencySymbolAlign: 'left',\r\n      nullValue: ' ',\r\n      infinityValue: 'Infinity',\r\n      divideByZeroValue: 'Infinity',\r\n    },\r\n  ],\r\n} as WebDataRocks.Report;\r\n","export const PIVOT_DATA =[\r\n['Category','Size','Tipo','Concepto','Fecha inicio','Operacion','Cantidad','Pago'],\r\n{'Category':'Anticipos','Size':'112 oz','Tipo':'D2','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':42},\r\n{'Category':'Anticipos','Size':'256 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':115,'Pago':44},\r\n{'Category':'Anticipos','Size':'291 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':244,'Pago':22},\r\n{'Category':'Anticipos','Size':'126 oz','Tipo':'D2','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':501556,'Pago':9},\r\n{'Category':'Anticipos','Size':'310 oz','Tipo':'D2','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':292,'Pago':36},\r\n{'Category':'Anticipos','Size':'277 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':1222,'Pago':38},\r\n{'Category':'Anticipos','Size':'147 oz','Tipo':'D1','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':242,'Pago':37},\r\n{'Category':'Anticipos','Size':'181 oz','Tipo':'D2','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':99,'Pago':66 },\r\n{'Category':'Anticipos','Size':'181 oz','Tipo':'D2','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':99,'Pago':66},\r\n{'Category':'Anticipos','Size':'278 oz','Tipo':'D2','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':89,'Pago':47},\r\n{'Category':'Anticipos','Size':'344 oz','Tipo':'D2','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':150,'Pago':30},\r\n{'Category':'Anticipos','Size':'124 oz','Tipo':'D2','Concepto':'Devengado','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':578,'Pago':8},\r\n{'Category':'Anticipos','Size':'23 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/10/2020','Operacion':'Devengado','Cantidad':64,'Pago':70},\r\n{'Category':'Anticipos','Size':'124 oz','Tipo':'D4','Concepto':'Devengado','Fecha inicio':'12/10/2020','Operacion':'Devengado','Cantidad':556,'Pago':95},\r\n{'Category':'Auxilio','Size':'76 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion': 'Devengado','Cantidad':1664,'Pago':75},\r\n{'Category':'Auxilio','Size':'217 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':2995,'Pago':88},\r\n{'Category':'Auxilio','Size':'251 oz','Tipo':'D4','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':1487,'Pago':100},\r\n{'Category':'Auxilio','Size':'292 oz','Tipo':'D4','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':9245,'Pago':29},\r\n{'Category':'Auxilio','Size':'266 oz','Tipo':'D4','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':9008,'Pago':66},\r\n{'Category':'Auxilio','Size':'109 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':1531,'Pago':31},\r\n{'Category':'Auxilio','Size':'54 oz','Tipo':'D2','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':5421,'Pago':22},\r\n{'Category':'Auxilio','Size':'93 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':6975,'Pago':41},\r\n{'Category':'Auxilio','Size':'297 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/09/2020','Operacion':'Deduccion','Cantidad':4320,'Pago':100},\r\n{'Category':'Auxilio','Size':'339 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':3200,'Pago':41},\r\n{'Category':'Auxilio','Size':'205 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':22,'Pago':41},\r\n{'Category':'Auxilio','Size':'226 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/10/2020','Operacion':'Devengado','Cantidad':22,'Pago':42},\r\n{'Category':'Auxilio','Size':'311 oz','Tipo':'D6','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Devengado','Cantidad':75,'Pago':70},\r\n{'Category':'Auxilio','Size':'282 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':6377,'Pago':49},\r\n{'Category':'Auxilio','Size':'100 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/10/2020','Operacion':'Devengado','Cantidad':6650,'Pago':4},\r\n{'Category':'Basico','Size':'284 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':981,'Pago':36},\r\n{'Category':'Basico','Size':'192 oz','Tipo':'D1','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':38},\r\n{'Category':'Basico','Size':'25 oz','Tipo':'D6','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':987,'Pago':72},\r\n{'Category':'Basico','Size':'39 oz','Tipo':'D6','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':987,'Pago':90},\r\n{'Category':'Basico','Size':'36 oz','Tipo':'D4','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':93},\r\n{'Category':'Basico','Size':'208 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/09/2020','Operacion':'Deduccion','Cantidad':987,'Pago':40},\r\n{'Category':'Basico','Size':'147 oz','Tipo':'D1','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':24},\r\n{'Category':'Basico','Size':'68 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':987,'Pago':40},\r\n{'Category':'Bono','Size':'144 oz','Tipo':'D4','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion': 'Devengado','Cantidad':987,'Pago':26},\r\n{'Category':'Bono','Size':'283 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':987,'Pago':42},\r\n{'Category':'Bono','Size':'299 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':58},\r\n{'Category':'Bono','Size':'88 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':35},\r\n{'Category':'Bono','Size':'161 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':987,'Pago':42},\r\n{'Category':'Bono','Size':'25 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':987,'Pago':97},\r\n{'Category':'Bono','Size':'317 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':64},\r\n{'Category':'Bono','Size':'295 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':10},\r\n{'Category':'Bono','Size':'69 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':36},\r\n{'Category':'Bono','Size':'320 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/09/2020','Operacion':'Devengado','Cantidad':987,'Pago':78},\r\n{'Category':'Bono','Size':'340 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':987,'Pago':62},\r\n{'Category':'Bono','Size':'49 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':29},\r\n{'Category':'Bono','Size':'94 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':98},\r\n{'Category':'Bono','Size':'203 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':62},\r\n{'Category':'Bono','Size':'350 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/09/2020','Operacion':'Devengado','Cantidad':987,'Pago':46},\r\n{'Category':'Bono','Size':'200 oz','Tipo':'D4','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':987,'Pago':88},\r\n{'Category':'Bono','Size':'231 oz','Tipo':'D3','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':987,'Pago':94},\r\n{'Category':'Bono','Size':'26 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':14},\r\n{'Category':'Bono','Size':'140 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':76},\r\n{'Category':'Bono','Size':'158 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':987,'Pago':35},\r\n{'Category':'Bono','Size':'116 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':21},\r\n{'Category':'Bono','Size':'263 oz','Tipo':'D1','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Devengado','Cantidad':987,'Pago':43},\r\n{'Category':'Comision','Size':'349 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':987,'Pago':47},\r\n{'Category':'Comision','Size':'67 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':8},\r\n{'Category':'Comision','Size':'70 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':14},\r\n{'Category':'Comision','Size':'17 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':10},\r\n{'Category':'Comision','Size':'270 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':18},\r\n{'Category':'Comision','Size':'105 oz','Tipo':'D4','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion': 'Devengado','Cantidad':987,'Pago':3},\r\n{'Category':'Comision','Size':'91 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Devengado','Cantidad':987,'Pago':46},\r\n{'Category':'Comision','Size':'39 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':64},\r\n{'Category':'Comision','Size':'4 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/12/2020','Operacion':'Deduccion','Cantidad':987,'Pago':22},\r\n{'Category':'Comision','Size':'128 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':987,'Pago':49},\r\n{'Category':'Comision','Size':'193 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':59},\r\n{'Category':'Cesantia','Size':'159 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':65},\r\n{'Category':'Cesantia','Size':'159 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':65},\r\n{'Category':'Cesantia','Size':'63 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':53},\r\n{'Category':'Cesantia','Size':'246 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':17},\r\n{'Category':'Cesantia','Size':'246 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':17},\r\n{'Category':'Cesantia','Size':'280 oz','Tipo':'D4','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':987,'Pago':92},\r\n{'Category':'Cesantia','Size':'280 oz','Tipo':'D4','Concepto':'Deduccion','Fecha inicio':'12/10/2020','Operacion':'Deduccion','Cantidad':987,'Pago':92},\r\n{'Category':'Cesantia','Size':'103 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':987,'Pago':7},\r\n{'Category':'Cesantia','Size':'103 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion': 'Devengado','Cantidad':987,'Pago':7},\r\n{'Category':'Cesantia','Size':'184 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':57},\r\n{'Category':'Compensacion','Size':'184 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':57},\r\n{'Category':'Huelga Legal','Size':'340 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':37},\r\n{'Category':'Nota','Size':'340 oz','Tipo':'D3','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':37},\r\n{'Category':'Incapacidad','Size':'251 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':33},\r\n{'Category':'Licencia','Size':'251 oz','Tipo':'D5','Concepto':'Devengado','Fecha inicio':'12/11/2020','Operacion':'Deduccion','Cantidad':987,'Pago':33},\r\n{'Category':'Libranza','Size':'92 oz','Tipo':'D5','Concepto':'Deduccion','Fecha inicio':'12/11/2020','Operacion':'Devengado','Cantidad':987,'Pago':33},\r\n];\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport WebDataRocks from 'webdatarocks';\r\nimport { PIVOT_CFG } from './config';\r\n@Component({\r\n  selector: 'wbr-pivot',\r\n  template: `<div><div class=\"wbr-ng-wrapper\"></div></div>`,\r\n})\r\nexport class WebdatarocksComponent implements OnInit {\r\n  // params\r\n  @Input() toolbar: boolean = false;\r\n  @Input() width: string | number = 200;\r\n  @Input() height: string | number = 200;\r\n  @Input() report:any = PIVOT_CFG;\r\n  @Input() global?: WebDataRocks.Report;\r\n  @Input() customizeCell?: (\r\n    cell: WebDataRocks.CellBuilder,\r\n    data: WebDataRocks.CellData\r\n  ) => void;\r\n  // events\r\n  @Output() cellclick: EventEmitter<WebDataRocks.CellData> = new EventEmitter();\r\n  @Output() celldoubleclick: EventEmitter<WebDataRocks.CellData> =\r\n    new EventEmitter();\r\n  @Output() dataerror: EventEmitter<object> = new EventEmitter();\r\n  @Output() datafilecancelled: EventEmitter<object> = new EventEmitter();\r\n  @Output() dataloaded: EventEmitter<object> = new EventEmitter();\r\n  @Output() datachanged: EventEmitter<object> = new EventEmitter();\r\n  @Output() fieldslistclose: EventEmitter<object> = new EventEmitter();\r\n  @Output() fieldslistopen: EventEmitter<object> = new EventEmitter();\r\n  @Output() filteropen: EventEmitter<object> = new EventEmitter();\r\n  @Output() fullscreen: EventEmitter<object> = new EventEmitter();\r\n  @Output() loadingdata: EventEmitter<object> = new EventEmitter();\r\n  @Output() loadinglocalization: EventEmitter<object> = new EventEmitter();\r\n  @Output() loadingreportfile: EventEmitter<object> = new EventEmitter();\r\n  @Output() localizationerror: EventEmitter<object> = new EventEmitter();\r\n  @Output() localizationloaded: EventEmitter<object> = new EventEmitter();\r\n  @Output() openingreportfile: EventEmitter<object> = new EventEmitter();\r\n  @Output() querycomplete: EventEmitter<object> = new EventEmitter();\r\n  @Output() queryerror: EventEmitter<object> = new EventEmitter();\r\n  @Output() ready: EventEmitter<WebDataRocks.Pivot> = new EventEmitter();\r\n  @Output() reportchange: EventEmitter<object> = new EventEmitter();\r\n  @Output() reportcomplete: EventEmitter<object> = new EventEmitter();\r\n  @Output() reportfilecancelled: EventEmitter<object> = new EventEmitter();\r\n  @Output() reportfileerror: EventEmitter<object> = new EventEmitter();\r\n  @Output() reportfileloaded: EventEmitter<object> = new EventEmitter();\r\n  @Output() runningquery: EventEmitter<object> = new EventEmitter();\r\n  @Output() update: EventEmitter<object> = new EventEmitter();\r\n  @Output() beforetoolbarcreated: EventEmitter<object> = new EventEmitter();\r\n  @Output() aftergriddraw: EventEmitter<object> = new EventEmitter();\r\n  @Output() beforegriddraw: EventEmitter<object> = new EventEmitter();\r\n  // api\r\n  public webDataRocks?: WebDataRocks.Pivot;\r\n  // private\r\n  private root?: HTMLElement;\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.root = this.el.nativeElement as HTMLElement;\r\n    this.webDataRocks = new WebDataRocks({\r\n      container: this.root.getElementsByClassName('wbr-ng-wrapper')[0],\r\n      width: this.width,\r\n      height: this.height,\r\n      toolbar: this.toolbar,\r\n      report: this.report,\r\n      global: this.global,\r\n      customizeCell: this.customizeCell,\r\n      cellclick: (cell: WebDataRocks.CellData) => this.cellclick.next(cell),\r\n      celldoubleclick: (cell: WebDataRocks.CellData) =>\r\n        this.celldoubleclick.next(cell),\r\n      dataerror: (event: object) => this.dataerror.next(event),\r\n      datafilecancelled: () => this.datafilecancelled.next(),\r\n      dataloaded: () => this.dataloaded.next(),\r\n      datachanged: (event: object) => this.datachanged.next(event),\r\n      fieldslistclose: () => this.fieldslistclose.next(),\r\n      fieldslistopen: () => this.fieldslistopen.next(),\r\n      filteropen: () => this.filteropen.next(),\r\n      loadingdata: () => this.loadingdata.next(),\r\n      loadinglocalization: () => this.loadinglocalization.next(),\r\n      loadingreportfile: () => this.loadingreportfile.next(),\r\n      localizationerror: () => this.localizationerror.next(),\r\n      localizationloaded: () => this.localizationloaded.next(),\r\n      openingreportfile: () => this.openingreportfile.next(),\r\n      querycomplete: () => this.querycomplete.next(),\r\n      queryerror: () => this.queryerror.next(),\r\n      ready: () => this.ready.next(this.webDataRocks),\r\n      reportchange: () => this.reportchange.next(),\r\n      reportcomplete: () => this.reportcomplete.next(),\r\n      reportfilecancelled: () => this.reportfilecancelled.next(),\r\n      reportfileerror: () => this.reportfileerror.next(),\r\n      reportfileloaded: () => this.reportfileloaded.next(),\r\n      runningquery: () => this.runningquery.next(),\r\n      update: () => this.update.next(),\r\n      beforetoolbarcreated: (toolbar: object) =>\r\n        this.beforetoolbarcreated.next(toolbar),\r\n      aftergriddraw: (event: object) => this.aftergriddraw.next(event),\r\n      beforegriddraw: (event: object) => this.beforegriddraw.next(event),\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {\r\n  MatSidenavContainer,\r\n  MatSidenavModule\r\n} from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatBadgeModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule,\r\n  ],\r\n  providers: [MatSidenavContainer],\r\n})\r\nexport class DemoMaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanDeactivate,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { confirm } from '../types/common-types';\r\n\r\nexport interface DirtyComponent {\r\n  isDirty$: BehaviorSubject<boolean>;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DirtyCheckGuard\r\n  implements CanActivate, CanDeactivate<DirtyComponent>\r\n{\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    debugger;\r\n    return true;\r\n  }\r\n\r\n  canDeactivate(component: DirtyComponent) {\r\n    return component.isDirty$.pipe(\r\n      switchMap((dirty) => {\r\n        if (dirty === false) {\r\n          return of(true);\r\n        }\r\n        return confirm(\r\n          this.dialog,\r\n          `Tiene cambios sin guardar ¿Desea salir de la página actual?`\r\n        );\r\n      }),\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostListener,\r\n  Input\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\r\nimport {\r\n  numberWithCommas,\r\n  parseLocaleNumber\r\n} from '../types/common-types';\r\n\r\n@Directive({\r\n  selector: 'input[gtdInputFormatter]',\r\n  providers: [\r\n    {\r\n      provide: MAT_INPUT_VALUE_ACCESSOR,\r\n      useExisting: GtdInputFormatterDirective,\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => GtdInputFormatterDirective),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class GtdInputFormatterDirective {\r\n  private _value?: string;\r\n\r\n  constructor(private elementRef: ElementRef<HTMLInputElement>) {}\r\n\r\n  get value(): string {\r\n    return this._value!;\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: string) {\r\n    this._value = value;\r\n    this.formatValue(value);\r\n  }\r\n\r\n  private formatValue(value: string | null) {\r\n    if (value !== null) {\r\n      this.elementRef.nativeElement.value = numberWithCommas(value);\r\n    } else {\r\n      this.elementRef.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  private unFormatValue() {\r\n    const value = parseLocaleNumber(\r\n      this.elementRef.nativeElement.value,\r\n      'es-CO'\r\n    );\r\n    this._value = value.toString();\r\n    if (value) {\r\n      this.elementRef.nativeElement.value = this._value;\r\n    } else {\r\n      this.elementRef.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  @HostListener('input', ['$event.target.value'])\r\n  onInput(value: any) {\r\n    // here we cut any non numerical symbols\r\n    this._value = value;\r\n    this.formatValue(value);\r\n    this._onChange(this._value);\r\n  }\r\n\r\n  @HostListener('blur')\r\n  _onBlur() {\r\n    // this.formatValue(this._value!); // add commas\r\n  }\r\n\r\n  @HostListener('focus')\r\n  onFocus() {\r\n    // this.unFormatValue(); // remove commas for editing purpose\r\n  }\r\n  _onChange(value: any): void {}\r\n\r\n  writeValue(value: any) {\r\n    this._value = value;\r\n    this.formatValue(this._value!); // format Value\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostListener,\r\n  Input,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\r\nimport { safeText } from '../types/common-types';\r\n\r\n@Directive({\r\n  selector: 'input[gtdTextFormatter]',\r\n  providers: [\r\n    {\r\n      provide: MAT_INPUT_VALUE_ACCESSOR,\r\n      useExisting: GtdTextFormatterDirective,\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => GtdTextFormatterDirective),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class GtdTextFormatterDirective {\r\n  private _value?: string;\r\n\r\n  constructor(private elementRef: ElementRef<HTMLInputElement>) {}\r\n\r\n  get value(): string {\r\n    return this._value!;\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: string) {\r\n    this._value = value;\r\n    this.formatValue(value);\r\n  }\r\n\r\n  private formatValue(value: string | null) {\r\n    if (value !== null) {\r\n      this._value = safeText(value);\r\n      this.elementRef.nativeElement.value = safeText(value);\r\n    } else {\r\n      this._value = '';\r\n      this.elementRef.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  private unFormatValue() {\r\n    this._value = this._value?.toString();\r\n    if (this._value) {\r\n      this.elementRef.nativeElement.value = this._value;\r\n    } else {\r\n      this.elementRef.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  @HostListener('input', ['$event.target.value'])\r\n  onInput(value: any) {\r\n    // here we cut any non numerical symbols\r\n    this._value = safeText(value);\r\n    this.formatValue(value);\r\n    this._onChange(this._value);\r\n  }\r\n\r\n  @HostListener('blur')\r\n  _onBlur() {\r\n    // this.formatValue(this._value!); // add commas\r\n  }\r\n\r\n  @HostListener('focus')\r\n  onFocus() {\r\n    // this.unFormatValue(); // remove commas for editing purpose\r\n  }\r\n  _onChange(value: any): void {}\r\n\r\n  writeValue(value: any) {\r\n    this._value = safeText(value);\r\n    this.formatValue(this._value!); // format Value\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToolbarComponent } from '../../material-component/toolbar/toolbar.component';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\nimport { AppStateService } from '../../srv/app-state.service';\r\nimport { NavigationService } from '../../srv/navigation.service';\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: ['full.component.scss'],\r\n})\r\nexport class FullComponent {\r\n  @ViewChild(ToolbarComponent)\r\n  selectedPane: any;\r\n\r\n  get activeRoute() {\r\n    const items = decodeURIComponent(this.router.url)?.split('/');\r\n    const item = this.menuItemsSrv?.menuState$?.value?.menuItems\r\n      ?.filter((item) => {\r\n        return item.state === `${items[1]}`;\r\n      })\r\n      .map((item) => {\r\n        const items2 = items[2]?.split(';')?.[0] ?? items[2]!;\r\n        if (item.state === `${items[1]}`) {\r\n          return item.menuItems?.filter(\r\n            (item) => item.state === `/${items[1]}/${items2}`\r\n          )?.[0]?.name;\r\n        }\r\n        return item.state;\r\n      })?.[0];\r\n    return `${item ?? 'Nómina Electrónica'}`;\r\n  }\r\n\r\n  constructor(\r\n    public menuItemsSrv: MenuItems,\r\n    public stateSrv: AppStateService,\r\n    public router: Router,\r\n    public navSrv: NavigationService\r\n  ) {}\r\n  toggleMenu() {\r\n    this.stateSrv.toggleMenu();\r\n  }\r\n\r\n  get themeState$() {\r\n    return this.stateSrv.themeState$;\r\n  }\r\n\r\n}\r\n","<div class=\"main-container\" *ngIf=\"themeState$ | async as state\">\r\n  <mat-drawer-container class=\"page-container\" [style.marginTop.px]=\"state.Medium ? 0 : 0\"\r\n    (backdropClick)=\"stateSrv.toggleMenu()\">\r\n    <mat-drawer #snav id=\"snav\" class=\"dark-sidebar pl-xs\" mode=\"over\" [opened]=\"state.visibleMenu\" disableClose=\"false\"\r\n      style=\"direction: rtl \">\r\n      <app-sidebar></app-sidebar>\r\n    </mat-drawer>\r\n    <mat-drawer-content class=\"page-wrapper\">\r\n      <mat-toolbar class=\"topbar telative\" *ngIf=\"!state.fullScreen\">\r\n        <button mat-icon-button (click)=\"toggleMenu()\" value=\"sidebarclosed\"\r\n          style=\"color: var(--secondary-light)!important\">\r\n          <mat-icon>apps</mat-icon>\r\n        </button>\r\n        <div class=\"navbar-header d-flex align-items-center\">\r\n          <a class=\"navbar-brand\" (click)=\"navSrv.navigate('/nómina')\">\r\n            <h3>{{activeRoute}}</h3>\r\n          </a>\r\n        </div>\r\n        <span fxFlex></span>\r\n        <app-header></app-header>\r\n      </mat-toolbar>\r\n        <router-outlet>\r\n          <app-spinner></app-spinner>\r\n        </router-outlet>\r\n    </mat-drawer-content>\r\n  </mat-drawer-container>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  MsalBroadcastService, MsalGuardConfiguration,\r\n  MsalService, MSAL_GUARD_CONFIG\r\n} from '@azure/msal-angular';\r\nimport {\r\n  AuthenticationResult,\r\n\r\n  EventMessage,\r\n  EventType, InteractionStatus,\r\n\r\n\r\n\r\n\r\n  InteractionType, PopupRequest, RedirectRequest\r\n} from '@azure/msal-browser';\r\nimport { AuthError } from 'msal';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { b2cPolicies } from '../../../b2c-config';\r\nimport { InMemService } from '../../../srv/in-mem-service';\r\nimport { AppStateService } from '../../../srv/app-state.service';\r\nimport {\r\n  NgGtdThemes\r\n} from '../../../types/common-types';\r\nimport { SignInComponent } from './sign-in.component';\r\n\r\ninterface IdTokenClaims extends AuthenticationResult {\r\n  idTokenClaims: {\r\n    acr?: string;\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: [],\r\n})\r\nexport class AppHeaderComponent implements OnInit, OnDestroy {\r\n  title = 'MSAL Angular v2 B2C Sample';\r\n  isIframe = false;\r\n  loginDisplay = false;\r\n  private readonly _destroying$ = new Subject<void>();\r\n  email: string | undefined;\r\n  name: 'compañer@' | undefined;\r\n\r\n  constructor(\r\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\r\n    private authService: MsalService,\r\n    private msalBroadcastService: MsalBroadcastService,\r\n    public dialog: MatDialog,\r\n    public inMemSrv: InMemService,\r\n    public http: HttpClient,\r\n    public stateSrv: AppStateService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isIframe = window !== window.parent && !window.opener;\r\n    this.setLoginDisplay();\r\n\r\n    this.msalBroadcastService.inProgress$\r\n      .pipe(\r\n        filter(\r\n          (status: InteractionStatus) => status === InteractionStatus.None\r\n        ),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe(() => {\r\n        this.setLoginDisplay();\r\n      });\r\n\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter(\r\n          (msg: EventMessage) =>\r\n            msg.eventType === EventType.LOGIN_SUCCESS ||\r\n            msg.eventType === EventType.ACQUIRE_TOKEN_SUCCESS\r\n        ),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe((result: EventMessage) => {\r\n        let payload: IdTokenClaims = <AuthenticationResult>result.payload;\r\n\r\n        // We need to reject id tokens that were not issued with the default sign-in policy.\r\n        // \"acr\" claim in the token tells us what policy is used (NOTE: for new policies (v2.0), use \"tfp\" instead of \"acr\")\r\n        // To learn more about b2c tokens, visit https://docs.microsoft.com/en-us/azure/active-directory-b2c/tokens-overview\r\n\r\n        if (payload.idTokenClaims?.acr === b2cPolicies.names.forgotPassword) {\r\n          window.alert(\r\n            'Password has been reset successfully. \\nPlease sign-in with your new password.'\r\n          );\r\n          return this.authService.logout();\r\n        } else if (\r\n          payload.idTokenClaims['acr'] === b2cPolicies.names.editProfile\r\n        ) {\r\n          window.alert(\r\n            'Profile has been updated successfully. \\nPlease sign-in again.'\r\n          );\r\n          return this.authService.logout();\r\n        }\r\n\r\n        return result;\r\n      });\r\n\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter(\r\n          (msg: EventMessage) =>\r\n            msg.eventType === EventType.LOGIN_FAILURE ||\r\n            msg.eventType === EventType.ACQUIRE_TOKEN_FAILURE\r\n        ),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe((result: EventMessage) => {\r\n        if (result.error instanceof AuthError) {\r\n          // Check for forgot password error\r\n          // Learn more about AAD error codes at https://docs.microsoft.com/azure/active-directory/develop/reference-aadsts-error-codes\r\n          if (result.error.message.includes('AADB2C90118')) {\r\n            // login request with reset authority\r\n            let resetPasswordFlowRequest = {\r\n              scopes: ['openid'],\r\n              authority: b2cPolicies.authorities.forgotPassword.authority,\r\n            };\r\n\r\n            this.login(resetPasswordFlowRequest);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setLoginDisplay() {\r\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\r\n  }\r\n\r\n  login(userFlowRequest?: RedirectRequest | PopupRequest) {\r\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n      if (this.msalGuardConfig.authRequest) {\r\n        this.authService\r\n          .loginPopup({\r\n            ...this.msalGuardConfig.authRequest,\r\n            ...userFlowRequest,\r\n          } as PopupRequest)\r\n          .subscribe((response: AuthenticationResult) => {\r\n            this.authService.instance.setActiveAccount(response.account);\r\n          });\r\n      } else {\r\n        this.authService\r\n          .loginPopup(userFlowRequest)\r\n          .subscribe((response: AuthenticationResult) => {\r\n            this.authService.instance.setActiveAccount(response.account);\r\n          });\r\n      }\r\n    } else {\r\n      if (this.msalGuardConfig.authRequest) {\r\n        this.authService.loginRedirect({\r\n          ...this.msalGuardConfig.authRequest,\r\n          ...userFlowRequest,\r\n        } as RedirectRequest);\r\n      } else {\r\n        this.authService.loginRedirect(userFlowRequest);\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n      this.authService.logoutPopup({\r\n        mainWindowRedirectUri: '/',\r\n      });\r\n    } else {\r\n      this.authService.logoutRedirect();\r\n    }\r\n  }\r\n\r\n  editProfile() {\r\n    let editProfileFlowRequest = {\r\n      scopes: ['openid'],\r\n      authority: b2cPolicies.authorities.editProfile.authority,\r\n    };\r\n\r\n    this.login(editProfileFlowRequest);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroying$.next(undefined);\r\n    this._destroying$.complete();\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(SignInComponent, {\r\n      width: '450px',\r\n      data: { name: this.name, email: this.email },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n      this.email = result;\r\n    });\r\n  }\r\n\r\n  changeTheme(themeToSet: NgGtdThemes) {\r\n    this.stateSrv.setUiPalette(themeToSet);\r\n  }\r\n\r\n  invertTheme() {\r\n    this.stateSrv.invertTheme();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"stateSrv.themeState$ | async as state\">\r\n  <mat-menu #messagesMenu=\"matMenu\" class=\"mymegamenu\" (click)=\"$event.stopPropagation();\">\r\n    <button mat-menu-item *ngFor=\"let option of state.messages\" (click)=\"$event.stopPropagation();\">\r\n      <mat-icon class=\"mt-4\">{{option.code}}</mat-icon> <span>{{option.name}}</span>\r\n    </button>\r\n  </mat-menu>\r\n  <mat-menu #notificationsMenu=\"matMenu\" class=\"mymegamenu\" (click)=\"$event.stopPropagation();\">\r\n    <button mat-menu-item *ngFor=\"let option of state.notifications\" (click)=\"$event.stopPropagation();\">\r\n      <mat-icon>{{option.code}}</mat-icon> {{option.name}}\r\n    </button>\r\n  </mat-menu>\r\n  <button mat-icon-button class=\"m-4\"> <img src=\"assets/images/logo__globaltek.png\"\r\n      alt=\"user\" class=\"profile-pic\"> </button>\r\n  <mat-menu #options=\"matMenu\" class=\"mymegamenu\">\r\n    <button mat-menu-item [routerLink]=\"['profile']\">\r\n      <mat-icon>account_box</mat-icon> Perfil\r\n    </button>\r\n    <button mat-menu-item *ngIf=\"!loginDisplay\" (click)=\"openDialog()\">\r\n      <mat-icon>exit_to_app</mat-icon> Log In\r\n    </button>\r\n    <button mat-menu-item *ngIf=\"!loginDisplay\" (click)=\"login()\">\r\n      <mat-icon>exit_to_app</mat-icon> Sign In\r\n    </button>\r\n    <button mat-menu-item *ngIf=\"loginDisplay\" (click)=\"logout()\">\r\n      <mat-icon>exit_to_app</mat-icon> Sign Out\r\n    </button>\r\n    <button mat-menu-item [matMenuTriggerFor]=\"profile\">\r\n      <mat-icon>settings</mat-icon> Ver más ...\r\n    </button>\r\n  </mat-menu>\r\n  <mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\r\n    <button mat-menu-item [matMenuTriggerFor]=\"accessibility\">\r\n      <mat-icon>accessibility</mat-icon> Accesibilidad\r\n    </button>\r\n    <button mat-menu-item>\r\n      <mat-icon>notifications_off</mat-icon> Desactivar notificaciones\r\n    </button>\r\n    <button mat-menu-item (click)=\"editProfile()\">\r\n      <mat-icon>settings</mat-icon> Editar perfil\r\n    </button>\r\n    <button mat-menu-item (click)=\"invertTheme()\">\r\n      <mat-icon>invert_colors</mat-icon> Invertir colores\r\n    </button>\r\n    <button [matMenuTriggerFor]=\"palette\" mat-menu-item (click)=\"$event.stopPropagation();\">\r\n      <mat-icon>palette</mat-icon> Paleta colores\r\n    </button>\r\n  </mat-menu>\r\n  <mat-menu #accessibility=\"matMenu\" class=\"mymegamenu\">\r\n    <button mat-menu-item>\r\n      <mat-icon>open_in_full</mat-icon> Pantalla completa\r\n    </button>\r\n  </mat-menu>\r\n  <mat-menu #palette=\"matMenu\" class=\"mymegamenu\" (click)=\"$event.stopPropagation();\">\r\n    <button mat-menu-item *ngFor=\"let option of stateSrv.themes\"\r\n      (click)=\"changeTheme(option.catalog);$event.stopPropagation();\">\r\n      <mat-icon role=\"img\" svgicon=\"theme-example\" aria-hidden=\"true\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" height=\"100%\"\r\n          viewBox=\"0 0 80 80\" fit=\"\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\">\r\n          <defs>\r\n            <path\r\n              d=\"M77.87 0C79.05 0 80 .95 80 2.13v75.74c0 1.17-.95 2.13-2.13 2.13H2.13C.96 80 0 79.04 0 77.87V2.13C0 .95.96 0 2.13 0h75.74z\"\r\n              id=\"a\">\r\n            </path>\r\n            <path\r\n              d=\"M54 40c3.32 0 6 2.69 6 6 0 1.2 0-1.2 0 0 0 3.31-2.68 6-6 6H26c-3.31 0-6-2.69-6-6 0-1.2 0 1.2 0 0 0-3.31 2.69-6 6-6h28z\"\r\n              id=\"b\">\r\n            </path>\r\n            <path d=\"M0 0h80v17.24H0V0z\" id=\"c\"></path>\r\n          </defs>\r\n          <use xlink:href=\"#a\" [attr.fill]=\"option.backgroundColor\"></use>\r\n          <use xlink:href=\"#b\" [attr.fill]=\"option.buttonColor\"></use>\r\n          <use xlink:href=\"#c\" [attr.fill]=\"option.headingColor\"></use>\r\n        </svg>\r\n      </mat-icon>\r\n      <span>{{ option.label }}</span>\r\n    </button>\r\n  </mat-menu>\r\n</ng-container>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-sign-in-dialog',\r\n  template: `<h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n  <form [formGroup]=\"form\">\r\n\r\n    <div mat-dialog-content>\r\n      <p>What's your email?</p>\r\n      <mat-form-field>\r\n        <input matInput tabindex=\"1\" [(ngModel)]=\"data.email\"\r\n            formControlName=\"email\"\r\n            id=\"email\"\r\n            type=\"text\"\r\n            class=\"form-control\">\r\n        <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"alert alert-danger\">\r\n            <div *ngIf=\"f.email.errors?.required\">email es obligatorio.</div>\r\n            <div *ngIf=\"f.email.errors?.email\">Please, enter valid email address.</div>\r\n        </div>\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button [mat-dialog-close]=\"data.email\" tabindex=\"2\">Aceptar</button>\r\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">No Thanks</button>\r\n    </div>\r\n  </form>\r\n  `\r\n})\r\nexport class SignInComponent {\r\n\r\n  form = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email])\r\n  });\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SignInComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n\r\n  get f(){\r\n    return this.form.controls;\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-helper-overview-grap',\r\n  templateUrl: './helper.component.html',\r\n  styleUrls: ['./helper.component.scss'],\r\n})\r\nexport class HelperComponent implements AfterViewInit {\r\n  ngAfterViewInit() {}\r\n}\r\n","<div class=\"fixed-plugin\">\r\n  <ng-content></ng-content>\r\n  <div class=\"dropdown show-dropdown\">\r\n    <a href=\"#\" data-toggle=\"dropdown\">\r\n      <i class=\"fa fa-cog fa-2x\"> </i>\r\n    </a>\r\n    <ul class=\"dropdown-menu\">\r\n      <li class=\"header-title\"> Sidebar Filters</li>\r\n      <li class=\"adjustments-line\">\r\n        <a href=\"javascript:void(0)\" class=\"switch-trigger active-color\">\r\n          <div class=\"badge-colors ml-auto mr-auto\">\r\n            <span class=\"badge filter badge-purple\" data-color=\"purple\"></span>\r\n            <span class=\"badge filter badge-azure\" data-color=\"azure\"></span>\r\n            <span class=\"badge filter badge-green\" data-color=\"green\"></span>\r\n            <span class=\"badge filter badge-warning\" data-color=\"orange\"></span>\r\n            <span class=\"badge filter badge-danger\" data-color=\"danger\"></span>\r\n            <span class=\"badge filter badge-rose active\" data-color=\"rose\"></span>\r\n          </div>\r\n          <div class=\"clearfix\"></div>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport { ChangeDetectorRef, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\nimport { NavigationService } from '../../../srv/navigation.service';\r\nimport { AppStateService } from '../../../srv/app-state.service';\r\nimport { animationsForm4 } from '../../../animations/form-animation';\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n  styles: [''],\r\n  animations: animationsForm4\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n  form: FormGroup;\r\n  private _mobileQueryListener: () => void;\r\n  @ViewChild('snav') sidenav!: MatSidenav;\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 4, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 3, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    // {text: 'Four', cols: 4, rows: 4, color: 'lightgreen'},\r\n  ];\r\n  state = \"open\";\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItemsSrv: MenuItems,\r\n    public stateSrv: AppStateService,\r\n    public navSrv: NavigationService\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n    this.form = new FormGroup({ menuItem: new FormControl() });\r\n    this.form.valueChanges.subscribe((filter) => {\r\n\r\n      this.menuItemsSrv.filter(filter?.menuItem);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n\r\n  get themeState$() {\r\n    return this.stateSrv.themeState$;\r\n  }\r\n\r\n  filter(filterValue: string) {\r\n    this.menuItemsSrv.filter(filterValue);\r\n  }\r\n\r\n  applyFilter(event?: Event) {\r\n    const filterValue =\r\n      (event?.target as HTMLInputElement)?.value?.trim()?.toLowerCase() || '';\r\n    this.filter(filterValue);\r\n  }\r\n\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n  changeState(): void {\r\n    (this.state == \"closed\") ? this.state = \"open\" : this.state = \"closed\";\r\n  }\r\n}\r\n","<ng-container  *ngIf=\"themeState$ | async as state\" >\r\n    <div class=\"user-profile\">\r\n      <div class=\"profile-text\">\r\n        <a [matMenuTriggerFor]=\"sdprofile\" class=\"\">\r\n          Administrador\r\n          <em class=\"ti-angle-down font-12 m-l-5\"></em>\r\n        </a>\r\n      </div>\r\n      <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\r\n        <button mat-menu-item>\r\n          <mat-icon>settings</mat-icon> Settings\r\n        </button>\r\n        <button mat-menu-item>\r\n          <mat-icon>account_box</mat-icon> Profile\r\n        </button>\r\n        <button mat-menu-item>\r\n          <mat-icon>notifications_off</mat-icon> Disable notifications\r\n        </button>\r\n        <button mat-menu-item>\r\n          <mat-icon>exit_to_app</mat-icon> Sign Out\r\n        </button>\r\n      </mat-menu>\r\n\r\n\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field class=\" mt-4 find-menu-item\" style=\"direction: ltr; padding: 0px 15px \">\r\n          <mat-label>Buscar...</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"menuItem\" placeholder=\"Buscar\" #buscar>\r\n          <mat-icon *ngIf=\"buscar.value\" (click)=\"buscar.value = ''; filter(''); $event.stopPropagation();\" matSuffix mat-fab>clear</mat-icon>\r\n        </mat-form-field>\r\n      </form>\r\n    </div>\r\n\r\n\r\n    <mat-nav-list appAccordion style=\"direction: ltr \" *ngIf=\"menuItemsSrv.menuState$ | async as menuState\">\r\n      <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuState.menuItems; let i = index;\" routerLinkActive=\"selected\"\r\n        group=\"{{menuitem.state}}\" class=\"list-item\">\r\n        <a class=\"\" appAccordionToggle (click)=\"stateSrv.toggleMenu();\" (click)=\"navSrv.navigate(menuitem.state!)\"\r\n          *ngIf=\"menuitem.type === 'link'\">\r\n          <!-- <mat-icon>{{ menuitem.icon }}</mat-icon> -->\r\n          <span class=\"dd-icon\">{{ menuItemsSrv.codePoint(menuitem.emoji) }}&nbsp;</span>\r\n          <span >{{ menuitem.name }}</span>\r\n          <!-- <span fxFlex><p [matBadge]=\"i\" matBadgeColor=\"primary\"></p></span> -->\r\n          <!-- <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> -->\r\n        </a>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n\r\n\r\n\r\n  <!-- <app-helper-overview-grap>\r\n    <button mat-icon-button (click)=\"stateSrv.toggleMenu()\" value=\"sidebarclosed\" style=\"color: var(--light-accent-text)\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n  </app-helper-overview-grap> -->\r\n</ng-container>\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport { ChangeDetectorRef, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\nimport { NavigationService } from '../../../srv/navigation.service';\r\nimport { AppStateService } from '../../../srv/app-state.service';\r\nimport { animationsForm4 } from '../../../animations/form-animation';\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidemenu',\r\n  templateUrl: './sidemenu.component.html',\r\n  styleUrls: ['./sidemenu.component.scss'],\r\n  styles: [''],\r\n  animations: animationsForm4\r\n})\r\nexport class AppSideMenuComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n  form: FormGroup;\r\n  private _mobileQueryListener: () => void;\r\n  @ViewChild('snav') sidenav!: MatSidenav;\r\n  tiles: Tile[] = [\r\n    {text: 'One', cols: 4, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 3, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    // {text: 'Four', cols: 4, rows: 4, color: 'lightgreen'},\r\n  ];\r\n  state = \"open\";\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItemsSrv: MenuItems,\r\n    public stateSrv: AppStateService,\r\n    public navSrv: NavigationService\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n    this.form = new FormGroup({ menuItem: new FormControl() });\r\n    this.form.valueChanges.subscribe((filter) => {\r\n\r\n      this.menuItemsSrv.filter(filter?.menuItem);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n\r\n  get themeState$() {\r\n    return this.stateSrv.themeState$;\r\n  }\r\n\r\n  filter(filterValue: string) {\r\n    this.menuItemsSrv.filter(filterValue);\r\n  }\r\n\r\n  applyFilter(event?: Event) {\r\n    const filterValue =\r\n      (event?.target as HTMLInputElement)?.value?.trim()?.toLowerCase() || '';\r\n    this.filter(filterValue);\r\n  }\r\n\r\n\r\n  close(reason: string) {\r\n    this.sidenav.close();\r\n  }\r\n\r\n  changeState(): void {\r\n    (this.state == \"closed\") ? this.state = \"open\" : this.state = \"closed\";\r\n  }\r\n}\r\n","<section class=\"app\">\r\n  <aside class=\"sidebar\">\r\n         <header>\r\n        Menu\r\n      </header>\r\n    <nav class=\"sidebar-nav\">\r\n\r\n      <ul>\r\n        <li>\r\n          <a href=\"#\"><i class=\"ion-bag\"></i> <span>Shop</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-color-filter-outline\"></i>Derps</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-clock-outline\"></i>Times</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-android-star-outline\"></i>Hates</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-heart-broken\"></i>Beat</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\"><i class=\"ion-ios-settings\"></i> <span class=\"\">Controls</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-alarm-outline\"></i>Watch</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-camera-outline\"></i>Creeper</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-chatboxes-outline\"></i>Hate</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-cog-outline\"></i>Grinder</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\"><i class=\"ion-ios-briefcase-outline\"></i> <span class=\"\">Folio</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-flame-outline\"></i>Burn</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-lightbulb-outline\"></i>Bulbs</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-location-outline\"></i>Where You</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-locked-outline\"></i>On Lock</a>\r\n            </li>\r\n             <li>\r\n              <a href=\"#\"><i class=\"ion-ios-navigate-outline\"></i>Ghostface</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\"><i class=\"ion-ios-analytics-outline\"></i> <span class=\"\">Graphicals</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-timer-outline\"></i>Timers</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-arrow-graph-down-left\"></i>You Lose</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-partlysunny-outline\"></i>Stormy</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-timer-outline\"></i>Lookie Look</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-game-controller-a-outline\"></i>Dork Mfer</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\"><i class=\"ion-ios-paper-outline\"></i> <span class=\"\">Papers</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-filing-outline\"></i>File Cab</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-information-outline\"></i>Infos</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-paperplane-outline\"></i>Planes</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-android-star-outline\"></i>Shop</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\"><i class=\"ion-ios-navigate-outline\"></i> <span class=\"\">Ass Finder</span></a>\r\n          <ul class=\"nav-flyout\">\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-flame-outline\"></i>Burn</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-lightbulb-outline\"></i>Bulbs</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-location-outline\"></i>Where You</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\"><i class=\"ion-ios-locked-outline\"></i>On Lock</a>\r\n            </li>\r\n             <li>\r\n              <a href=\"#\"><i class=\"ion-ios-navigate-outline\"></i>Ghostface</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\"><i class=\"ion-ios-medical-outline\"></i> <span class=\"\">Cocaine</span></a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </aside>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card class=\"no-shadow\">\r\n  <mat-card-content>\r\n  <mat-card-title>Toolbar</mat-card-title>\r\n  <mat-card-subtitle>matToolbar is a container for headers, titles, or actions.<code class=\"\"><a href=\"https://material.angular.io/components/toolbar/overview\">Official Component</a></code></mat-card-subtitle>\r\n  \r\n    <p>Basic toolbar:</p>\r\n    <mat-toolbar>My App</mat-toolbar>\r\n    <p>The primary color toolbar:</p>\r\n    <mat-toolbar color=\"primary\">\r\n      <span>Primary Toolbar</span>\r\n      <span fxFlex></span>\r\n      <button mat-button href=\"#\" mat-icon-button>\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-button href=\"#\" mat-icon-button>\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n    </mat-toolbar>\r\n    <p>Multiple row</p>\r\n    <mat-toolbar>  \r\n      <mat-toolbar-row>\r\n        <span>First Row</span>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <span>Second Row</span>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n    <p>Positining toolbar</p>\r\n    <mat-toolbar color=\"primary\">\r\n  <span>Application Title</span>\r\n\r\n  <!-- This fills the remaining space of the current row -->\r\n  <span class=\"example-fill-remaining-space\"></span>\r\n\r\n  <span>Right Aligned Text</span>\r\n</mat-toolbar>  \r\n    <p>An accent toolbar using the second toolbar row:</p>\r\n    <mat-toolbar color=\"accent\">\r\n      <mat-toolbar-row>\r\n        <span>Second Line Toolbar</span>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n    <p>A primary toolbar using the third toolbar row:</p>\r\n    <mat-toolbar class=\"bg-success\" color=\"warn\">\r\n  <mat-toolbar-row>\r\n    <span>Custom Toolbar</span>\r\n  </mat-toolbar-row>\r\n\r\n  <mat-toolbar-row>\r\n    <span>Second Line</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon class=\"example-icon\">verified_user</mat-icon>\r\n  </mat-toolbar-row>\r\n\r\n  <mat-toolbar-row>\r\n    <span>Third Line</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon class=\"example-icon\">favorite</mat-icon>\r\n    <mat-icon class=\"example-icon\">delete</mat-icon>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n  </mat-card-content>\r\n</mat-card>","import { Component, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { InMemService } from '../srv/in-mem-service';\r\nimport { NavigationService } from '../srv/navigation.service';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.scss'],\r\n})\r\nexport class LogInFormComponent {\r\n  @ViewChild('formView') formView: any;\r\n  position = 'below';\r\n  form = new FormGroup({\r\n    nombreUsuario: new FormControl('', [Validators.required]),\r\n    contrasena: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  step = 0;\r\n\r\n  constructor(\r\n    public inMemSrv: InMemService,\r\n    public builder: FormBuilder,\r\n    public navSrv: NavigationService\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.form.reset();\r\n  }\r\n\r\n  save() {\r\n    this.navSrv.navigate('/nómina', this.form.value);\r\n  }\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n}\r\n","<div class=\"wrapper wrapper-full-page\">\r\n  <div class=\"page-header login-page header-filter\" filter-color=\"black\"\r\n    style=\"background-image: url('../../assets/images/login.jpg'); background-size: cover; background-position: top center;\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n        <form [formGroup]=\"form\" >\r\n          <div class=\"card mat-card\" >\r\n            <div class=\"mat-card-header card-header-primary\">\r\n              <h1 class=\"text-center card-title\">¡Bienvenido a Nómina Electrónica!\r\n              </h1>\r\n            </div>\r\n            <div class=\"card-body\">\r\n\r\n              <mat-form-field>\r\n                <input matInput tabindex=\"1\" formControlName=\"nombreUsuario\" placeholder=\"Nombre de usuario\"\r\n                  id=\"nombreUsuario\" type=\"text\" class=\"form-control\" />\r\n                <div *ngIf=\"f.nombreUsuario.touched && f.nombreUsuario.invalid\" class=\"alert alert-danger\">\r\n                  <div *ngIf=\"f.nombreUsuario.errors?.required\">\r\n                    numero de documento es obligatorio.\r\n                  </div>\r\n                </div>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                <input matInput tabindex=\"1\" formControlName=\"contrasena\" placeholder=\"Clave\" id=\"contrasena\"\r\n                  type=\"password\" class=\"form-control\" />\r\n                <div *ngIf=\"f.contrasena.touched && f.contrasena.invalid\" class=\"alert alert-danger\">\r\n                  <div *ngIf=\"f.contrasena.errors?.required\">\r\n                    nombre es obligatorio.\r\n                  </div>\r\n                </div>\r\n              </mat-form-field>\r\n\r\n              <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\" color=\"accent\">\r\n                Limpiar\r\n              </button>\r\n              <button mat-button (click)=\"save()\" tabindex=\"3\">Aceptar</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n})\r\nexport class ConfirmDialogComponent {\r\n  position = 'below';\r\n\r\n  titulo = 'Confirmar';\r\n  pregunta = '¿Confirma?';\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.titulo = data?.titulo;\r\n    this.pregunta = data?.pregunta;\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  save() {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","<form class=\"m-0 d-flex main-container main-form\" style=\"overflow:visible\" mat-dialog-title cdkDrag\r\n  cdkDragRootElement=\".cdk-overlay-pane\" cdkDragHandle>\r\n  <div class=\"m-0 mat-card card\">\r\n    <div class=\"card-header\" *ngIf=\"titulo\">\r\n      <h1>{{titulo}}</h1>\r\n    </div>\r\n    <div class=\"card-body flex-row\" mat-dialog-content>\r\n      <h2 class=\"card-title text-center\">{{ pregunta }}</h2>\r\n    </div>\r\n    <div class=\"flex-row m-2\" mat-dialog-actions>\r\n      <button mat-button (click)=\"onNoClick()\" type=\"button\" tabindex=\"-1\" class=\"mat-button col-4 \">\r\n        Cancelar\r\n      </button>\r\n      <button mat-button (click)=\"save()\" type=\"button\" tabindex=\"5\" class=\"mat-button col-md-6\">Si!</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ValuesCatalog } from '../../srv/in-mem-data-service';\r\n\r\ninterface MenuState {\r\n  menuItems: ValuesCatalog[];\r\n}\r\n\r\nexport const MENUITEMS: ValuesCatalog[] = [\r\n  {\r\n    state: 'dashboard',\r\n    name: 'Tableros',\r\n    type: 'link',\r\n    icon: 'dashboard',\r\n    emoji: '1F4CA',\r\n  },\r\n  {\r\n    state: 'nómina',\r\n    name: 'Nóminas',\r\n    type: 'link',\r\n    icon: 'drive_folder_upload',\r\n    emoji: '1F4C3',\r\n    menuItems: [\r\n      {\r\n        state: '/nómina/individual',\r\n        name: 'Nóminas Individuales',\r\n        type: 'link',\r\n        icon: 'work',\r\n      },\r\n      {\r\n        state: '/nómina/view',\r\n        name: 'Nómina Individual',\r\n        type: 'link',\r\n        icon: 'work',\r\n      },\r\n      {\r\n        state: '/nómina/devengos',\r\n        name: 'Nómina Individual  >  Devengos',\r\n        type: 'link',\r\n        icon: 'work',\r\n      },\r\n      {\r\n        state: '/nómina/deducciones',\r\n        name: 'Nómina Individual  >  Deducciones',\r\n        type: 'link',\r\n        icon: 'work',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    state: 'trabajador',\r\n    name: 'Trabajadores',\r\n    type: 'link',\r\n    icon: 'face',\r\n    emoji: '1F939',\r\n  },\r\n  {\r\n    state: 'subscripciones',\r\n    type: 'link',\r\n    name: 'Subscripciones',\r\n    icon: 'subscriptions',\r\n    emoji: '1F4B3',\r\n  },\r\n  {\r\n    state: 'parámetros',\r\n    type: 'link',\r\n    name: 'Parámetros',\r\n    icon: 'settings_applications',\r\n    emoji: '2699',\r\n    menuItems: [\r\n      {\r\n        state: 'button',\r\n        type: 'link',\r\n        name: 'Buttons',\r\n        icon: 'crop_7_5',\r\n      },\r\n      {\r\n        state: 'grid',\r\n        type: 'link',\r\n        name: 'Grid List',\r\n        icon: 'view_comfy',\r\n      },\r\n      {\r\n        state: 'lists',\r\n        type: 'link',\r\n        name: 'Lists',\r\n        icon: 'view_list',\r\n      },\r\n      {\r\n        state: 'menu',\r\n        type: 'link',\r\n        name: 'Menu',\r\n        icon: 'view_headline',\r\n      },\r\n      { state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab' },\r\n      {\r\n        state: 'stepper',\r\n        type: 'link',\r\n        name: 'Stepper',\r\n        icon: 'web',\r\n      },\r\n      {\r\n        state: 'expansion',\r\n        type: 'link',\r\n        name: 'Expansion Panel',\r\n        icon: 'vertical_align_center',\r\n      },\r\n      {\r\n        state: 'chips',\r\n        type: 'link',\r\n        name: 'Chips',\r\n        icon: 'vignette',\r\n      },\r\n      {\r\n        state: 'toolbar',\r\n        type: 'link',\r\n        name: 'Toolbar',\r\n        icon: 'voicemail',\r\n      },\r\n      {\r\n        state: 'progress-snipper',\r\n        type: 'link',\r\n        name: 'Progress snipper',\r\n        icon: 'border_horizontal',\r\n      },\r\n      {\r\n        state: 'progress',\r\n        type: 'link',\r\n        name: 'Progress Bar',\r\n        icon: 'blur_circular',\r\n      },\r\n      {\r\n        state: 'dialog',\r\n        type: 'link',\r\n        name: 'Dialog',\r\n        icon: 'assignment_turned_in',\r\n      },\r\n      {\r\n        state: 'tooltip',\r\n        type: 'link',\r\n        name: 'Tooltip',\r\n        icon: 'assistant',\r\n      },\r\n      {\r\n        state: 'snackbar',\r\n        type: 'link',\r\n        name: 'Snackbar',\r\n        icon: 'adb',\r\n      },\r\n      {\r\n        state: 'slider',\r\n        type: 'link',\r\n        name: 'Slider',\r\n        icon: 'developer_mode',\r\n      },\r\n      {\r\n        state: 'slide-toggle',\r\n        type: 'link',\r\n        name: 'Slide Toggle',\r\n        icon: 'all_inclusive',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    state: 'login',\r\n    name: 'Inicio sesión',\r\n    type: 'link',\r\n    icon: 'login',\r\n    emoji: '1F465',\r\n  },\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  public menuState$: BehaviorSubject<MenuState> =\r\n    new BehaviorSubject<MenuState>({\r\n      menuItems: MENUITEMS,\r\n    });\r\n\r\n  filter(filter: string) {\r\n    if (filter) {\r\n      this.menuState$.next({\r\n        menuItems: MENUITEMS.filter(\r\n          (item) =>\r\n            item.name\r\n              ?.toLocaleLowerCase()\r\n              .includes(filter?.toLocaleLowerCase()) ||\r\n            item.menuItems?.filter((child) =>\r\n              child.name\r\n                ?.toLocaleLowerCase()\r\n                .includes(filter?.toLocaleLowerCase())\r\n            )\r\n        ),\r\n      });\r\n    } else {\r\n      this.menuState$.next({ menuItems: MENUITEMS });\r\n    }\r\n  }\r\n\r\n  codePoint(emojiCodePoint: any) {\r\n    return String.fromCodePoint(\r\n      ...emojiCodePoint.split('-').map((i: any) => parseInt(i, 16))\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WebdatarocksComponent } from '../dashboard/dashboard-components/pivot-table/pivot-table.component';\r\nimport { DirtyCheckGuard } from '../guards/dirty-check.guard';\r\nimport { GtdInputFormatterDirective } from '../guards/gtd-input.formatter';\r\nimport { GtdTextFormatterDirective } from '../guards/gtd-text.formatter';\r\nimport {\r\n  AccordionAnchorDirective,\r\n  AccordionDirective,\r\n  AccordionLinkDirective,\r\n} from './accordion';\r\nimport { ConfirmDialogComponent } from './dialog/confirm/confirm-dialog.component';\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { DecodeEmojiPipe } from './unicode-emoji.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective,\r\n    DecodeEmojiPipe,\r\n    ConfirmDialogComponent,\r\n    GtdInputFormatterDirective,\r\n    GtdTextFormatterDirective,\r\n    WebdatarocksComponent,\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective,\r\n    DecodeEmojiPipe,\r\n    ConfirmDialogComponent,\r\n    GtdInputFormatterDirective,\r\n    GtdTextFormatterDirective,\r\n    WebdatarocksComponent,\r\n  ],\r\n  providers: [\r\n    DirtyCheckGuard,\r\n    MenuItems,\r\n    {\r\n      provide: MatDialogRef,\r\n      useValue: {},\r\n    },\r\n    {\r\n      provide: MAT_DIALOG_DATA,\r\n      useValue: {}, // Add any data you wish to test if it is passed/used correctly\r\n    },\r\n    // { provide: OverlayContainer, useClass: FullscreenOverlayContainer },\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\" color=\"accent\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = false;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","import {\r\n  Pipe,\r\n  PipeTransform\r\n} from '@angular/core';\r\n\r\n@Pipe({ name: 'gtdEmoji' })\r\nexport class DecodeEmojiPipe implements PipeTransform {\r\n  transform(emojiCodePoint: any, exponent = 1): string {\r\n    return String.fromCodePoint(\r\n      ...emojiCodePoint.split('-').map((i: any) => parseInt(i, 16))\r\n    );\r\n  }\r\n}\r\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {\r\n  EnumCatalogs,\r\n  EnumString,\r\n  NgGtdThemes,\r\n  ValueOption,\r\n} from '../types/common-types';\r\nimport { THEMES_OPTIONS, UIMessage } from '../values-catalog';\r\nimport { ValuesCatalog } from './in-mem-data-service';\r\nimport { StyleManagerService } from './style-manager.service';\r\n\r\nexport interface UIState {\r\n  uiPalette: NgGtdThemes;\r\n  darkPalette?: boolean;\r\n  visibleMenu: boolean;\r\n  fullScreen: boolean;\r\n  loading?: boolean;\r\n  XSmall?: boolean;\r\n  Small?: boolean;\r\n  Medium?: boolean;\r\n  Large?: boolean;\r\n  messages?: ValuesCatalog[];\r\n  notifications?: ValuesCatalog[];\r\n  textos?: EnumString;\r\n  catalogos?: EnumCatalogs;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppStateService {\r\n  themes: ValueOption[] = THEMES_OPTIONS;\r\n  public themeState$: BehaviorSubject<UIState> = new BehaviorSubject<UIState>({\r\n    uiPalette: NgGtdThemes.FpiSkin,\r\n    visibleMenu: false,\r\n    fullScreen: false,\r\n    loading: false,\r\n  });\r\n\r\n  constructor(\r\n    breakpointObserver: BreakpointObserver,\r\n    private styleManager: StyleManagerService,\r\n    private _snackBar: MatSnackBar\r\n  ) {\r\n    breakpointObserver\r\n      .observe([\r\n        Breakpoints.XSmall,\r\n        Breakpoints.Small,\r\n        Breakpoints.Medium,\r\n        Breakpoints.Large,\r\n      ])\r\n      .subscribe({\r\n        next: (state) =>\r\n          this.themeState$?.next({\r\n            ...this.themeState$.value,\r\n            uiPalette: this.themeState$?.value.uiPalette ?? NgGtdThemes.FpiSkin,\r\n            XSmall: state.breakpoints[Breakpoints.XSmall],\r\n            Small: state.breakpoints[Breakpoints.Small],\r\n            Medium: state.breakpoints[Breakpoints.Medium],\r\n            Large: state.breakpoints[Breakpoints.Large],\r\n          }),\r\n      });\r\n  }\r\n\r\n  setTheme(themeToSet: string) {\r\n    this.styleManager.setStyle(\r\n      'theme',\r\n      `node_modules/@angular/material/prebuilt-themes/${themeToSet}.css`\r\n    );\r\n  }\r\n\r\n  setUiPalette(themeToSet: NgGtdThemes) {\r\n    this.themeState$.next({ ...this.themeState$.value, uiPalette: themeToSet });\r\n  }\r\n\r\n  invertTheme() {\r\n    let themeToSet: NgGtdThemes = NgGtdThemes.FpiSkin;\r\n    this.themes.forEach((theme) => {\r\n      if (this.themeState$.value.uiPalette == theme.catalog) {\r\n        themeToSet = theme.alternate;\r\n      } else if (this.themeState$.value.uiPalette == theme.alternate) {\r\n        themeToSet = theme.catalog;\r\n      }\r\n    });\r\n    this.setUiPalette(themeToSet);\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.themeState$.next({\r\n      ...this.themeState$.value,\r\n      visibleMenu: !this.themeState$.value.visibleMenu,\r\n    });\r\n  }\r\n\r\n  toggleFullScreen(nativeElement: any) {\r\n    if (!this.themeState$.value.fullScreen) {\r\n      this.openFullscreen(nativeElement);\r\n    } else {\r\n      this.closeFullscreen(nativeElement);\r\n    }\r\n  }\r\n\r\n  openFullscreen(documentElement: any) {\r\n    this.themeState$.next({ ...this.themeState$.value, fullScreen: true });\r\n  }\r\n\r\n  closeFullscreen(document: any) {\r\n    this.themeState$.next({ ...this.themeState$.value, fullScreen: false });\r\n  }\r\n\r\n  toggleLoading = () =>\r\n    this.themeState$.next({\r\n      ...this.themeState$.value,\r\n      loading: !this.themeState$.value.loading,\r\n    });\r\n\r\n  message = (message: string, state: UIMessage) => {\r\n    this.themeState$.next({\r\n      ...this.themeState$.value,\r\n      messages: [\r\n        {\r\n          id: this.themeState$.value.messages?.length! + 1,\r\n          code: state.tipo,\r\n          name: `${message}: ${state.accion}`,\r\n        },\r\n        ...(this.themeState$.value.messages ?? []),\r\n      ],\r\n    });\r\n    this._snackBar.open(`${message}: ${state.accion}`, state.tipo, {\r\n      duration: 50000,\r\n    });\r\n  };\r\n  notificate = (message: string, ico: string) =>\r\n    this.themeState$.next({\r\n      ...this.themeState$.value,\r\n      notifications: [\r\n        {\r\n          id: this.themeState$.value.notifications?.length! + 1,\r\n          code: ico,\r\n          name: message,\r\n        },\r\n        ...(this.themeState$.value.notifications ?? []),\r\n      ],\r\n    });\r\n\r\n  setTextos = (textos: any) =>\r\n    this.themeState$.next({\r\n      ...this.themeState$.value,\r\n      textos: textos,\r\n    });\r\n\r\n  get textos() {\r\n    return this.themeState$.value.textos;\r\n  }\r\n  agregarCatalogo = (catalogo: EnumCatalogs) =>\r\n    this.themeState$.next({\r\n      ...this.themeState$.value,\r\n      catalogos: { ...(this.themeState$.value.catalogos ?? {}), ...catalogo },\r\n    });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { InMemoryDbService, RequestInfo } from \"angular-in-memory-web-api\";\r\nimport { of } from \"rxjs\";\r\nimport { delay } from \"rxjs/operators\";\r\n\r\nexport interface ValuesCatalog {\r\n  state?: string;\r\n  type?: string;\r\n  icon?: string;\r\n  emoji?: string;\r\n  badge?: [{ type: string; value: string }];\r\n  menuItems?: ValuesCatalog[];\r\n  completo?: boolean;\r\n  id?: number;\r\n  name?: string;\r\n  description?: string;\r\n  code?: string;\r\n  catalog?: string;\r\n  fecha?: Date;\r\n  business?: ValuesCatalog;\r\n  value?: any\r\n};\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class InMemDataService implements InMemoryDbService {\r\n  constructor() {}\r\n\r\n  createDb(reqInfo?: RequestInfo) {\r\n    const valuesCatalogList = [\r\n      { id: 1, name: \"Windstorm\" },\r\n      { id: 2, name: \"Bombasto\" },\r\n      { id: 3, name: \"Magneta\" },\r\n      { id: 4, name: \"Tornado\" },\r\n    ];\r\n\r\n    const nobodies: any[] = [];\r\n\r\n    // entities with string ids that look like numbers\r\n    const stringers = [\r\n      { id: \"10\", name: \"Bob String\" },\r\n      { id: \"20\", name: \"Jill String\" },\r\n    ];\r\n\r\n    // default returnType\r\n    let returnType = \"object\";\r\n    // let returnType  = 'observable';\r\n    // let returnType  = 'promise';\r\n\r\n    // demonstrate POST commands/resetDb\r\n    // this example clears the collections if the request body tells it to do so\r\n    if (reqInfo) {\r\n      const body = reqInfo.utils.getJsonBody(reqInfo.req) || {};\r\n      if (body.clear === true) {\r\n        valuesCatalogList.length = 0;\r\n        nobodies.length = 0;\r\n        stringers.length = 0;\r\n      }\r\n\r\n      // 'returnType` can be 'object' | 'observable' | 'promise'\r\n      returnType = body.returnType || \"object\";\r\n    }\r\n    const db = { valuesCatalogList, nobodies, stringers };\r\n\r\n    switch (returnType) {\r\n      case \"observable\":\r\n        return of(db).pipe(delay(3600));\r\n      case \"promise\":\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => resolve(db), 3600);\r\n        });\r\n      default:\r\n        return db;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  RequestInfo,\r\n  ResponseOptions,\r\n  STATUS,\r\n  getStatusText,\r\n  RequestInfoUtilities,\r\n  ParsedRequestUrl,\r\n} from \"angular-in-memory-web-api\";\r\nimport { BehaviorSubject, Subject } from \"rxjs\";\r\nimport { NgGtdThemes } from \"../types/common-types\";\r\nimport { VALUES_CATALOG, VALUES_BUSINESS } from \"../values-catalog\";\r\nimport { InMemDataService, ValuesCatalog } from \"./in-mem-data-service\";\r\n\r\nconst valuesCatalogList = [\r\n  { id: 1, name: \"Windstorm\" },\r\n  { id: 2, name: \"Bombasto\" },\r\n  { id: 3, name: \"Magneta\" },\r\n  { id: 4, name: \"Tornado\" },\r\n];\r\n\r\n// Pseudo guid generator\r\nfunction guid() {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n  return (\r\n    s4() +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    s4() +\r\n    s4()\r\n  );\r\n}\r\n\r\nexport class InMemService extends InMemDataService {\r\n\r\n  public empresas: BehaviorSubject<ValuesCatalog[]>;\r\n\r\n  constructor(){\r\n    super();\r\n    this.empresas = new BehaviorSubject<ValuesCatalog[]>(VALUES_BUSINESS);\r\n  }\r\n\r\n  // Overrides id generator and delivers next available `id`, starting with 1001.\r\n  genId<T extends { id: any }>(collection: T[], collectionName: string): any {\r\n    if (collectionName === \"nobodies\") {\r\n      console.log(\"genId override for 'nobodies'\");\r\n      return guid();\r\n    } else if (collection) {\r\n      console.log(`genId override for '${collectionName}'`);\r\n      return (\r\n        1 +\r\n        collection.reduce((prev, curr) => Math.max(prev, curr.id || 0), 1000)\r\n      );\r\n    }\r\n  }\r\n\r\n  // HTTP GET interceptor\r\n  get(reqInfo: RequestInfo) {\r\n    const collectionName = reqInfo.collectionName;\r\n    if (collectionName === \"villains\") {\r\n      return this.getVillains(reqInfo);\r\n    }\r\n    return undefined; // let the default GET handle all others\r\n  }\r\n\r\n  // HTTP GET interceptor handles requests for villains\r\n  private getVillains(reqInfo: RequestInfo) {\r\n    return reqInfo.utils.createResponse$(() => {\r\n      console.log(\"HTTP GET override\");\r\n\r\n      const collection = valuesCatalogList.slice();\r\n      const dataEncapsulation = reqInfo.utils.getConfig().dataEncapsulation;\r\n      const id = reqInfo.id;\r\n\r\n      // tslint:disable-next-line:triple-equals\r\n      const data =\r\n        id == undefined ? collection : reqInfo.utils.findById(collection, id);\r\n\r\n      const options: ResponseOptions = data\r\n        ? {\r\n            body: dataEncapsulation ? { data } : data,\r\n            status: STATUS.OK,\r\n          }\r\n        : {\r\n            body: { error: `'Villains' with id='${id}' not found` },\r\n            status: STATUS.NOT_FOUND,\r\n          };\r\n      return this.finishOptions(options, reqInfo);\r\n    });\r\n  }\r\n\r\n  // parseRequestUrl override\r\n  // Do this to manipulate the request URL or the parsed result\r\n  // into something your data store can handle.\r\n  // This example turns a request for `/foo/heroes` into just `/heroes`.\r\n  // It leaves other URLs untouched and forwards to the default parser.\r\n  // It also logs the result of the default parser.\r\n  parseRequestUrl(url: string, utils: RequestInfoUtilities): ParsedRequestUrl {\r\n    const newUrl = url.replace(/\\/foo\\/heroes/, \"/heroes\");\r\n    // console.log('newUrl', newUrl);\r\n    const parsed = utils.parseRequestUrl(newUrl);\r\n    console.log(`parseRequestUrl override of '${url}':`, parsed);\r\n    return parsed;\r\n  }\r\n\r\n  // intercept ResponseOptions from default HTTP method handlers\r\n  // add a response header and report interception to console.log\r\n  responseInterceptor(resOptions: ResponseOptions, reqInfo: RequestInfo) {\r\n    resOptions.headers = resOptions?.headers?.set(\"x-test\", \"test-header\");\r\n    const method = reqInfo.method.toUpperCase();\r\n    const body = JSON.stringify(resOptions);\r\n    console.log(`responseInterceptor: ${method} ${reqInfo.req.url}: \\n${body}`);\r\n\r\n    return resOptions;\r\n  }\r\n\r\n  /////////// helpers ///////////////\r\n\r\n  private finishOptions(\r\n    options: ResponseOptions,\r\n    { headers, url }: RequestInfo\r\n  ) {\r\n    options.statusText = getStatusText(options.status!);\r\n    options.headers = headers;\r\n    options.url = url;\r\n    return options;\r\n  }\r\n\r\n  getDataParsed<T extends { id: any, [index:string]:any }>(data:T): number{\r\n    return 0;\r\n  }\r\n\r\n}\r\n//\r\n","import { Location } from '@angular/common';\r\nimport { HostListener, Injectable, OnDestroy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {\r\n  ActivatedRoute,\r\n  NavigationCancel,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router,\r\n  RouterEvent,\r\n} from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface NavState {\r\n  loading?: number;\r\n  states?: RouteState[];\r\n}\r\nexport interface RouteState {\r\n  route?: string;\r\n  data?: any;\r\n}\r\n@Injectable({ providedIn: 'root' })\r\nexport class NavigationService implements OnDestroy {\r\n  @HostListener('window:popstate', ['$event'])\r\n  onBrowserBackBtnClose(event: Event) {\r\n    console.log('⏮ back button pressed');\r\n    event.preventDefault();\r\n    this.router.navigate(['/dashboard'], { replaceUrl: true });\r\n  }\r\n  subscriptions: any[] = [];\r\n  private history: string[] = [];\r\n  public routeState$: BehaviorSubject<NavState> = new BehaviorSubject<NavState>(\r\n    {\r\n      states: [],\r\n    }\r\n  );\r\n\r\n  get previous() {\r\n    return [this.history[this.history.length - 1]];\r\n  }\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private route: ActivatedRoute,\r\n    private _snackBar: MatSnackBar,\r\n    ) {\r\n    this.subscriptions.push(\r\n      location.subscribe((v: any) => {\r\n        console.log(v);\r\n      }),\r\n      this.routeState$.subscribe(),\r\n      this.router.events.subscribe((event) => {\r\n        if (event instanceof NavigationEnd) {\r\n          this.navigationInterceptor(event);\r\n          this.history.push(event.urlAfterRedirects);\r\n          _snackBar.dismiss();\r\n        }\r\n      })\r\n    );\r\n  }\r\n  ngOnDestroy(): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  navigation = (loading?: number) => {\r\n    this.routeState$.next({ ...this.routeState$.value, loading: loading });\r\n  };\r\n\r\n  navigationInterceptor(event: RouterEvent): void {\r\n    if (event instanceof NavigationStart) {\r\n      console.log(`👾 app-> event: NavigationStart`);\r\n      this.navigation(10);\r\n    }\r\n    if (event instanceof NavigationEnd) {\r\n      console.log(`👾 app-> event: NavigationEnd`);\r\n      this.navigation();\r\n    }\r\n    if (event instanceof NavigationCancel) {\r\n      console.log(`👾 app-> event: NavigationCancel`);\r\n      this.navigation();\r\n    }\r\n    if (event instanceof NavigationError) {\r\n      console.log(`👾 app-> event: NavigationError`);\r\n      this.navigation();\r\n    }\r\n  }\r\n\r\n  navigate(route: string, data?: any, localRoute?: ActivatedRoute): void {\r\n    this.routeState$.next({\r\n      ...this.routeState$.value,\r\n      states: [...this.routeState$.value.states!, { route, data }],\r\n    });\r\n    this.location.go(route);\r\n    this.router.navigate([route, { data: data }], {\r\n      skipLocationChange: true,\r\n      relativeTo: localRoute ?? this.route,\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport {\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf\n} from '@angular/core';\nimport { Configuration } from './configuration';\nimport { StoredProcedureService } from './rest/api';\nimport { PayrollsService } from './rest/payrolls.service';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [StoredProcedureService, PayrollsService],\n})\nexport class ApiModule {\n  public static forRoot(\n    configurationFactory: () => Configuration\n  ): ModuleWithProviders<any> {\n    return {\n      ngModule: ApiModule,\n      providers: [{ provide: Configuration, useFactory: configurationFactory }],\n    };\n  }\n\n  constructor(\n    @Optional() @SkipSelf() parentModule: ApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'ApiModule is already loaded. Import in your base AppModule only.'\n      );\n    }\n    if (!http) {\n      throw new Error(\n        'Error importing HttpClientModule'\n      );\n    }\n  }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nexport interface ConfigurationParameters {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class Configuration {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n\n        // init default apiKey credential\n        if (!this.credentials['apiKey']) {\n            this.credentials['apiKey'] = () => {\n                if (this.apiKeys === null || this.apiKeys === undefined) {\n                    return undefined;\n                } else {\n                    return this.apiKeys['apiKey'] || this.apiKeys['Authorization'];\n                }\n            };\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTAnticiposDto } from '../model/models';\nimport { ResponseTAnticiposDto } from '../model/models';\nimport { ResponseTListAnticiposDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    AnticiposServiceInterface\n} from './anticipos.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnticiposService implements AnticiposServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Anticipo in the system.\n     * @param id Id Anticipo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE37(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE37(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE37(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE37(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE37.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/anticipos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Anticipo in the system.\n     * @param id Id Anticipo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET37(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTAnticiposDto>;\n    public findByIdUsingGET37(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTAnticiposDto>>;\n    public findByIdUsingGET37(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTAnticiposDto>>;\n    public findByIdUsingGET37(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET37.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTAnticiposDto>(`${this.configuration.basePath}/nomina-general/anticipos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Anticipo in the system by DeduccionesId.\n     * @param deduccionesId DeduccionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDeduccionesUsingGET4(deduccionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListAnticiposDto>;\n    public listFindAllDeduccionesUsingGET4(deduccionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListAnticiposDto>>;\n    public listFindAllDeduccionesUsingGET4(deduccionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListAnticiposDto>>;\n    public listFindAllDeduccionesUsingGET4(deduccionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionesId === null || deduccionesId === undefined) {\n            throw new Error('Required parameter deduccionesId was null or undefined when calling listFindAllDeduccionesUsingGET4.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListAnticiposDto>(`${this.configuration.basePath}/nomina-general/anticipos/list/deducciones/${encodeURIComponent(String(deduccionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Anticipo in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET14(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListAnticiposDto>;\n    public listFindAllDevengadosUsingGET14(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListAnticiposDto>>;\n    public listFindAllDevengadosUsingGET14(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListAnticiposDto>>;\n    public listFindAllDevengadosUsingGET14(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET14.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListAnticiposDto>(`${this.configuration.basePath}/nomina-general/anticipos/list/devengados/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Anticipo in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST37(dto: RequestTAnticiposDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTAnticiposDto>;\n    public saveUsingPOST37(dto: RequestTAnticiposDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTAnticiposDto>>;\n    public saveUsingPOST37(dto: RequestTAnticiposDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTAnticiposDto>>;\n    public saveUsingPOST37(dto: RequestTAnticiposDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST37.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTAnticiposDto>(`${this.configuration.basePath}/nomina-general/anticipos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Anticipo in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT37(dto: RequestTAnticiposDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTAnticiposDto>;\n    public updateUsingPUT37(dto: RequestTAnticiposDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTAnticiposDto>>;\n    public updateUsingPUT37(dto: RequestTAnticiposDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTAnticiposDto>>;\n    public updateUsingPUT37(dto: RequestTAnticiposDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT37.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTAnticiposDto>(`${this.configuration.basePath}/nomina-general/anticipos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export * from './anticipos.service';\nimport { AnticiposService } from './anticipos.service';\nexport * from './anticipos.serviceInterface'\nexport * from './auxilios.service';\nimport { AuxiliosService } from './auxilios.service';\nexport * from './auxilios.serviceInterface'\nexport * from './basicos.service';\nimport { BasicosService } from './basicos.service';\nexport * from './basicos.serviceInterface'\nexport * from './bonificaciones.service';\nimport { BonificacionesService } from './bonificaciones.service';\nexport * from './bonificaciones.serviceInterface'\nexport * from './bonosEPCTV.service';\nimport { BonosEPCTVService } from './bonosEPCTV.service';\nexport * from './bonosEPCTV.serviceInterface'\nexport * from './cesantias.service';\nimport { CesantiasService } from './cesantias.service';\nexport * from './cesantias.serviceInterface'\nexport * from './comisiones.service';\nimport { ComisionesService } from './comisiones.service';\nexport * from './comisiones.serviceInterface'\nexport * from './compensaciones.service';\nimport { CompensacionesService } from './compensaciones.service';\nexport * from './compensaciones.serviceInterface'\nexport * from './deducciones.service';\nimport { DeduccionesService } from './deducciones.service';\nexport * from './deducciones.serviceInterface'\nexport * from './devengados.service';\nimport { DevengadosService } from './devengados.service';\nexport * from './devengados.serviceInterface'\nexport * from './empleadores.service';\nimport { EmpleadoresService } from './empleadores.service';\nexport * from './empleadores.serviceInterface'\nexport * from './fechasPagos.service';\nimport { FechasPagosService } from './fechasPagos.service';\nexport * from './fechasPagos.serviceInterface'\nexport * from './fondosSP.service';\nimport { FondosSPService } from './fondosSP.service';\nexport * from './fondosSP.serviceInterface'\nexport * from './horariosAdicionales.service';\nimport { HorariosAdicionalesService } from './horariosAdicionales.service';\nexport * from './horariosAdicionales.serviceInterface'\nexport * from './huelgasLegales.service';\nimport { HuelgasLegalesService } from './huelgasLegales.service';\nexport * from './huelgasLegales.serviceInterface'\nexport * from './incapacidades.service';\nimport { IncapacidadesService } from './incapacidades.service';\nexport * from './incapacidades.serviceInterface'\nexport * from './informacionesGenerales.service';\nimport { InformacionesGeneralesService } from './informacionesGenerales.service';\nexport * from './informacionesGenerales.serviceInterface'\nexport * from './libranzas.service';\nimport { LibranzasService } from './libranzas.service';\nexport * from './libranzas.serviceInterface'\nexport * from './licencias.service';\nimport { LicenciasService } from './licencias.service';\nexport * from './licencias.serviceInterface'\nexport * from './lugaresGeneracionXML.service';\nimport { LugaresGeneracionXMLService } from './lugaresGeneracionXML.service';\nexport * from './lugaresGeneracionXML.serviceInterface'\nexport * from './nominasGenerales.service';\nimport { NominasGeneralesService } from './nominasGenerales.service';\nexport * from './nominasGenerales.serviceInterface'\nexport * from './nominasIndividuales.service';\nimport { NominasIndividualesService } from './nominasIndividuales.service';\nexport * from './nominasIndividuales.serviceInterface'\nexport * from './notas.service';\nimport { NotasService } from './notas.service';\nexport * from './notas.serviceInterface'\nexport * from './numerosSecuenciaXML.service';\nimport { NumerosSecuenciaXMLService } from './numerosSecuenciaXML.service';\nexport * from './numerosSecuenciaXML.serviceInterface'\nexport * from './otrasDeducciones.service';\nimport { OtrasDeduccionesService } from './otrasDeducciones.service';\nexport * from './otrasDeducciones.serviceInterface'\nexport * from './otrosConceptos.service';\nimport { OtrosConceptosService } from './otrosConceptos.service';\nexport * from './otrosConceptos.serviceInterface'\nexport * from './pagos.service';\nimport { PagosService } from './pagos.service';\nexport * from './pagos.serviceInterface'\nexport * from './pagosTerceros.service';\nimport { PagosTercerosService } from './pagosTerceros.service';\nexport * from './pagosTerceros.serviceInterface'\nexport * from './payrolls.service';\nimport { PayrollsService } from './payrolls.service';\nexport * from './payrolls.serviceInterface'\nexport * from './periodos.service';\nimport { PeriodosService } from './periodos.service';\nexport * from './periodos.serviceInterface'\nexport * from './primas.service';\nimport { PrimasService } from './primas.service';\nexport * from './primas.serviceInterface'\nexport * from './proveedoresXML.service';\nimport { ProveedoresXMLService } from './proveedoresXML.service';\nexport * from './proveedoresXML.serviceInterface'\nexport * from './saludPensionSindicatos.service';\nimport { SaludPensionSindicatosService } from './saludPensionSindicatos.service';\nexport * from './saludPensionSindicatos.serviceInterface'\nexport * from './sanciones.service';\nimport { SancionesService } from './sanciones.service';\nexport * from './sanciones.serviceInterface'\nexport * from './storedProcedure.service';\nimport { StoredProcedureService } from './storedProcedure.service';\nexport * from './storedProcedure.serviceInterface'\nexport * from './trabajadores.service';\nimport { TrabajadoresService } from './trabajadores.service';\nexport * from './trabajadores.serviceInterface'\nexport * from './transportes.service';\nimport { TransportesService } from './transportes.service';\nexport * from './transportes.serviceInterface'\nexport * from './vacacionesCompensadas.service';\nimport { VacacionesCompensadasService } from './vacacionesCompensadas.service';\nexport * from './vacacionesCompensadas.serviceInterface'\nexport * from './vacacionesComunes.service';\nimport { VacacionesComunesService } from './vacacionesComunes.service';\nexport * from './vacacionesComunes.serviceInterface'\nexport const APIS = [AnticiposService, AuxiliosService, BasicosService, BonificacionesService, BonosEPCTVService, CesantiasService, ComisionesService, CompensacionesService, DeduccionesService, DevengadosService, EmpleadoresService, FechasPagosService, FondosSPService, HorariosAdicionalesService, HuelgasLegalesService, IncapacidadesService, InformacionesGeneralesService, LibranzasService, LicenciasService, LugaresGeneracionXMLService, NominasGeneralesService, NominasIndividualesService, NotasService, NumerosSecuenciaXMLService, OtrasDeduccionesService, OtrosConceptosService, PagosService, PagosTercerosService, PayrollsService, PeriodosService, PrimasService, ProveedoresXMLService, SaludPensionSindicatosService, SancionesService, StoredProcedureService, TrabajadoresService, TransportesService, VacacionesCompensadasService, VacacionesComunesService];\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTAuxilioDto } from '../model/models';\nimport { ResponseTAuxilioDto } from '../model/models';\nimport { ResponseTListAuxilioDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    AuxiliosServiceInterface\n} from './auxilios.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuxiliosService implements AuxiliosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Auxilio in the system.\n     * @param id Id Auxilio\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE38(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE38(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE38(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE38(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE38.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/auxilios/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Auxilio in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findAllDevengadoIdUsingGET2(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListAuxilioDto>;\n    public findAllDevengadoIdUsingGET2(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListAuxilioDto>>;\n    public findAllDevengadoIdUsingGET2(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListAuxilioDto>>;\n    public findAllDevengadoIdUsingGET2(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling findAllDevengadoIdUsingGET2.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListAuxilioDto>(`${this.configuration.basePath}/nomina-general/auxilios/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Auxilio in the system.\n     * @param id Id Auxilio\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET38(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTAuxilioDto>;\n    public findByIdUsingGET38(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTAuxilioDto>>;\n    public findByIdUsingGET38(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTAuxilioDto>>;\n    public findByIdUsingGET38(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET38.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTAuxilioDto>(`${this.configuration.basePath}/nomina-general/auxilios/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Auxilio in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST38(dto: RequestTAuxilioDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTAuxilioDto>;\n    public saveUsingPOST38(dto: RequestTAuxilioDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTAuxilioDto>>;\n    public saveUsingPOST38(dto: RequestTAuxilioDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTAuxilioDto>>;\n    public saveUsingPOST38(dto: RequestTAuxilioDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST38.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTAuxilioDto>(`${this.configuration.basePath}/nomina-general/auxilios`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Auxilio in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT38(dto: RequestTAuxilioDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTAuxilioDto>;\n    public updateUsingPUT38(dto: RequestTAuxilioDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTAuxilioDto>>;\n    public updateUsingPUT38(dto: RequestTAuxilioDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTAuxilioDto>>;\n    public updateUsingPUT38(dto: RequestTAuxilioDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT38.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTAuxilioDto>(`${this.configuration.basePath}/nomina-general/auxilios`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTBasicoDto } from '../model/models';\nimport { ResponseTBasicoDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    BasicosServiceInterface\n} from './basicos.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicosService implements BasicosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Básico in the system.\n     * @param id Id Básico\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE39(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE39(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE39(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE39(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE39.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/basicos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Básico in the system.\n     * @param id Id Básico\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET39(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBasicoDto>;\n    public findByIdUsingGET39(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBasicoDto>>;\n    public findByIdUsingGET39(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBasicoDto>>;\n    public findByIdUsingGET39(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET39.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTBasicoDto>(`${this.configuration.basePath}/nomina-general/basicos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Básico in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST39(dto: RequestTBasicoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBasicoDto>;\n    public saveUsingPOST39(dto: RequestTBasicoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBasicoDto>>;\n    public saveUsingPOST39(dto: RequestTBasicoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBasicoDto>>;\n    public saveUsingPOST39(dto: RequestTBasicoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST39.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTBasicoDto>(`${this.configuration.basePath}/nomina-general/basicos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Básico in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT39(dto: RequestTBasicoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBasicoDto>;\n    public updateUsingPUT39(dto: RequestTBasicoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBasicoDto>>;\n    public updateUsingPUT39(dto: RequestTBasicoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBasicoDto>>;\n    public updateUsingPUT39(dto: RequestTBasicoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT39.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTBasicoDto>(`${this.configuration.basePath}/nomina-general/basicos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTBonificacionDto } from '../model/models';\nimport { ResponseTBonificacionDto } from '../model/models';\nimport { ResponseTListBonificacionDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    BonificacionesServiceInterface\n} from './bonificaciones.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BonificacionesService implements BonificacionesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Bonificacion in the system.\n     * @param id Id Bonificacion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE40(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE40(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE40(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE40(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE40.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/bonificaciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Bonificacion in the system.\n     * @param id Id Bonificacion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET40(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBonificacionDto>;\n    public findByIdUsingGET40(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBonificacionDto>>;\n    public findByIdUsingGET40(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBonificacionDto>>;\n    public findByIdUsingGET40(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET40.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTBonificacionDto>(`${this.configuration.basePath}/nomina-general/bonificaciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Bonificacion in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET15(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListBonificacionDto>;\n    public listFindAllDevengadosUsingGET15(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListBonificacionDto>>;\n    public listFindAllDevengadosUsingGET15(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListBonificacionDto>>;\n    public listFindAllDevengadosUsingGET15(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET15.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListBonificacionDto>(`${this.configuration.basePath}/nomina-general/bonificaciones/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Bonificacion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST40(dto: RequestTBonificacionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBonificacionDto>;\n    public saveUsingPOST40(dto: RequestTBonificacionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBonificacionDto>>;\n    public saveUsingPOST40(dto: RequestTBonificacionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBonificacionDto>>;\n    public saveUsingPOST40(dto: RequestTBonificacionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST40.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTBonificacionDto>(`${this.configuration.basePath}/nomina-general/bonificaciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Bonificacion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT40(dto: RequestTBonificacionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBonificacionDto>;\n    public updateUsingPUT40(dto: RequestTBonificacionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBonificacionDto>>;\n    public updateUsingPUT40(dto: RequestTBonificacionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBonificacionDto>>;\n    public updateUsingPUT40(dto: RequestTBonificacionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT40.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTBonificacionDto>(`${this.configuration.basePath}/nomina-general/bonificaciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTBonoEpctvDto } from '../model/models';\nimport { ResponseTBonoEpctvDto } from '../model/models';\nimport { ResponseTListBonoEpctvDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    BonosEPCTVServiceInterface\n} from './bonosEPCTV.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BonosEPCTVService implements BonosEPCTVServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete BonoEpctv in the system.\n     * @param id Id BonoEpctv\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE41(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE41(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE41(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE41(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE41.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/bonosEPCTV/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id BonoEpctv in the system.\n     * @param id Id BonoEpctv\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET41(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBonoEpctvDto>;\n    public findByIdUsingGET41(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBonoEpctvDto>>;\n    public findByIdUsingGET41(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBonoEpctvDto>>;\n    public findByIdUsingGET41(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET41.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTBonoEpctvDto>(`${this.configuration.basePath}/nomina-general/bonosEPCTV/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all BonoEpctv in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET16(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListBonoEpctvDto>;\n    public listFindAllDevengadosUsingGET16(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListBonoEpctvDto>>;\n    public listFindAllDevengadosUsingGET16(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListBonoEpctvDto>>;\n    public listFindAllDevengadosUsingGET16(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET16.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListBonoEpctvDto>(`${this.configuration.basePath}/nomina-general/bonosEPCTV/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a BonoEpctv in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST41(dto: RequestTBonoEpctvDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBonoEpctvDto>;\n    public saveUsingPOST41(dto: RequestTBonoEpctvDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBonoEpctvDto>>;\n    public saveUsingPOST41(dto: RequestTBonoEpctvDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBonoEpctvDto>>;\n    public saveUsingPOST41(dto: RequestTBonoEpctvDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST41.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTBonoEpctvDto>(`${this.configuration.basePath}/nomina-general/bonosEPCTV`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update BonoEpctv in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT41(dto: RequestTBonoEpctvDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTBonoEpctvDto>;\n    public updateUsingPUT41(dto: RequestTBonoEpctvDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTBonoEpctvDto>>;\n    public updateUsingPUT41(dto: RequestTBonoEpctvDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTBonoEpctvDto>>;\n    public updateUsingPUT41(dto: RequestTBonoEpctvDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT41.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTBonoEpctvDto>(`${this.configuration.basePath}/nomina-general/bonosEPCTV`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTCesantiasDto } from '../model/models';\nimport { ResponseTCesantiasDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    CesantiasServiceInterface\n} from './cesantias.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CesantiasService implements CesantiasServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Cesantias in the system.\n     * @param id Id Cesantias\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE42(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE42(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE42(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE42(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE42.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/cesantias/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Cesantias in the system.\n     * @param id Id Cesantias\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET42(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTCesantiasDto>;\n    public findByIdUsingGET42(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTCesantiasDto>>;\n    public findByIdUsingGET42(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTCesantiasDto>>;\n    public findByIdUsingGET42(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET42.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTCesantiasDto>(`${this.configuration.basePath}/nomina-general/cesantias/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Cesantias in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET10(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET10(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET10(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET10(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllUsingGET10.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/cesantias/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Cesantias in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST42(dto: RequestTCesantiasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTCesantiasDto>;\n    public saveUsingPOST42(dto: RequestTCesantiasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTCesantiasDto>>;\n    public saveUsingPOST42(dto: RequestTCesantiasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTCesantiasDto>>;\n    public saveUsingPOST42(dto: RequestTCesantiasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST42.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTCesantiasDto>(`${this.configuration.basePath}/nomina-general/cesantias`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Cesantias in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT42(dto: RequestTCesantiasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTCesantiasDto>;\n    public updateUsingPUT42(dto: RequestTCesantiasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTCesantiasDto>>;\n    public updateUsingPUT42(dto: RequestTCesantiasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTCesantiasDto>>;\n    public updateUsingPUT42(dto: RequestTCesantiasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT42.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTCesantiasDto>(`${this.configuration.basePath}/nomina-general/cesantias`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTComisionDto } from '../model/models';\nimport { ResponseTComisionDto } from '../model/models';\nimport { ResponseTListComisionDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    ComisionesServiceInterface\n} from './comisiones.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComisionesService implements ComisionesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Comision in the system.\n     * @param id Id Comision\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE43(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE43(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE43(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE43(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE43.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/comisiones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Comision in the system.\n     * @param id Id Comision\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET43(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTComisionDto>;\n    public findByIdUsingGET43(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTComisionDto>>;\n    public findByIdUsingGET43(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTComisionDto>>;\n    public findByIdUsingGET43(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET43.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTComisionDto>(`${this.configuration.basePath}/nomina-general/comisiones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Comision in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET17(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListComisionDto>;\n    public listFindAllDevengadosUsingGET17(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListComisionDto>>;\n    public listFindAllDevengadosUsingGET17(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListComisionDto>>;\n    public listFindAllDevengadosUsingGET17(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET17.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListComisionDto>(`${this.configuration.basePath}/nomina-general/comisiones/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Comision in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST43(dto: RequestTComisionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTComisionDto>;\n    public saveUsingPOST43(dto: RequestTComisionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTComisionDto>>;\n    public saveUsingPOST43(dto: RequestTComisionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTComisionDto>>;\n    public saveUsingPOST43(dto: RequestTComisionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST43.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTComisionDto>(`${this.configuration.basePath}/nomina-general/comisiones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Comision in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT43(dto: RequestTComisionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTComisionDto>;\n    public updateUsingPUT43(dto: RequestTComisionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTComisionDto>>;\n    public updateUsingPUT43(dto: RequestTComisionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTComisionDto>>;\n    public updateUsingPUT43(dto: RequestTComisionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT43.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTComisionDto>(`${this.configuration.basePath}/nomina-general/comisiones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTCompensacionDto } from '../model/models';\nimport { ResponseTCompensacionDto } from '../model/models';\nimport { ResponseTListCompensacionDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    CompensacionesServiceInterface\n} from './compensaciones.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompensacionesService implements CompensacionesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Compensacion in the system.\n     * @param id Id Compensacion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE44(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE44(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE44(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE44(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE44.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/compensaciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Compensacion in the system.\n     * @param id Id Compensacion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET44(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTCompensacionDto>;\n    public findByIdUsingGET44(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTCompensacionDto>>;\n    public findByIdUsingGET44(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTCompensacionDto>>;\n    public findByIdUsingGET44(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET44.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTCompensacionDto>(`${this.configuration.basePath}/nomina-general/compensaciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Compensacion in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET18(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListCompensacionDto>;\n    public listFindAllDevengadosUsingGET18(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListCompensacionDto>>;\n    public listFindAllDevengadosUsingGET18(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListCompensacionDto>>;\n    public listFindAllDevengadosUsingGET18(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET18.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListCompensacionDto>(`${this.configuration.basePath}/nomina-general/compensaciones/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Compensacion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST44(dto: RequestTCompensacionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTCompensacionDto>;\n    public saveUsingPOST44(dto: RequestTCompensacionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTCompensacionDto>>;\n    public saveUsingPOST44(dto: RequestTCompensacionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTCompensacionDto>>;\n    public saveUsingPOST44(dto: RequestTCompensacionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST44.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTCompensacionDto>(`${this.configuration.basePath}/nomina-general/compensaciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Compensacion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT44(dto: RequestTCompensacionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTCompensacionDto>;\n    public updateUsingPUT44(dto: RequestTCompensacionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTCompensacionDto>>;\n    public updateUsingPUT44(dto: RequestTCompensacionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTCompensacionDto>>;\n    public updateUsingPUT44(dto: RequestTCompensacionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT44.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTCompensacionDto>(`${this.configuration.basePath}/nomina-general/compensaciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTDeduccionesDto } from '../model/models';\nimport { ResponseTDeduccionesCompleteDto } from '../model/models';\nimport { ResponseTDeduccionesDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    DeduccionesServiceInterface\n} from './deducciones.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeduccionesService implements DeduccionesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Deducciones in the system.\n     * @param id Id Deducciones\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE45(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE45(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE45(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE45(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE45.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/deducciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Find Deducciones complete in the system by DevengadosId.\n     * @param deduccionId DeduccionId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findAllDeduccionUsingGET1(deduccionId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDeduccionesCompleteDto>;\n    public findAllDeduccionUsingGET1(deduccionId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDeduccionesCompleteDto>>;\n    public findAllDeduccionUsingGET1(deduccionId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDeduccionesCompleteDto>>;\n    public findAllDeduccionUsingGET1(deduccionId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionId === null || deduccionId === undefined) {\n            throw new Error('Required parameter deduccionId was null or undefined when calling findAllDeduccionUsingGET1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTDeduccionesCompleteDto>(`${this.configuration.basePath}/nomina-general/deducciones/list/${encodeURIComponent(String(deduccionId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Deducciones in the system.\n     * @param id Id Deducciones\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET45(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDeduccionesDto>;\n    public findByIdUsingGET45(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDeduccionesDto>>;\n    public findByIdUsingGET45(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDeduccionesDto>>;\n    public findByIdUsingGET45(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET45.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTDeduccionesDto>(`${this.configuration.basePath}/nomina-general/deducciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Deducciones in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST45(dto: RequestTDeduccionesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDeduccionesDto>;\n    public saveUsingPOST45(dto: RequestTDeduccionesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDeduccionesDto>>;\n    public saveUsingPOST45(dto: RequestTDeduccionesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDeduccionesDto>>;\n    public saveUsingPOST45(dto: RequestTDeduccionesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST45.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTDeduccionesDto>(`${this.configuration.basePath}/nomina-general/deducciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Deducciones in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT45(dto: RequestTDeduccionesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDeduccionesDto>;\n    public updateUsingPUT45(dto: RequestTDeduccionesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDeduccionesDto>>;\n    public updateUsingPUT45(dto: RequestTDeduccionesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDeduccionesDto>>;\n    public updateUsingPUT45(dto: RequestTDeduccionesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT45.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTDeduccionesDto>(`${this.configuration.basePath}/nomina-general/deducciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTDevengadosDto } from '../model/models';\nimport { ResponseTDevengadosCompleteDto } from '../model/models';\nimport { ResponseTDevengadosDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    DevengadosServiceInterface\n} from './devengados.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevengadosService implements DevengadosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Devengados in the system.\n     * @param id Id Devengados\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE46(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE46(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE46(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE46(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE46.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/devengados/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Devengados in the system.\n     * @param id Id Devengados\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET46(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDevengadosDto>;\n    public findByIdUsingGET46(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDevengadosDto>>;\n    public findByIdUsingGET46(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDevengadosDto>>;\n    public findByIdUsingGET46(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET46.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTDevengadosDto>(`${this.configuration.basePath}/nomina-general/devengados/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Find Devengados complete in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET19(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDevengadosCompleteDto>;\n    public listFindAllDevengadosUsingGET19(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDevengadosCompleteDto>>;\n    public listFindAllDevengadosUsingGET19(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDevengadosCompleteDto>>;\n    public listFindAllDevengadosUsingGET19(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET19.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTDevengadosCompleteDto>(`${this.configuration.basePath}/nomina-general/devengados/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Devengados in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST46(dto: RequestTDevengadosDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDevengadosDto>;\n    public saveUsingPOST46(dto: RequestTDevengadosDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDevengadosDto>>;\n    public saveUsingPOST46(dto: RequestTDevengadosDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDevengadosDto>>;\n    public saveUsingPOST46(dto: RequestTDevengadosDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST46.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTDevengadosDto>(`${this.configuration.basePath}/nomina-general/devengados`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Devengados in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT46(dto: RequestTDevengadosDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTDevengadosDto>;\n    public updateUsingPUT46(dto: RequestTDevengadosDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTDevengadosDto>>;\n    public updateUsingPUT46(dto: RequestTDevengadosDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTDevengadosDto>>;\n    public updateUsingPUT46(dto: RequestTDevengadosDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT46.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTDevengadosDto>(`${this.configuration.basePath}/nomina-general/devengados`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTEmpleadorDto } from '../model/models';\nimport { ResponseTEmpleadorDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    EmpleadoresServiceInterface\n} from './empleadores.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpleadoresService implements EmpleadoresServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Empleador in the system.\n     * @param id Id Empleador\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE47(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE47(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE47(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE47(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE47.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/empleadores/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Empleador in the system.\n     * @param id Id Empleador\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET47(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTEmpleadorDto>;\n    public findByIdUsingGET47(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTEmpleadorDto>>;\n    public findByIdUsingGET47(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTEmpleadorDto>>;\n    public findByIdUsingGET47(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET47.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTEmpleadorDto>(`${this.configuration.basePath}/nomina-general/empleadores/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Empleador in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST47(dto: RequestTEmpleadorDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTEmpleadorDto>;\n    public saveUsingPOST47(dto: RequestTEmpleadorDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTEmpleadorDto>>;\n    public saveUsingPOST47(dto: RequestTEmpleadorDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTEmpleadorDto>>;\n    public saveUsingPOST47(dto: RequestTEmpleadorDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST47.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTEmpleadorDto>(`${this.configuration.basePath}/nomina-general/empleadores`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Empleador in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT47(dto: RequestTEmpleadorDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTEmpleadorDto>;\n    public updateUsingPUT47(dto: RequestTEmpleadorDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTEmpleadorDto>>;\n    public updateUsingPUT47(dto: RequestTEmpleadorDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTEmpleadorDto>>;\n    public updateUsingPUT47(dto: RequestTEmpleadorDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT47.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTEmpleadorDto>(`${this.configuration.basePath}/nomina-general/empleadores`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTFechasPagoDto } from '../model/models';\nimport { ResponseTFechasPagoDto } from '../model/models';\nimport { ResponseTListFechasPagoDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    FechasPagosServiceInterface\n} from './fechasPagos.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FechasPagosService implements FechasPagosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Fecha Pago in the system.\n     * @param id Id Fecha Pago\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE48(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE48(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE48(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE48(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE48.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/fechaPagos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Fecha Pago in the system.\n     * @param id Id Fecha Pago\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET48(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTFechasPagoDto>;\n    public findByIdUsingGET48(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTFechasPagoDto>>;\n    public findByIdUsingGET48(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTFechasPagoDto>>;\n    public findByIdUsingGET48(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET48.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTFechasPagoDto>(`${this.configuration.basePath}/nomina-general/fechaPagos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Fecha Pago in the system.\n     * @param payrollId PayrollId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllNominaIndividualIdUsingGET1(payrollId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListFechasPagoDto>;\n    public listFindAllNominaIndividualIdUsingGET1(payrollId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListFechasPagoDto>>;\n    public listFindAllNominaIndividualIdUsingGET1(payrollId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListFechasPagoDto>>;\n    public listFindAllNominaIndividualIdUsingGET1(payrollId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (payrollId === null || payrollId === undefined) {\n            throw new Error('Required parameter payrollId was null or undefined when calling listFindAllNominaIndividualIdUsingGET1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListFechasPagoDto>(`${this.configuration.basePath}/nomina-general/fechaPagos/list/${encodeURIComponent(String(payrollId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Fecha Pago in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST48(dto: RequestTFechasPagoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTFechasPagoDto>;\n    public saveUsingPOST48(dto: RequestTFechasPagoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTFechasPagoDto>>;\n    public saveUsingPOST48(dto: RequestTFechasPagoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTFechasPagoDto>>;\n    public saveUsingPOST48(dto: RequestTFechasPagoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST48.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTFechasPagoDto>(`${this.configuration.basePath}/nomina-general/fechaPagos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Fecha Pago in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT48(dto: RequestTFechasPagoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTFechasPagoDto>;\n    public updateUsingPUT48(dto: RequestTFechasPagoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTFechasPagoDto>>;\n    public updateUsingPUT48(dto: RequestTFechasPagoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTFechasPagoDto>>;\n    public updateUsingPUT48(dto: RequestTFechasPagoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT48.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTFechasPagoDto>(`${this.configuration.basePath}/nomina-general/fechaPagos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTFondoSpDto } from '../model/models';\nimport { ResponseTFondoSpDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    FondosSPServiceInterface\n} from './fondosSP.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FondosSPService implements FondosSPServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete FondoSp in the system.\n     * @param id Id FondoSp\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE49(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE49(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE49(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE49(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE49.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/fondosSP/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id FondoSp in the system.\n     * @param id Id FondoSp\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET49(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTFondoSpDto>;\n    public findByIdUsingGET49(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTFondoSpDto>>;\n    public findByIdUsingGET49(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTFondoSpDto>>;\n    public findByIdUsingGET49(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET49.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTFondoSpDto>(`${this.configuration.basePath}/nomina-general/fondosSP/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a FondoSp in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST49(dto: RequestTFondoSpDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTFondoSpDto>;\n    public saveUsingPOST49(dto: RequestTFondoSpDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTFondoSpDto>>;\n    public saveUsingPOST49(dto: RequestTFondoSpDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTFondoSpDto>>;\n    public saveUsingPOST49(dto: RequestTFondoSpDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST49.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTFondoSpDto>(`${this.configuration.basePath}/nomina-general/fondosSP`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update FondoSp in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT49(dto: RequestTFondoSpDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTFondoSpDto>;\n    public updateUsingPUT49(dto: RequestTFondoSpDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTFondoSpDto>>;\n    public updateUsingPUT49(dto: RequestTFondoSpDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTFondoSpDto>>;\n    public updateUsingPUT49(dto: RequestTFondoSpDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT49.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTFondoSpDto>(`${this.configuration.basePath}/nomina-general/fondosSP`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTHorariosAdicionalesDto } from '../model/models';\nimport { ResponseTHorariosAdicionalesDto } from '../model/models';\nimport { ResponseTListHorariosAdicionalesDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    HorariosAdicionalesServiceInterface\n} from './horariosAdicionales.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HorariosAdicionalesService implements HorariosAdicionalesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Horarios adicional in the system.\n     * @param id Id Horarios adiccional\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE50(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE50(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE50(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE50(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE50.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/horariosAdicionales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Horarios adicional in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findAllDevengadoIdUsingGET3(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHorariosAdicionalesDto>;\n    public findAllDevengadoIdUsingGET3(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHorariosAdicionalesDto>>;\n    public findAllDevengadoIdUsingGET3(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHorariosAdicionalesDto>>;\n    public findAllDevengadoIdUsingGET3(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling findAllDevengadoIdUsingGET3.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHorariosAdicionalesDto>(`${this.configuration.basePath}/nomina-general/horariosAdicionales/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Horarios adicional in the system.\n     * @param id Id Horarios adiccional\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET50(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTHorariosAdicionalesDto>;\n    public findByIdUsingGET50(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTHorariosAdicionalesDto>>;\n    public findByIdUsingGET50(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTHorariosAdicionalesDto>>;\n    public findByIdUsingGET50(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET50.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTHorariosAdicionalesDto>(`${this.configuration.basePath}/nomina-general/horariosAdicionales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Horarios adicional in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST50(dto: RequestTHorariosAdicionalesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTHorariosAdicionalesDto>;\n    public saveUsingPOST50(dto: RequestTHorariosAdicionalesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTHorariosAdicionalesDto>>;\n    public saveUsingPOST50(dto: RequestTHorariosAdicionalesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTHorariosAdicionalesDto>>;\n    public saveUsingPOST50(dto: RequestTHorariosAdicionalesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST50.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTHorariosAdicionalesDto>(`${this.configuration.basePath}/nomina-general/horariosAdicionales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Horarios adicional in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT50(dto: RequestTHorariosAdicionalesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTHorariosAdicionalesDto>;\n    public updateUsingPUT50(dto: RequestTHorariosAdicionalesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTHorariosAdicionalesDto>>;\n    public updateUsingPUT50(dto: RequestTHorariosAdicionalesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTHorariosAdicionalesDto>>;\n    public updateUsingPUT50(dto: RequestTHorariosAdicionalesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT50.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTHorariosAdicionalesDto>(`${this.configuration.basePath}/nomina-general/horariosAdicionales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTHuelgaLegalDto } from '../model/models';\nimport { ResponseTHuelgaLegalDto } from '../model/models';\nimport { ResponseTListHuelgaLegalDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    HuelgasLegalesServiceInterface\n} from './huelgasLegales.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HuelgasLegalesService implements HuelgasLegalesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Huelga Legal in the system.\n     * @param id Id Huelga Legal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE51(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE51(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE51(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE51(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE51.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/huelgasLegales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Huelga Legal in the system.\n     * @param id Id Huelga Legal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET51(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTHuelgaLegalDto>;\n    public findByIdUsingGET51(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTHuelgaLegalDto>>;\n    public findByIdUsingGET51(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTHuelgaLegalDto>>;\n    public findByIdUsingGET51(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET51.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTHuelgaLegalDto>(`${this.configuration.basePath}/nomina-general/huelgasLegales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Huelga Legal in the system.\n     * @param devengadoId DevengadoId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET20(devengadoId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHuelgaLegalDto>;\n    public listFindAllDevengadosUsingGET20(devengadoId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHuelgaLegalDto>>;\n    public listFindAllDevengadosUsingGET20(devengadoId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHuelgaLegalDto>>;\n    public listFindAllDevengadosUsingGET20(devengadoId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadoId === null || devengadoId === undefined) {\n            throw new Error('Required parameter devengadoId was null or undefined when calling listFindAllDevengadosUsingGET20.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHuelgaLegalDto>(`${this.configuration.basePath}/nomina-general/huelgasLegales/list/${encodeURIComponent(String(devengadoId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Huelga Legal in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST51(dto: RequestTHuelgaLegalDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTHuelgaLegalDto>;\n    public saveUsingPOST51(dto: RequestTHuelgaLegalDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTHuelgaLegalDto>>;\n    public saveUsingPOST51(dto: RequestTHuelgaLegalDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTHuelgaLegalDto>>;\n    public saveUsingPOST51(dto: RequestTHuelgaLegalDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST51.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTHuelgaLegalDto>(`${this.configuration.basePath}/nomina-general/huelgasLegales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Huelga Legal in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT51(dto: RequestTHuelgaLegalDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTHuelgaLegalDto>;\n    public updateUsingPUT51(dto: RequestTHuelgaLegalDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTHuelgaLegalDto>>;\n    public updateUsingPUT51(dto: RequestTHuelgaLegalDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTHuelgaLegalDto>>;\n    public updateUsingPUT51(dto: RequestTHuelgaLegalDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT51.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTHuelgaLegalDto>(`${this.configuration.basePath}/nomina-general/huelgasLegales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTIncapacidadDto } from '../model/models';\nimport { ResponseTIncapacidadDto } from '../model/models';\nimport { ResponseTListIncapacidadDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    IncapacidadesServiceInterface\n} from './incapacidades.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncapacidadesService implements IncapacidadesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Incapacidad in the system.\n     * @param id Id Incapacidad\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE52(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE52(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE52(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE52(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE52.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/incapacidades/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Incapacidad in the system.\n     * @param id Id Incapacidad\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET52(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTIncapacidadDto>;\n    public findByIdUsingGET52(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTIncapacidadDto>>;\n    public findByIdUsingGET52(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTIncapacidadDto>>;\n    public findByIdUsingGET52(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET52.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTIncapacidadDto>(`${this.configuration.basePath}/nomina-general/incapacidades/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Incapacidad in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET21(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListIncapacidadDto>;\n    public listFindAllDevengadosUsingGET21(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListIncapacidadDto>>;\n    public listFindAllDevengadosUsingGET21(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListIncapacidadDto>>;\n    public listFindAllDevengadosUsingGET21(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET21.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListIncapacidadDto>(`${this.configuration.basePath}/nomina-general/incapacidades/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Incapacidad in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST52(dto: RequestTIncapacidadDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTIncapacidadDto>;\n    public saveUsingPOST52(dto: RequestTIncapacidadDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTIncapacidadDto>>;\n    public saveUsingPOST52(dto: RequestTIncapacidadDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTIncapacidadDto>>;\n    public saveUsingPOST52(dto: RequestTIncapacidadDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST52.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTIncapacidadDto>(`${this.configuration.basePath}/nomina-general/incapacidades`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Incapacidad in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT52(dto: RequestTIncapacidadDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTIncapacidadDto>;\n    public updateUsingPUT52(dto: RequestTIncapacidadDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTIncapacidadDto>>;\n    public updateUsingPUT52(dto: RequestTIncapacidadDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTIncapacidadDto>>;\n    public updateUsingPUT52(dto: RequestTIncapacidadDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT52.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTIncapacidadDto>(`${this.configuration.basePath}/nomina-general/incapacidades`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTInformacionGeneralDto } from '../model/models';\nimport { ResponseTInformacionGeneralDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    InformacionesGeneralesServiceInterface\n} from './informacionesGenerales.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InformacionesGeneralesService implements InformacionesGeneralesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Informacion General in the system.\n     * @param id Id Informacion General\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE53(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE53(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE53(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE53(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE53.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/informacionesGenerales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Informacion General in the system.\n     * @param id Id Informacion General\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET53(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTInformacionGeneralDto>;\n    public findByIdUsingGET53(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTInformacionGeneralDto>>;\n    public findByIdUsingGET53(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTInformacionGeneralDto>>;\n    public findByIdUsingGET53(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET53.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTInformacionGeneralDto>(`${this.configuration.basePath}/nomina-general/informacionesGenerales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Informacion General in the system.\n     * @param deducionesId deducionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET11(deducionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET11(deducionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET11(deducionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET11(deducionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deducionesId === null || deducionesId === undefined) {\n            throw new Error('Required parameter deducionesId was null or undefined when calling listFindAllUsingGET11.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/informacionesGenerales/list/${encodeURIComponent(String(deducionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Informacion General in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST53(dto: RequestTInformacionGeneralDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTInformacionGeneralDto>;\n    public saveUsingPOST53(dto: RequestTInformacionGeneralDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTInformacionGeneralDto>>;\n    public saveUsingPOST53(dto: RequestTInformacionGeneralDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTInformacionGeneralDto>>;\n    public saveUsingPOST53(dto: RequestTInformacionGeneralDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST53.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTInformacionGeneralDto>(`${this.configuration.basePath}/nomina-general/informacionesGenerales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Informacion General in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT53(dto: RequestTInformacionGeneralDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTInformacionGeneralDto>;\n    public updateUsingPUT53(dto: RequestTInformacionGeneralDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTInformacionGeneralDto>>;\n    public updateUsingPUT53(dto: RequestTInformacionGeneralDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTInformacionGeneralDto>>;\n    public updateUsingPUT53(dto: RequestTInformacionGeneralDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT53.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTInformacionGeneralDto>(`${this.configuration.basePath}/nomina-general/informacionesGenerales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTLibranzasDto } from '../model/models';\nimport { ResponseTLibranzasDto } from '../model/models';\nimport { ResponseTListLibranzasDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    LibranzasServiceInterface\n} from './libranzas.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibranzasService implements LibranzasServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Libranza in the system.\n     * @param id Id Libranza\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE54(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE54(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE54(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE54(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE54.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/libranzas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Libranza in the system.\n     * @param id Id Libranza\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET54(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLibranzasDto>;\n    public findByIdUsingGET54(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLibranzasDto>>;\n    public findByIdUsingGET54(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLibranzasDto>>;\n    public findByIdUsingGET54(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET54.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTLibranzasDto>(`${this.configuration.basePath}/nomina-general/libranzas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Libranza in the system.\n     * @param deduccionesId DeduccionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDeduccionesIdUsingGET1(deduccionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListLibranzasDto>;\n    public listFindAllDeduccionesIdUsingGET1(deduccionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListLibranzasDto>>;\n    public listFindAllDeduccionesIdUsingGET1(deduccionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListLibranzasDto>>;\n    public listFindAllDeduccionesIdUsingGET1(deduccionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionesId === null || deduccionesId === undefined) {\n            throw new Error('Required parameter deduccionesId was null or undefined when calling listFindAllDeduccionesIdUsingGET1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListLibranzasDto>(`${this.configuration.basePath}/nomina-general/libranzas/list/${encodeURIComponent(String(deduccionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Libranza in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST54(dto: RequestTLibranzasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLibranzasDto>;\n    public saveUsingPOST54(dto: RequestTLibranzasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLibranzasDto>>;\n    public saveUsingPOST54(dto: RequestTLibranzasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLibranzasDto>>;\n    public saveUsingPOST54(dto: RequestTLibranzasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST54.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTLibranzasDto>(`${this.configuration.basePath}/nomina-general/libranzas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Libranza in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT54(dto: RequestTLibranzasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLibranzasDto>;\n    public updateUsingPUT54(dto: RequestTLibranzasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLibranzasDto>>;\n    public updateUsingPUT54(dto: RequestTLibranzasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLibranzasDto>>;\n    public updateUsingPUT54(dto: RequestTLibranzasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT54.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTLibranzasDto>(`${this.configuration.basePath}/nomina-general/libranzas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTLicenciasDto } from '../model/models';\nimport { ResponseTLicenciasDto } from '../model/models';\nimport { ResponseTListLicenciasDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    LicenciasServiceInterface\n} from './licencias.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LicenciasService implements LicenciasServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Licencia in the system.\n     * @param id Id Licencia\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE55(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE55(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE55(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE55(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE55.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/licencias/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Licencia in the system.\n     * @param id Id Licencia\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET55(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLicenciasDto>;\n    public findByIdUsingGET55(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLicenciasDto>>;\n    public findByIdUsingGET55(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLicenciasDto>>;\n    public findByIdUsingGET55(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET55.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTLicenciasDto>(`${this.configuration.basePath}/nomina-general/licencias/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Licencia in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET22(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListLicenciasDto>;\n    public listFindAllDevengadosUsingGET22(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListLicenciasDto>>;\n    public listFindAllDevengadosUsingGET22(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListLicenciasDto>>;\n    public listFindAllDevengadosUsingGET22(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET22.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListLicenciasDto>(`${this.configuration.basePath}/nomina-general/licencias/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Licencia in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST55(dto: RequestTLicenciasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLicenciasDto>;\n    public saveUsingPOST55(dto: RequestTLicenciasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLicenciasDto>>;\n    public saveUsingPOST55(dto: RequestTLicenciasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLicenciasDto>>;\n    public saveUsingPOST55(dto: RequestTLicenciasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST55.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTLicenciasDto>(`${this.configuration.basePath}/nomina-general/licencias`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Licencia in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT55(dto: RequestTLicenciasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLicenciasDto>;\n    public updateUsingPUT55(dto: RequestTLicenciasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLicenciasDto>>;\n    public updateUsingPUT55(dto: RequestTLicenciasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLicenciasDto>>;\n    public updateUsingPUT55(dto: RequestTLicenciasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT55.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTLicenciasDto>(`${this.configuration.basePath}/nomina-general/licencias`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTLugarGeneracionXmlDto } from '../model/models';\nimport { ResponseTLugarGeneracionXmlDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    LugaresGeneracionXMLServiceInterface\n} from './lugaresGeneracionXML.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LugaresGeneracionXMLService implements LugaresGeneracionXMLServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Lugar Generacion xml in the system.\n     * @param id Id Lugar Generacion xml\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE56(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE56(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE56(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE56(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE56.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/lugaresGeneracionXML/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Lugar Generacion xml in the system.\n     * @param id Id Lugar Generacion xml\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET56(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLugarGeneracionXmlDto>;\n    public findByIdUsingGET56(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLugarGeneracionXmlDto>>;\n    public findByIdUsingGET56(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLugarGeneracionXmlDto>>;\n    public findByIdUsingGET56(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET56.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTLugarGeneracionXmlDto>(`${this.configuration.basePath}/nomina-general/lugaresGeneracionXML/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Lugar Generacion xml in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST56(dto: RequestTLugarGeneracionXmlDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLugarGeneracionXmlDto>;\n    public saveUsingPOST56(dto: RequestTLugarGeneracionXmlDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLugarGeneracionXmlDto>>;\n    public saveUsingPOST56(dto: RequestTLugarGeneracionXmlDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLugarGeneracionXmlDto>>;\n    public saveUsingPOST56(dto: RequestTLugarGeneracionXmlDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST56.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTLugarGeneracionXmlDto>(`${this.configuration.basePath}/nomina-general/lugaresGeneracionXML`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Lugar Generacion xml in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT56(dto: RequestTLugarGeneracionXmlDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTLugarGeneracionXmlDto>;\n    public updateUsingPUT56(dto: RequestTLugarGeneracionXmlDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTLugarGeneracionXmlDto>>;\n    public updateUsingPUT56(dto: RequestTLugarGeneracionXmlDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTLugarGeneracionXmlDto>>;\n    public updateUsingPUT56(dto: RequestTLugarGeneracionXmlDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT56.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTLugarGeneracionXmlDto>(`${this.configuration.basePath}/nomina-general/lugaresGeneracionXML`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTNominaGeneralDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTNominaGeneralDto } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    NominasGeneralesServiceInterface\n} from './nominasGenerales.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NominasGeneralesService implements NominasGeneralesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Nomina General in the system.\n     * @param id Id Nomina General\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE57(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public deleteUsingDELETE57(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public deleteUsingDELETE57(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public deleteUsingDELETE57(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE57.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/nominasGenerales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Nomina General in the system.\n     * @param id Id Nomina General\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET57(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNominaGeneralDto>;\n    public findByIdUsingGET57(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNominaGeneralDto>>;\n    public findByIdUsingGET57(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNominaGeneralDto>>;\n    public findByIdUsingGET57(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET57.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTNominaGeneralDto>(`${this.configuration.basePath}/nomina-general/nominasGenerales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Nomina General in the system.\n     * @param businessSubscriptionId businessSubscriptionId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET12(businessSubscriptionId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET12(businessSubscriptionId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET12(businessSubscriptionId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET12(businessSubscriptionId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (businessSubscriptionId === null || businessSubscriptionId === undefined) {\n            throw new Error('Required parameter businessSubscriptionId was null or undefined when calling listFindAllUsingGET12.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/nominasGenerales/list/${encodeURIComponent(String(businessSubscriptionId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Nomina General in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST57(dto: RequestTNominaGeneralDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNominaGeneralDto>;\n    public saveUsingPOST57(dto: RequestTNominaGeneralDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNominaGeneralDto>>;\n    public saveUsingPOST57(dto: RequestTNominaGeneralDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNominaGeneralDto>>;\n    public saveUsingPOST57(dto: RequestTNominaGeneralDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST57.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTNominaGeneralDto>(`${this.configuration.basePath}/nomina-general/nominasGenerales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Nomina General in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT57(dto: RequestTNominaGeneralDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNominaGeneralDto>;\n    public updateUsingPUT57(dto: RequestTNominaGeneralDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNominaGeneralDto>>;\n    public updateUsingPUT57(dto: RequestTNominaGeneralDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNominaGeneralDto>>;\n    public updateUsingPUT57(dto: RequestTNominaGeneralDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT57.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTNominaGeneralDto>(`${this.configuration.basePath}/nomina-general/nominasGenerales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTNominaIndividualDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTNominaIndividualCompleteDto } from '../model/models';\nimport { ResponseTNominaIndividualDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    NominasIndividualesServiceInterface\n} from './nominasIndividuales.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NominasIndividualesService implements NominasIndividualesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Nomina Individual in the system.\n     * @param id Id Nomina Individual\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE58(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE58(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE58(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE58(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE58.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/nominasIndividuales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Nomina Individual in the system.\n     * @param id Id Nomina Individual\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET58(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNominaIndividualCompleteDto>;\n    public findByIdUsingGET58(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNominaIndividualCompleteDto>>;\n    public findByIdUsingGET58(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNominaIndividualCompleteDto>>;\n    public findByIdUsingGET58(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET58.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTNominaIndividualCompleteDto>(`${this.configuration.basePath}/nomina-general/nominasIndividuales/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Nomina Individual in the system.\n     * @param businessSubscriptionId businessSubscriptionId\n     * @param nominaGeneralId nominaGeneralId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET13(businessSubscriptionId: string, nominaGeneralId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET13(businessSubscriptionId: string, nominaGeneralId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET13(businessSubscriptionId: string, nominaGeneralId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET13(businessSubscriptionId: string, nominaGeneralId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (businessSubscriptionId === null || businessSubscriptionId === undefined) {\n            throw new Error('Required parameter businessSubscriptionId was null or undefined when calling listFindAllUsingGET13.');\n        }\n        if (nominaGeneralId === null || nominaGeneralId === undefined) {\n            throw new Error('Required parameter nominaGeneralId was null or undefined when calling listFindAllUsingGET13.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/nominasIndividuales/list/${encodeURIComponent(String(businessSubscriptionId))}/${encodeURIComponent(String(nominaGeneralId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Nomina Individual in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST58(dto: RequestTNominaIndividualDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNominaIndividualDto>;\n    public saveUsingPOST58(dto: RequestTNominaIndividualDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNominaIndividualDto>>;\n    public saveUsingPOST58(dto: RequestTNominaIndividualDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNominaIndividualDto>>;\n    public saveUsingPOST58(dto: RequestTNominaIndividualDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST58.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTNominaIndividualDto>(`${this.configuration.basePath}/nomina-general/nominasIndividuales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Nomina Individual in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT58(dto: RequestTNominaIndividualDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNominaIndividualDto>;\n    public updateUsingPUT58(dto: RequestTNominaIndividualDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNominaIndividualDto>>;\n    public updateUsingPUT58(dto: RequestTNominaIndividualDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNominaIndividualDto>>;\n    public updateUsingPUT58(dto: RequestTNominaIndividualDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT58.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTNominaIndividualDto>(`${this.configuration.basePath}/nomina-general/nominasIndividuales`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTNotasDto } from '../model/models';\nimport { ResponseTNotasDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    NotasServiceInterface\n} from './notas.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotasService implements NotasServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Nota in the system.\n     * @param id Id Nota\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE59(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE59(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE59(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE59(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE59.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/notas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Nota in the system.\n     * @param id Id Nota\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET59(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNotasDto>;\n    public findByIdUsingGET59(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNotasDto>>;\n    public findByIdUsingGET59(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNotasDto>>;\n    public findByIdUsingGET59(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET59.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTNotasDto>(`${this.configuration.basePath}/nomina-general/notas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Nota in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST59(dto: RequestTNotasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNotasDto>;\n    public saveUsingPOST59(dto: RequestTNotasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNotasDto>>;\n    public saveUsingPOST59(dto: RequestTNotasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNotasDto>>;\n    public saveUsingPOST59(dto: RequestTNotasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST59.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTNotasDto>(`${this.configuration.basePath}/nomina-general/notas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Nota in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT59(dto: RequestTNotasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNotasDto>;\n    public updateUsingPUT59(dto: RequestTNotasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNotasDto>>;\n    public updateUsingPUT59(dto: RequestTNotasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNotasDto>>;\n    public updateUsingPUT59(dto: RequestTNotasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT59.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTNotasDto>(`${this.configuration.basePath}/nomina-general/notas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTNumeroSecuenciaXmlDto } from '../model/models';\nimport { ResponseTNumeroSecuenciaXmlDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    NumerosSecuenciaXMLServiceInterface\n} from './numerosSecuenciaXML.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NumerosSecuenciaXMLService implements NumerosSecuenciaXMLServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete NumeroSecuenciaXml in the system.\n     * @param id Id NumeroSecuenciaXml\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE60(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE60(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE60(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE60(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE60.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/numerosSecuenciaXML/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id NumeroSecuenciaXml in the system.\n     * @param id Id NumeroSecuenciaXml\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET60(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNumeroSecuenciaXmlDto>;\n    public findByIdUsingGET60(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNumeroSecuenciaXmlDto>>;\n    public findByIdUsingGET60(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNumeroSecuenciaXmlDto>>;\n    public findByIdUsingGET60(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET60.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTNumeroSecuenciaXmlDto>(`${this.configuration.basePath}/nomina-general/numerosSecuenciaXML/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a NumeroSecuenciaXml in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST60(dto: RequestTNumeroSecuenciaXmlDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNumeroSecuenciaXmlDto>;\n    public saveUsingPOST60(dto: RequestTNumeroSecuenciaXmlDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNumeroSecuenciaXmlDto>>;\n    public saveUsingPOST60(dto: RequestTNumeroSecuenciaXmlDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNumeroSecuenciaXmlDto>>;\n    public saveUsingPOST60(dto: RequestTNumeroSecuenciaXmlDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST60.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTNumeroSecuenciaXmlDto>(`${this.configuration.basePath}/nomina-general/numerosSecuenciaXML`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update NumeroSecuenciaXml in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT60(dto: RequestTNumeroSecuenciaXmlDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTNumeroSecuenciaXmlDto>;\n    public updateUsingPUT60(dto: RequestTNumeroSecuenciaXmlDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTNumeroSecuenciaXmlDto>>;\n    public updateUsingPUT60(dto: RequestTNumeroSecuenciaXmlDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTNumeroSecuenciaXmlDto>>;\n    public updateUsingPUT60(dto: RequestTNumeroSecuenciaXmlDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT60.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTNumeroSecuenciaXmlDto>(`${this.configuration.basePath}/nomina-general/numerosSecuenciaXML`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTOtrasDeduccionesDto } from '../model/models';\nimport { ResponseTListOtrasDeduccionesDto } from '../model/models';\nimport { ResponseTOtrasDeduccionesDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    OtrasDeduccionesServiceInterface\n} from './otrasDeducciones.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OtrasDeduccionesService implements OtrasDeduccionesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Otra Deduccion in the system.\n     * @param id Id Otra Deduccion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE61(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE61(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE61(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE61(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE61.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/otrasDeducciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Otra Deduccion in the system.\n     * @param id Id Otra Deduccion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET61(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTOtrasDeduccionesDto>;\n    public findByIdUsingGET61(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTOtrasDeduccionesDto>>;\n    public findByIdUsingGET61(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTOtrasDeduccionesDto>>;\n    public findByIdUsingGET61(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET61.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTOtrasDeduccionesDto>(`${this.configuration.basePath}/nomina-general/otrasDeducciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Otra Deduccion in the system by DeduccionesId.\n     * @param deduccionesId DeduccionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDeduccionesUsingGET5(deduccionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListOtrasDeduccionesDto>;\n    public listFindAllDeduccionesUsingGET5(deduccionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListOtrasDeduccionesDto>>;\n    public listFindAllDeduccionesUsingGET5(deduccionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListOtrasDeduccionesDto>>;\n    public listFindAllDeduccionesUsingGET5(deduccionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionesId === null || deduccionesId === undefined) {\n            throw new Error('Required parameter deduccionesId was null or undefined when calling listFindAllDeduccionesUsingGET5.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListOtrasDeduccionesDto>(`${this.configuration.basePath}/nomina-general/otrasDeducciones/list/${encodeURIComponent(String(deduccionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Otra Deduccion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST61(dto: RequestTOtrasDeduccionesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTOtrasDeduccionesDto>;\n    public saveUsingPOST61(dto: RequestTOtrasDeduccionesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTOtrasDeduccionesDto>>;\n    public saveUsingPOST61(dto: RequestTOtrasDeduccionesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTOtrasDeduccionesDto>>;\n    public saveUsingPOST61(dto: RequestTOtrasDeduccionesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST61.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTOtrasDeduccionesDto>(`${this.configuration.basePath}/nomina-general/otrasDeducciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Otra Deduccion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT61(dto: RequestTOtrasDeduccionesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTOtrasDeduccionesDto>;\n    public updateUsingPUT61(dto: RequestTOtrasDeduccionesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTOtrasDeduccionesDto>>;\n    public updateUsingPUT61(dto: RequestTOtrasDeduccionesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTOtrasDeduccionesDto>>;\n    public updateUsingPUT61(dto: RequestTOtrasDeduccionesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT61.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTOtrasDeduccionesDto>(`${this.configuration.basePath}/nomina-general/otrasDeducciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTOtroConceptoDto } from '../model/models';\nimport { ResponseTListOtroConceptoDto } from '../model/models';\nimport { ResponseTOtroConceptoDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    OtrosConceptosServiceInterface\n} from './otrosConceptos.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OtrosConceptosService implements OtrosConceptosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Otro Concepto in the system.\n     * @param id Id Otro Concepto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE62(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE62(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE62(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE62(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE62.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/otrosConceptos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Otro Concepto in the system.\n     * @param id Id Otro Concepto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET62(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTOtroConceptoDto>;\n    public findByIdUsingGET62(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTOtroConceptoDto>>;\n    public findByIdUsingGET62(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTOtroConceptoDto>>;\n    public findByIdUsingGET62(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET62.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTOtroConceptoDto>(`${this.configuration.basePath}/nomina-general/otrosConceptos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Otro Concepto in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET23(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListOtroConceptoDto>;\n    public listFindAllDevengadosUsingGET23(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListOtroConceptoDto>>;\n    public listFindAllDevengadosUsingGET23(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListOtroConceptoDto>>;\n    public listFindAllDevengadosUsingGET23(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET23.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListOtroConceptoDto>(`${this.configuration.basePath}/nomina-general/otrosConceptos/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Otro Concepto in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST62(dto: RequestTOtroConceptoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTOtroConceptoDto>;\n    public saveUsingPOST62(dto: RequestTOtroConceptoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTOtroConceptoDto>>;\n    public saveUsingPOST62(dto: RequestTOtroConceptoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTOtroConceptoDto>>;\n    public saveUsingPOST62(dto: RequestTOtroConceptoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST62.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTOtroConceptoDto>(`${this.configuration.basePath}/nomina-general/otrosConceptos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Otro Concepto in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT62(dto: RequestTOtroConceptoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTOtroConceptoDto>;\n    public updateUsingPUT62(dto: RequestTOtroConceptoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTOtroConceptoDto>>;\n    public updateUsingPUT62(dto: RequestTOtroConceptoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTOtroConceptoDto>>;\n    public updateUsingPUT62(dto: RequestTOtroConceptoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT62.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTOtroConceptoDto>(`${this.configuration.basePath}/nomina-general/otrosConceptos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTPagoDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTPagoDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    PagosServiceInterface\n} from './pagos.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagosService implements PagosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Pago in the system.\n     * @param id Id Pago\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE63(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE63(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE63(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE63(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE63.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/pagos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Pago in the system.\n     * @param id Id Pago\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET63(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPagoDto>;\n    public findByIdUsingGET63(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPagoDto>>;\n    public findByIdUsingGET63(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPagoDto>>;\n    public findByIdUsingGET63(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET63.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTPagoDto>(`${this.configuration.basePath}/nomina-general/pagos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Pago in the system.\n     * @param payrollId PayrollId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET14(payrollId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET14(payrollId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET14(payrollId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET14(payrollId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (payrollId === null || payrollId === undefined) {\n            throw new Error('Required parameter payrollId was null or undefined when calling listFindAllUsingGET14.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/pagos/list/${encodeURIComponent(String(payrollId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Pago in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST63(dto: RequestTPagoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPagoDto>;\n    public saveUsingPOST63(dto: RequestTPagoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPagoDto>>;\n    public saveUsingPOST63(dto: RequestTPagoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPagoDto>>;\n    public saveUsingPOST63(dto: RequestTPagoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST63.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTPagoDto>(`${this.configuration.basePath}/nomina-general/pagos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Pago in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT63(dto: RequestTPagoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPagoDto>;\n    public updateUsingPUT63(dto: RequestTPagoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPagoDto>>;\n    public updateUsingPUT63(dto: RequestTPagoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPagoDto>>;\n    public updateUsingPUT63(dto: RequestTPagoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT63.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTPagoDto>(`${this.configuration.basePath}/nomina-general/pagos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTPagoTercerosDto } from '../model/models';\nimport { ResponseTListPagoTercerosDto } from '../model/models';\nimport { ResponseTPagoTercerosDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    PagosTercerosServiceInterface\n} from './pagosTerceros.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagosTercerosService implements PagosTercerosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Pago Terceros in the system.\n     * @param id Id Pago Terceros\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE64(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE64(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE64(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE64(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE64.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/pagosTerceros/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Pago Terceros in the system.\n     * @param id Id Pago Terceros\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET64(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPagoTercerosDto>;\n    public findByIdUsingGET64(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPagoTercerosDto>>;\n    public findByIdUsingGET64(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPagoTercerosDto>>;\n    public findByIdUsingGET64(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET64.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTPagoTercerosDto>(`${this.configuration.basePath}/nomina-general/pagosTerceros/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Pago Terceros in the system by DeduccionesId.\n     * @param deduccionesId DeduccionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDeduccionesUsingGET6(deduccionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListPagoTercerosDto>;\n    public listFindAllDeduccionesUsingGET6(deduccionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListPagoTercerosDto>>;\n    public listFindAllDeduccionesUsingGET6(deduccionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListPagoTercerosDto>>;\n    public listFindAllDeduccionesUsingGET6(deduccionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionesId === null || deduccionesId === undefined) {\n            throw new Error('Required parameter deduccionesId was null or undefined when calling listFindAllDeduccionesUsingGET6.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListPagoTercerosDto>(`${this.configuration.basePath}/nomina-general/pagosTerceros/list/deducciones/${encodeURIComponent(String(deduccionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Pago Terceros in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET24(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListPagoTercerosDto>;\n    public listFindAllDevengadosUsingGET24(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListPagoTercerosDto>>;\n    public listFindAllDevengadosUsingGET24(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListPagoTercerosDto>>;\n    public listFindAllDevengadosUsingGET24(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET24.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListPagoTercerosDto>(`${this.configuration.basePath}/nomina-general/pagosTerceros/list/devengados/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Pago Terceros in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST64(dto: RequestTPagoTercerosDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPagoTercerosDto>;\n    public saveUsingPOST64(dto: RequestTPagoTercerosDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPagoTercerosDto>>;\n    public saveUsingPOST64(dto: RequestTPagoTercerosDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPagoTercerosDto>>;\n    public saveUsingPOST64(dto: RequestTPagoTercerosDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST64.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTPagoTercerosDto>(`${this.configuration.basePath}/nomina-general/pagosTerceros`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Pago Terceros in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT64(dto: RequestTPagoTercerosDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPagoTercerosDto>;\n    public updateUsingPUT64(dto: RequestTPagoTercerosDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPagoTercerosDto>>;\n    public updateUsingPUT64(dto: RequestTPagoTercerosDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPagoTercerosDto>>;\n    public updateUsingPUT64(dto: RequestTPagoTercerosDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT64.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTPagoTercerosDto>(`${this.configuration.basePath}/nomina-general/pagosTerceros`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ListNominaIndividualRequest } from '../model/models';\nimport { PayrollSent } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    PayrollsServiceInterface\n} from './payrolls.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollsService implements PayrollsServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Find a Payroll by docNumber in the system.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public payrollListUsingGET1(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<string>;\n    public payrollListUsingGET1(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<string>>;\n    public payrollListUsingGET1(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<string>>;\n    public payrollListUsingGET1(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/nomina-general/payrolls/list`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Send a Payroll to prepare and send the document to DIAN.\n     * @param list list\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendListUsingPOST4(list: ListNominaIndividualRequest, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<any>>;\n    public sendListUsingPOST4(list: ListNominaIndividualRequest, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<any>>>;\n    public sendListUsingPOST4(list: ListNominaIndividualRequest, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<any>>>;\n    public sendListUsingPOST4(list: ListNominaIndividualRequest, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (list === null || list === undefined) {\n            throw new Error('Required parameter list was null or undefined when calling sendListUsingPOST4.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<Array<any>>(`${this.configuration.basePath}/nomina-general/payrolls/send-list`,\n            list,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTPeriodoDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTPeriodoDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    PeriodosServiceInterface\n} from './periodos.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeriodosService implements PeriodosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Periodo in the system.\n     * @param id Id Periodo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE65(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE65(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE65(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE65(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE65.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/periodos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Periodo in the system.\n     * @param id Id Periodo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET65(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPeriodoDto>;\n    public findByIdUsingGET65(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPeriodoDto>>;\n    public findByIdUsingGET65(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPeriodoDto>>;\n    public findByIdUsingGET65(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET65.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTPeriodoDto>(`${this.configuration.basePath}/nomina-general/periodos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Periodo in the system.\n     * @param param param\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET15(param: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET15(param: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET15(param: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET15(param: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (param === null || param === undefined) {\n            throw new Error('Required parameter param was null or undefined when calling listFindAllUsingGET15.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/periodos/list/${encodeURIComponent(String())}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Periodo in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST65(dto: RequestTPeriodoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPeriodoDto>;\n    public saveUsingPOST65(dto: RequestTPeriodoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPeriodoDto>>;\n    public saveUsingPOST65(dto: RequestTPeriodoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPeriodoDto>>;\n    public saveUsingPOST65(dto: RequestTPeriodoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST65.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTPeriodoDto>(`${this.configuration.basePath}/nomina-general/periodos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Periodo in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT65(dto: RequestTPeriodoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPeriodoDto>;\n    public updateUsingPUT65(dto: RequestTPeriodoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPeriodoDto>>;\n    public updateUsingPUT65(dto: RequestTPeriodoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPeriodoDto>>;\n    public updateUsingPUT65(dto: RequestTPeriodoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT65.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTPeriodoDto>(`${this.configuration.basePath}/nomina-general/periodos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTPrimasDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTPrimasDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    PrimasServiceInterface\n} from './primas.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrimasService implements PrimasServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Prima in the system.\n     * @param id Id Prima\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE66(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE66(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE66(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE66(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE66.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/primas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Prima in the system.\n     * @param id Id Prima\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET66(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPrimasDto>;\n    public findByIdUsingGET66(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPrimasDto>>;\n    public findByIdUsingGET66(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPrimasDto>>;\n    public findByIdUsingGET66(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET66.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTPrimasDto>(`${this.configuration.basePath}/nomina-general/primas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Prima in the system.\n     * @param param param\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET16(param: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET16(param: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET16(param: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET16(param: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (param === null || param === undefined) {\n            throw new Error('Required parameter param was null or undefined when calling listFindAllUsingGET16.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/primas/list/${encodeURIComponent(String(param))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Prima in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST66(dto: RequestTPrimasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPrimasDto>;\n    public saveUsingPOST66(dto: RequestTPrimasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPrimasDto>>;\n    public saveUsingPOST66(dto: RequestTPrimasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPrimasDto>>;\n    public saveUsingPOST66(dto: RequestTPrimasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST66.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTPrimasDto>(`${this.configuration.basePath}/nomina-general/primas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Prima in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT66(dto: RequestTPrimasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTPrimasDto>;\n    public updateUsingPUT66(dto: RequestTPrimasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTPrimasDto>>;\n    public updateUsingPUT66(dto: RequestTPrimasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTPrimasDto>>;\n    public updateUsingPUT66(dto: RequestTPrimasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT66.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTPrimasDto>(`${this.configuration.basePath}/nomina-general/primas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTProveedorXmlDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTProveedorXmlDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    ProveedoresXMLServiceInterface\n} from './proveedoresXML.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProveedoresXMLService implements ProveedoresXMLServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Proveedor Xml in the system.\n     * @param id Id Proveedor Xml\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE67(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE67(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE67(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE67(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE67.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/proveedoresXML/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Proveedor Xml in the system.\n     * @param id Id Proveedor Xml\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET67(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTProveedorXmlDto>;\n    public findByIdUsingGET67(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTProveedorXmlDto>>;\n    public findByIdUsingGET67(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTProveedorXmlDto>>;\n    public findByIdUsingGET67(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET67.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTProveedorXmlDto>(`${this.configuration.basePath}/nomina-general/proveedoresXML/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Proveedor Xml in the system.\n     * @param param param\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET17(param: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET17(param: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET17(param: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET17(param: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (param === null || param === undefined) {\n            throw new Error('Required parameter param was null or undefined when calling listFindAllUsingGET17.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/proveedoresXML/list/${encodeURIComponent(String())}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Proveedor Xml in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST67(dto: RequestTProveedorXmlDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTProveedorXmlDto>;\n    public saveUsingPOST67(dto: RequestTProveedorXmlDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTProveedorXmlDto>>;\n    public saveUsingPOST67(dto: RequestTProveedorXmlDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTProveedorXmlDto>>;\n    public saveUsingPOST67(dto: RequestTProveedorXmlDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST67.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTProveedorXmlDto>(`${this.configuration.basePath}/nomina-general/proveedoresXML`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Proveedor Xml in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT67(dto: RequestTProveedorXmlDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTProveedorXmlDto>;\n    public updateUsingPUT67(dto: RequestTProveedorXmlDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTProveedorXmlDto>>;\n    public updateUsingPUT67(dto: RequestTProveedorXmlDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTProveedorXmlDto>>;\n    public updateUsingPUT67(dto: RequestTProveedorXmlDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT67.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTProveedorXmlDto>(`${this.configuration.basePath}/nomina-general/proveedoresXML`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTSaludPensionSindicatoDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTListSaludPensionSindicatoDto } from '../model/models';\nimport { ResponseTSaludPensionSindicatoDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    SaludPensionSindicatosServiceInterface\n} from './saludPensionSindicatos.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaludPensionSindicatosService implements SaludPensionSindicatosServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Salud Pension Sindicato in the system.\n     * @param id Id Salud Pension Sindicato\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE68(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE68(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE68(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE68(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE68.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/saludPensionSindicatos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Salud Pension Sindicato in the system.\n     * @param id Id Salud Pension Sindicato\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET68(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTSaludPensionSindicatoDto>;\n    public findByIdUsingGET68(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTSaludPensionSindicatoDto>>;\n    public findByIdUsingGET68(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTSaludPensionSindicatoDto>>;\n    public findByIdUsingGET68(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET68.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTSaludPensionSindicatoDto>(`${this.configuration.basePath}/nomina-general/saludPensionSindicatos/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Salud Pension Sindicato in the system by DeduccionesId.\n     * @param deduccionesId DeduccionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDeduccionesUsingGET7(deduccionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListSaludPensionSindicatoDto>;\n    public listFindAllDeduccionesUsingGET7(deduccionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListSaludPensionSindicatoDto>>;\n    public listFindAllDeduccionesUsingGET7(deduccionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListSaludPensionSindicatoDto>>;\n    public listFindAllDeduccionesUsingGET7(deduccionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionesId === null || deduccionesId === undefined) {\n            throw new Error('Required parameter deduccionesId was null or undefined when calling listFindAllDeduccionesUsingGET7.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListSaludPensionSindicatoDto>(`${this.configuration.basePath}/nomina-general/saludPensionSindicatos/list${encodeURIComponent(String(deduccionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Salud Pension Sindicato in the system.\n     * @param deduccionesId DeduccionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET18(deduccionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listFindAllUsingGET18(deduccionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET18(deduccionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listFindAllUsingGET18(deduccionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionesId === null || deduccionesId === undefined) {\n            throw new Error('Required parameter deduccionesId was null or undefined when calling listFindAllUsingGET18.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/saludPensionSindicatos/list/${encodeURIComponent(String(deduccionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Salud Pension Sindicato in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST68(dto: RequestTSaludPensionSindicatoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTSaludPensionSindicatoDto>;\n    public saveUsingPOST68(dto: RequestTSaludPensionSindicatoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTSaludPensionSindicatoDto>>;\n    public saveUsingPOST68(dto: RequestTSaludPensionSindicatoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTSaludPensionSindicatoDto>>;\n    public saveUsingPOST68(dto: RequestTSaludPensionSindicatoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST68.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTSaludPensionSindicatoDto>(`${this.configuration.basePath}/nomina-general/saludPensionSindicatos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Salud Pension Sindicato in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT68(dto: RequestTSaludPensionSindicatoDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTSaludPensionSindicatoDto>;\n    public updateUsingPUT68(dto: RequestTSaludPensionSindicatoDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTSaludPensionSindicatoDto>>;\n    public updateUsingPUT68(dto: RequestTSaludPensionSindicatoDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTSaludPensionSindicatoDto>>;\n    public updateUsingPUT68(dto: RequestTSaludPensionSindicatoDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT68.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTSaludPensionSindicatoDto>(`${this.configuration.basePath}/nomina-general/saludPensionSindicatos`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTSancionDto } from '../model/models';\nimport { ResponseTListSancionDto } from '../model/models';\nimport { ResponseTSancionDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    SancionesServiceInterface\n} from './sanciones.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SancionesService implements SancionesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Sancion in the system.\n     * @param id Id Sancion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE69(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE69(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE69(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE69(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE69.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/sanciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Sancion in the system.\n     * @param id Id Sancion\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET69(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTSancionDto>;\n    public findByIdUsingGET69(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTSancionDto>>;\n    public findByIdUsingGET69(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTSancionDto>>;\n    public findByIdUsingGET69(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET69.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTSancionDto>(`${this.configuration.basePath}/nomina-general/sanciones/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Sancion in the system.\n     * @param deduccionesId DeduccionesId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllUsingGET19(deduccionesId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListSancionDto>;\n    public listFindAllUsingGET19(deduccionesId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListSancionDto>>;\n    public listFindAllUsingGET19(deduccionesId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListSancionDto>>;\n    public listFindAllUsingGET19(deduccionesId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deduccionesId === null || deduccionesId === undefined) {\n            throw new Error('Required parameter deduccionesId was null or undefined when calling listFindAllUsingGET19.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListSancionDto>(`${this.configuration.basePath}/nomina-general/sanciones/list/${encodeURIComponent(String(deduccionesId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Sancion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST69(dto: RequestTSancionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTSancionDto>;\n    public saveUsingPOST69(dto: RequestTSancionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTSancionDto>>;\n    public saveUsingPOST69(dto: RequestTSancionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTSancionDto>>;\n    public saveUsingPOST69(dto: RequestTSancionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST69.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTSancionDto>(`${this.configuration.basePath}/nomina-general/sanciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Sancion in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT69(dto: RequestTSancionDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTSancionDto>;\n    public updateUsingPUT69(dto: RequestTSancionDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTSancionDto>>;\n    public updateUsingPUT69(dto: RequestTSancionDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTSancionDto>>;\n    public updateUsingPUT69(dto: RequestTSancionDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT69.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTSancionDto>(`${this.configuration.basePath}/nomina-general/sanciones`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Request } from '../model/models';\nimport { Response } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    StoredProcedureServiceInterface\n} from './storedProcedure.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoredProcedureService implements StoredProcedureServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Returns result of stored procedure in the database.\n     * @param request request\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exectuteProcedureUsingPOST1(request: Request, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Response>;\n    public exectuteProcedureUsingPOST1(request: Request, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Response>>;\n    public exectuteProcedureUsingPOST1(request: Request, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Response>>;\n    public exectuteProcedureUsingPOST1(request: Request, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (request === null || request === undefined) {\n            throw new Error('Required parameter request was null or undefined when calling exectuteProcedureUsingPOST1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<Response>(`${this.configuration.basePath}/nomina-general/procedure`,\n            request,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTTrabajadorDto } from '../model/models';\nimport { ResponseTListHashMapstringobject } from '../model/models';\nimport { ResponseTTrabajadorDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    TrabajadoresServiceInterface\n} from './trabajadores.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrabajadoresService implements TrabajadoresServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Trabajador in the system.\n     * @param id Id Trabajador\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE70(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE70(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE70(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE70(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE70.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/trabajadores/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Trabajador in the system.\n     * @param id Id Trabajador\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET70(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTTrabajadorDto>;\n    public findByIdUsingGET70(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTTrabajadorDto>>;\n    public findByIdUsingGET70(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTTrabajadorDto>>;\n    public findByIdUsingGET70(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET70.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTTrabajadorDto>(`${this.configuration.basePath}/nomina-general/trabajadores/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Trabajador in the system.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listtrabajadorUsingGET1(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListHashMapstringobject>;\n    public listtrabajadorUsingGET1(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListHashMapstringobject>>;\n    public listtrabajadorUsingGET1(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListHashMapstringobject>>;\n    public listtrabajadorUsingGET1(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListHashMapstringobject>(`${this.configuration.basePath}/nomina-general/trabajadores/list`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Trabajador in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST70(dto: RequestTTrabajadorDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTTrabajadorDto>;\n    public saveUsingPOST70(dto: RequestTTrabajadorDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTTrabajadorDto>>;\n    public saveUsingPOST70(dto: RequestTTrabajadorDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTTrabajadorDto>>;\n    public saveUsingPOST70(dto: RequestTTrabajadorDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST70.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTTrabajadorDto>(`${this.configuration.basePath}/nomina-general/trabajadores`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Trabajador in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT70(dto: RequestTTrabajadorDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTTrabajadorDto>;\n    public updateUsingPUT70(dto: RequestTTrabajadorDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTTrabajadorDto>>;\n    public updateUsingPUT70(dto: RequestTTrabajadorDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTTrabajadorDto>>;\n    public updateUsingPUT70(dto: RequestTTrabajadorDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT70.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTTrabajadorDto>(`${this.configuration.basePath}/nomina-general/trabajadores`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTTransporteDto } from '../model/models';\nimport { ResponseTListTransporteDto } from '../model/models';\nimport { ResponseTTransporteDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    TransportesServiceInterface\n} from './transportes.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransportesService implements TransportesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Transporte in the system.\n     * @param id Id Transporte\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE71(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE71(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE71(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE71(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE71.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/transportes/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Transporte in the system.\n     * @param id Id Transporte\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET71(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTTransporteDto>;\n    public findByIdUsingGET71(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTTransporteDto>>;\n    public findByIdUsingGET71(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTTransporteDto>>;\n    public findByIdUsingGET71(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET71.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTTransporteDto>(`${this.configuration.basePath}/nomina-general/transportes/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Transporte in the system.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET25(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListTransporteDto>;\n    public listFindAllDevengadosUsingGET25(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListTransporteDto>>;\n    public listFindAllDevengadosUsingGET25(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListTransporteDto>>;\n    public listFindAllDevengadosUsingGET25(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET25.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListTransporteDto>(`${this.configuration.basePath}/nomina-general/transportes/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Transporte in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST71(dto: RequestTTransporteDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTTransporteDto>;\n    public saveUsingPOST71(dto: RequestTTransporteDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTTransporteDto>>;\n    public saveUsingPOST71(dto: RequestTTransporteDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTTransporteDto>>;\n    public saveUsingPOST71(dto: RequestTTransporteDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST71.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTTransporteDto>(`${this.configuration.basePath}/nomina-general/transportes`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Transporte in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT71(dto: RequestTTransporteDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTTransporteDto>;\n    public updateUsingPUT71(dto: RequestTTransporteDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTTransporteDto>>;\n    public updateUsingPUT71(dto: RequestTTransporteDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTTransporteDto>>;\n    public updateUsingPUT71(dto: RequestTTransporteDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT71.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTTransporteDto>(`${this.configuration.basePath}/nomina-general/transportes`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTVacacionesCompensadasDto } from '../model/models';\nimport { ResponseTListVacacionesCompensadasDto } from '../model/models';\nimport { ResponseTVacacionesCompensadasDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    VacacionesCompensadasServiceInterface\n} from './vacacionesCompensadas.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VacacionesCompensadasService implements VacacionesCompensadasServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Vacaciones Compensada in the system.\n     * @param id Id Vacaciones Compensada\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE72(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE72(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE72(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE72(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE72.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/vacacionesCompensadas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Vacaciones Compensada in the system.\n     * @param id Id Vacaciones Compensada\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET72(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTVacacionesCompensadasDto>;\n    public findByIdUsingGET72(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTVacacionesCompensadasDto>>;\n    public findByIdUsingGET72(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTVacacionesCompensadasDto>>;\n    public findByIdUsingGET72(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET72.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTVacacionesCompensadasDto>(`${this.configuration.basePath}/nomina-general/vacacionesCompensadas/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Vacaciones Compensada in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET26(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListVacacionesCompensadasDto>;\n    public listFindAllDevengadosUsingGET26(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListVacacionesCompensadasDto>>;\n    public listFindAllDevengadosUsingGET26(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListVacacionesCompensadasDto>>;\n    public listFindAllDevengadosUsingGET26(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET26.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListVacacionesCompensadasDto>(`${this.configuration.basePath}/nomina-general/vacacionesCompensadas/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Vacaciones Compensada in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST72(dto: RequestTVacacionesCompensadasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTVacacionesCompensadasDto>;\n    public saveUsingPOST72(dto: RequestTVacacionesCompensadasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTVacacionesCompensadasDto>>;\n    public saveUsingPOST72(dto: RequestTVacacionesCompensadasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTVacacionesCompensadasDto>>;\n    public saveUsingPOST72(dto: RequestTVacacionesCompensadasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST72.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTVacacionesCompensadasDto>(`${this.configuration.basePath}/nomina-general/vacacionesCompensadas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Vacaciones Compensada in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT72(dto: RequestTVacacionesCompensadasDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTVacacionesCompensadasDto>;\n    public updateUsingPUT72(dto: RequestTVacacionesCompensadasDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTVacacionesCompensadasDto>>;\n    public updateUsingPUT72(dto: RequestTVacacionesCompensadasDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTVacacionesCompensadasDto>>;\n    public updateUsingPUT72(dto: RequestTVacacionesCompensadasDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT72.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTVacacionesCompensadasDto>(`${this.configuration.basePath}/nomina-general/vacacionesCompensadas`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * FPI E-Invoice API\n * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.\n *\n * The version of the OpenAPI document: 1.0\n * Contact: soporte@fpicolombia.co\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestTVacacionesComunesDto } from '../model/models';\nimport { ResponseTListVacacionesComunesDto } from '../model/models';\nimport { ResponseTVacacionesComunesDto } from '../model/models';\nimport { ResponseTstring } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport {\n    VacacionesComunesServiceInterface\n} from './vacacionesComunes.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VacacionesComunesService implements VacacionesComunesServiceInterface {\n\n    protected basePath = 'http://localhost:8092';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * delete Vacaciones Comun in the system.\n     * @param id Id Vacaciones Comun\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUsingDELETE73(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTstring>;\n    public deleteUsingDELETE73(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTstring>>;\n    public deleteUsingDELETE73(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTstring>>;\n    public deleteUsingDELETE73(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteUsingDELETE73.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.delete<ResponseTstring>(`${this.configuration.basePath}/nomina-general/vacacionesComunes/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * find by id Vacaciones Comun in the system.\n     * @param id Id Vacaciones Comun\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findByIdUsingGET73(id: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTVacacionesComunesDto>;\n    public findByIdUsingGET73(id: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTVacacionesComunesDto>>;\n    public findByIdUsingGET73(id: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTVacacionesComunesDto>>;\n    public findByIdUsingGET73(id: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling findByIdUsingGET73.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTVacacionesComunesDto>(`${this.configuration.basePath}/nomina-general/vacacionesComunes/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all Vacaciones Comun in the system by DevengadosId.\n     * @param devengadosId DevengadosId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listFindAllDevengadosUsingGET27(devengadosId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTListVacacionesComunesDto>;\n    public listFindAllDevengadosUsingGET27(devengadosId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTListVacacionesComunesDto>>;\n    public listFindAllDevengadosUsingGET27(devengadosId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTListVacacionesComunesDto>>;\n    public listFindAllDevengadosUsingGET27(devengadosId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (devengadosId === null || devengadosId === undefined) {\n            throw new Error('Required parameter devengadosId was null or undefined when calling listFindAllDevengadosUsingGET27.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.get<ResponseTListVacacionesComunesDto>(`${this.configuration.basePath}/nomina-general/vacacionesComunes/list/${encodeURIComponent(String(devengadosId))}`,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * save a Vacaciones Comun in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public saveUsingPOST73(dto: RequestTVacacionesComunesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTVacacionesComunesDto>;\n    public saveUsingPOST73(dto: RequestTVacacionesComunesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTVacacionesComunesDto>>;\n    public saveUsingPOST73(dto: RequestTVacacionesComunesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTVacacionesComunesDto>>;\n    public saveUsingPOST73(dto: RequestTVacacionesComunesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling saveUsingPOST73.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.post<ResponseTVacacionesComunesDto>(`${this.configuration.basePath}/nomina-general/vacacionesComunes`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update Vacaciones Comun in the system.\n     * @param dto dto\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUsingPUT73(dto: RequestTVacacionesComunesDto, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseTVacacionesComunesDto>;\n    public updateUsingPUT73(dto: RequestTVacacionesComunesDto, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseTVacacionesComunesDto>>;\n    public updateUsingPUT73(dto: RequestTVacacionesComunesDto, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseTVacacionesComunesDto>>;\n    public updateUsingPUT73(dto: RequestTVacacionesComunesDto, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dto === null || dto === undefined) {\n            throw new Error('Required parameter dto was null or undefined when calling updateUsingPUT73.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (apiKey) required\n        credential = this.configuration.lookupCredential('apiKey');\n        if (credential) {\n            headers = headers.set('Authorization', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType_ = 'text';\n        }\n\n        return this.httpClient.put<ResponseTVacacionesComunesDto>(`${this.configuration.basePath}/nomina-general/vacacionesComunes`,\n            dto,\n            {\n                responseType: <any>responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SelectivePreloadingStrategyService implements PreloadingStrategy {\r\n  preloadedModules: string[] = [];\r\n\r\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\r\n    if (route.data && route.data.preload) {\r\n      // add the route path to the preloaded module array\r\n      this.preloadedModules.push(route.path!);\r\n\r\n      // log the route path to the console\r\n      console.log('Preloaded: ' + route.path);\r\n\r\n      return load();\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StyleManagerService {\r\n  constructor() {}\r\n\r\n  setStyle(key: string, href: string) {\r\n    getLinkElementForKey(key).setAttribute('href', href);\r\n  }\r\n\r\n  removeStyle(key: string) {\r\n    const existingLinkElement = getExistingLinkElementByKey(key);\r\n    if (existingLinkElement) {\r\n      document.head.removeChild(existingLinkElement);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getLinkElementForKey(key: string) {\r\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\r\n}\r\n\r\nfunction getExistingLinkElementByKey(key: string) {\r\n  return document.head.querySelector(\r\n    `link[rel=\"stylesheet\"].${getClassNameForKey(key)}`\r\n  );\r\n}\r\n\r\nfunction createLinkElementWithKey(key: string) {\r\n  const linkEl = document.createElement('link');\r\n  linkEl.setAttribute('rel', 'stylesheet');\r\n  linkEl.classList.add(getClassNameForKey(key));\r\n  document.head.appendChild(linkEl);\r\n  return linkEl;\r\n}\r\n\r\nfunction getClassNameForKey(key: string) {\r\n  return `app-${key}`;\r\n}\r\n","import { formatDate, formatNumber } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { fromEvent } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { ConfirmDialogComponent } from '../shared/dialog/confirm/confirm-dialog.component';\r\nimport { ValuesCatalog } from '../srv/in-mem-data-service';\r\nimport { TrabajadorDto } from '../srv/payroll/model/trabajadorDto';\r\n\r\nexport enum NgGtdThemes {\r\n  FpiSkin = 'fpi-skin-black',\r\n  FpiSkinBlack = 'fpi-skin-alt',\r\n  NeGtd = 'default-theme',\r\n  NeGtdBlack = 'default-theme-black',\r\n  UnicornLightTheme = 'unicorn-theme',\r\n  UnicornDarkTheme = 'unicorn-dark-theme',\r\n  AltTheme = 'theme-alternate',\r\n  AltThemeBlack = 'theme-alternate-black',\r\n  GtdBlueGrey = 'gtd-blue',\r\n  GtdBlueBlack = 'gtd-blue-black',\r\n  // init angular css themes\r\n  DeeppurpleAmber = 'deeppurple-amber',\r\n  IndigoPink = 'indigo-pink',\r\n  PinkBluegrey = 'pink-bluegrey',\r\n  PurpleGreen = 'purple-green',\r\n  // end angular css themes\r\n}\r\n\r\nexport interface EnumObject {\r\n  [enumValue: number]: string;\r\n}\r\n\r\nexport interface EnumString {\r\n  [enumValue: string]: ValuesCatalog;\r\n}\r\nexport interface EnumCatalogs {\r\n  [enumValue: string]: ValuesCatalog[];\r\n}\r\n\r\nexport function getEnumValues(e: EnumObject): string[] {\r\n  return Object.keys(e).map((i: any) => e[i]);\r\n}\r\n\r\nexport function getEnumKeyByEnumValue<T extends { [index: string]: string }>(\r\n  myEnum: T,\r\n  enumValue: string,\r\n  predertermined: string = myEnum[0]\r\n): keyof T {\r\n  let keys = Object.keys(myEnum).filter((x) => myEnum[x] == enumValue);\r\n  return keys.length > 0 ? keys[0] : predertermined;\r\n}\r\n\r\nexport function getEnumValueByEnumKey<T extends { [index: string]: string }>(\r\n  myEnum: T,\r\n  enumKey: string,\r\n  predertermined: string = myEnum[0]\r\n): keyof T {\r\n  let keys = Object.keys(myEnum).filter((x) => myEnum.name == enumKey);\r\n  return keys.length > 0 ? myEnum[keys[0]] : predertermined;\r\n}\r\n\r\nexport interface ValueOption {\r\n  backgroundColor: string;\r\n  buttonColor: string;\r\n  headingColor: string;\r\n  label: string;\r\n  value: string;\r\n  catalog: NgGtdThemes;\r\n  alternate: NgGtdThemes;\r\n}\r\n\r\nexport interface NgGtdDS {\r\n  datasource: MatTableDataSource<any>;\r\n  displayedColumns: string[];\r\n  loading?: number;\r\n}\r\n\r\nexport interface TableItem {\r\n  loading?: boolean;\r\n}\r\nexport const initTable = (\r\n  dataSource$: any,\r\n  paginator: MatPaginator,\r\n  sort: any,\r\n  newarray: any,\r\n  displayedColumns: any\r\n) => {\r\n  let datasource = new MatTableDataSource<any>(newarray);\r\n  if (paginator) {\r\n    paginator._intl.itemsPerPageLabel = 'Ver';\r\n    paginator._intl.previousPageLabel = 'Anterior';\r\n    paginator._intl.firstPageLabel = 'Primero';\r\n    paginator._intl.lastPageLabel = 'Último';\r\n    paginator._intl.nextPageLabel = 'Siguiente';\r\n    paginator._intl.getRangeLabel = (\r\n      page: number,\r\n      pageSize: number,\r\n      length: number\r\n    ) => `Página ${page + 1}`;\r\n  }\r\n  datasource.paginator = paginator;\r\n  datasource.sort = sort;\r\n  dataSource$.next({\r\n    datasource: datasource,\r\n    displayedColumns: displayedColumns,\r\n    loading: 100,\r\n  });\r\n};\r\nexport const gtdArrayToLowerCase = (bodyDto: any[]) =>\r\n  bodyDto?.map?.((element: any) => {\r\n    var key,\r\n      keys = Object.keys(element);\r\n    var n = keys.length;\r\n    var newobj: any = {};\r\n    while (n--) {\r\n      key = keys[n];\r\n      if (!element[key]) continue;\r\n      if (key.toLowerCase().split('fecha').length > 1) {\r\n        element[key] = gtdDateTime(element[key]);\r\n      } /* else if (typeof element[key] === 'number') {\r\n        element[key] = numberWithCommas(element[key]);\r\n      } */\r\n\r\n      newobj[`${key.charAt(0).toLowerCase()}${key.substr(1, key.length)}`] =\r\n        element[key];\r\n    }\r\n    try {\r\n      newobj[`valueCatalogName`] = JSON.parse(newobj[`valueCatalogName`]);\r\n    } catch (e) {}\r\n    return newobj;\r\n  });\r\n\r\nexport const confirm = (\r\n  dialog: MatDialog,\r\n  pregunta: string,\r\n  titulo?: string\r\n) => {\r\n  const dialogRef = dialog.open(ConfirmDialogComponent, {\r\n    width: '350px',\r\n    data: {\r\n      titulo: titulo,\r\n      pregunta: pregunta,\r\n    },\r\n  });\r\n  return dialogRef.afterClosed().pipe(take(1));\r\n};\r\n\r\nexport const OpenDialog = (dialog: MatDialog, cmp: any, data: any) =>\r\n  dialog\r\n    .open(cmp, {\r\n      hasBackdrop: true,\r\n      backdropClass: 'gtd-overlay-backdrop',\r\n      closeOnNavigation: true,\r\n      disableClose: true,\r\n      width: '500px',\r\n\r\n      data: data,\r\n    })\r\n    .afterClosed();\r\n\r\nexport const requestProcedure = (\r\n  nominaIndividualId: string,\r\n  trabajadorId: string\r\n) => {\r\n  return {\r\n    body: {\r\n      params: {\r\n        nominaIndividualId: nominaIndividualId as Object,\r\n        trabajadorId: trabajadorId as Object,\r\n      },\r\n    },\r\n    header: {\r\n      cliente: 'FF841F95-5FDC-4879-A6BD-EE8C93A82943',\r\n      esquema: 'payroll',\r\n      procedimientoAlmacenado: 'ConsultarDevengadosTest',\r\n    },\r\n  };\r\n};\r\n\r\nexport const gtdIsNull = (data: any) =>\r\n  data === undefined ||\r\n  data === null ||\r\n  data === 'null' ||\r\n  data === 'undefined';\r\n\r\nexport const gtdNombreCompleto = (trabajador: TrabajadorDto) =>\r\n  `${trabajador?.primerNombre ?? ''} ${trabajador?.otrosNombres ?? ''} ${\r\n    trabajador?.primerApellido ?? ''\r\n  } ${trabajador?.segundoApellido ?? ''}`;\r\n\r\nexport const gtdSueldoTrabajador = (sueldo: string) =>\r\n  formatNumber(Number(sueldo), 'es-CO', '1.2-2');\r\n\r\nexport const gtdBeforeUnload = () => fromEvent(window, 'beforeunload');\r\nexport const gtdDate = (value: number | string | Date = new Date()) =>\r\n  formatDate(value, 'yyyy-MM-dd', 'es-Co');\r\nexport const gtdDateTimeInput = (value: number | string | Date = new Date()) =>\r\n  formatDate(value, 'yyyy-MM-ddThh:mm', 'es-Co');\r\nexport const gtdApiDateTime = (value: number | string | Date = new Date()) =>\r\n  formatDate(value, 'yyyy-MM-ddThh:mmZZZZZ', 'es-Co');\r\nexport const gtdDateTime = (value: number | string | Date = new Date()) =>\r\n  formatDate(value, 'yyyy-MM-ddThh:mmZZZZZ', 'es-Co');\r\nexport const numberWithCommas = (value: string) =>\r\n  formatNumber(\r\n    typeof value === 'number' ? value : +value?.replace(/\\./g, '') ?? 0,\r\n    'es-Co',\r\n    '1.0-2'\r\n  );\r\nexport const stringWithCommas = (value: string) =>\r\n  (+value).toLocaleString('es-CO');\r\nexport const safeText = (value: string) => value?.replace(/[^\\w\\s]/gi, '');\r\nexport const gtdScrollEvent = () => fromEvent(window, 'scroll');\r\nexport const parseLocaleNumber = (stringNumber: string, locale: string) => {\r\n  var thousandSeparator = Intl.NumberFormat(locale)\r\n    .format(11111)\r\n    .replace(/\\p{Number}/gu, '');\r\n  var decimalSeparator = Intl.NumberFormat(locale)\r\n    .format(1.1)\r\n    .replace(/\\p{Number}/gu, '');\r\n\r\n  return parseFloat(\r\n    stringNumber\r\n      .replace(new RegExp('\\\\' + thousandSeparator, 'g'), '')\r\n      .replace(new RegExp('\\\\' + decimalSeparator), '.')\r\n  );\r\n};\r\nexport const gtdExtractDataProcedure = (body: any) =>\r\n  body.map((b: any) => {\r\n    let valores: ValuesCatalog[] = [];\r\n    var key = Object.keys(b)?.[0];\r\n    const data = JSON.parse(b[key])?.[0];\r\n    console.log(data);\r\n    var keys = Object.keys(data);\r\n    var n = keys.length;\r\n    var newobj: any = {};\r\n    while (n--) {\r\n      var gtdMember = keys[n];\r\n      var valor = data[gtdMember];\r\n      if (Array.isArray(valor)) {\r\n        valor.forEach((v, i) => {\r\n          var keys1 = Object.keys(v);\r\n          valores.push(\r\n            ...keys1.map((k, y) => {\r\n              return {\r\n                id: keys.length - n + i + y,\r\n                value: typeof v[k] === 'number' ? numberWithCommas(v[k]) : v[k],\r\n                code: `${k}${gtdMember}`,\r\n                name: `${gtdMember}: ${k}`,\r\n                catalog: typeof v[k],\r\n              };\r\n            })\r\n          );\r\n        });\r\n      } else if (typeof valor === 'object') {\r\n        var keys1 = Object.keys(valor?.[0]);\r\n        var y = keys1.length;\r\n        while (y--) {\r\n          if (keys1[y].toLocaleLowerCase().split('id').length > 1) continue;\r\n          valores.push({\r\n            id: y + 1,\r\n            value: valor?.[0]?.[keys1[y]],\r\n            code: `${key}${gtdMember}${keys1[y].charAt(0).toLowerCase()}${keys1[\r\n              y\r\n            ].substr(1, keys1[y].length)}`,\r\n            name: `${gtdMember}: ${keys1[y].charAt(0).toLowerCase()}${keys1[\r\n              y\r\n            ].substr(1, keys1[y].length)}`,\r\n            catalog: typeof valor?.[0]?.[keys1[y]],\r\n          });\r\n        }\r\n      } else {\r\n        if (gtdMember.toLocaleLowerCase().split('id').length > 1) continue;\r\n        if (gtdMember.toLowerCase().split('fecha').length > 1) {\r\n          valor = new Date(valor);\r\n        }\r\n        newobj[\r\n          `${gtdMember.charAt(0).toLowerCase()}${gtdMember.substr(\r\n            1,\r\n            gtdMember.length\r\n          )}`\r\n        ] = valor;\r\n        valores.push({\r\n          id: n + 1,\r\n          value: valor,\r\n          code: `${key}${gtdMember.charAt(0).toLowerCase()}${gtdMember.substr(\r\n            1,\r\n            gtdMember.length\r\n          )}`,\r\n          name: `${gtdMember.charAt(0).toLowerCase()}${gtdMember.substr(\r\n            1,\r\n            gtdMember.length\r\n          )}`,\r\n          catalog: typeof valor,\r\n        });\r\n      }\r\n    }\r\n    return valores;\r\n  })?.[0];\r\n\r\nexport const valoresCatalogos = (params: any) => {\r\n  return {\r\n    body: {\r\n      params: params,\r\n    },\r\n    header: {\r\n      cliente: 'FF841F95-5FDC-4879-A6BD-EE8C93A82943',\r\n      esquema: 'payroll',\r\n      procedimientoAlmacenado: 'ConsultarValoresCatalogosPorCodigoCatalogo',\r\n    },\r\n  };\r\n};\r\n\r\nexport const txtEliminar = (texto: string, objeto: string) => {\r\n  return `${texto.replace('P_1', objeto)}`;\r\n};\r\n\r\nexport const gtdEmptyEntity = (bodyDto: any) => {\r\n  return Object.keys(bodyDto)\r\n    .map((i: any) =>\r\n      i.toLowerCase().split('id').length > 1 ? undefined : !bodyDto[i]\r\n    )\r\n    .reduce((x, y) => x && y);\r\n};\r\n","import { ValuesCatalog } from './srv/in-mem-data-service';\r\nimport { NgGtdThemes, ValueOption } from './types/common-types';\r\n\r\nexport function formatToDate(date: string): Date {\r\n  return new Date(date);\r\n}\r\n\r\nexport const VALUES_CATALOG: ValuesCatalog[] = [\r\n  {\r\n    id: 11,\r\n    name: 'DR',\r\n    code: '11DR',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Narco',\r\n    code: '12NA',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'Bombasto',\r\n    code: '13BO',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Celeritas',\r\n    code: '14CE',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 15,\r\n    name: 'Magneta',\r\n    code: '15MA',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 16,\r\n    name: 'RubberMan',\r\n    code: '16RU',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 17,\r\n    name: 'Dynama',\r\n    code: '17DY',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 18,\r\n    name: 'Qr',\r\n    code: '18DR',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 19,\r\n    name: 'Magma',\r\n    code: '19MA',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 20,\r\n    name: 'Tornado',\r\n    code: '20TO',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n];\r\n\r\nexport const VALUES_BUSINESS: ValuesCatalog[] = [\r\n  {\r\n    id: 11,\r\n    name: 'cliente pruebas',\r\n    code: '11DR',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'nestle de colombia s.a.',\r\n    code: '12NA',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'asdf sdfasdf',\r\n    code: '13BO',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Americas',\r\n    code: '14CE',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 15,\r\n    name: 'Colanta',\r\n    code: '15MA',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 16,\r\n    name: 'Justo & Bueno',\r\n    code: '16RU',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 17,\r\n    name: 'Duitama',\r\n    code: '17DY',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 18,\r\n    name: 'Barcelona',\r\n    code: '18DR',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 19,\r\n    name: 'Malaga',\r\n    code: '19MA',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n  {\r\n    id: 20,\r\n    name: 'Tiendas boyacenses',\r\n    code: '20TO',\r\n    catalog: 'VC',\r\n    fecha: formatToDate('5/17/2021'),\r\n  },\r\n];\r\n\r\nexport const THEMES_OPTIONS: ValueOption[] = [\r\n  {\r\n    backgroundColor: '#F1F1F1',\r\n    buttonColor: '#f75c59',\r\n    headingColor: '#181818',\r\n    label: 'FPI Skin',\r\n    value: 'FPI Skin',\r\n    catalog: NgGtdThemes.FpiSkin,\r\n    alternate: NgGtdThemes.FpiSkinBlack,\r\n  },\r\n  {\r\n    backgroundColor: '#fff',\r\n    buttonColor: '#ff4081',\r\n    headingColor: '#3f51b5',\r\n    label: 'Unicorn',\r\n    value: 'Unicorn',\r\n    catalog: NgGtdThemes.UnicornLightTheme,\r\n    alternate: NgGtdThemes.UnicornDarkTheme,\r\n  },\r\n  {\r\n    backgroundColor: '#fafafa',\r\n    buttonColor: '#797979',\r\n    headingColor: '#cc33ca',\r\n    label: 'Alt theme',\r\n    value: 'Alt theme',\r\n    catalog: NgGtdThemes.AltTheme,\r\n    alternate: NgGtdThemes.AltThemeBlack,\r\n  },\r\n  {\r\n    backgroundColor: '#303030',\r\n    buttonColor: '#d7d7d7',\r\n    headingColor: '#cc33ca',\r\n    label: 'NE Skin',\r\n    value: 'NE Skin',\r\n    catalog: NgGtdThemes.NeGtd,\r\n    alternate: NgGtdThemes.NeGtdBlack,\r\n  },\r\n  {\r\n    backgroundColor: '#c1ccd7',\r\n    buttonColor: '#cc33ca',\r\n    headingColor: '#097df2',\r\n    label: 'GTD Azul',\r\n    value: 'GTD Azul',\r\n    catalog: NgGtdThemes.GtdBlueGrey,\r\n    alternate: NgGtdThemes.GtdBlueBlack,\r\n  },\r\n  // init angular css themes\r\n  {\r\n    backgroundColor: '#fff',\r\n    buttonColor: '#607d8b',\r\n    headingColor: '#7b1fa2',\r\n    label: 'Deep purple Amber',\r\n    value: 'Deep purple Amber',\r\n    catalog: NgGtdThemes.DeeppurpleAmber,\r\n    alternate: NgGtdThemes.PurpleGreen,\r\n  },\r\n  {\r\n    backgroundColor: '#fff',\r\n    buttonColor: '#607d8b',\r\n    headingColor: '#3f51b5',\r\n    label: 'Indigo Pink',\r\n    value: 'Indigo Pink',\r\n    catalog: NgGtdThemes.IndigoPink,\r\n    alternate: NgGtdThemes.IndigoPink,\r\n  },\r\n  {\r\n    backgroundColor: '#303030',\r\n    buttonColor: '#607d8b',\r\n    headingColor: '#e91e63',\r\n    label: 'PinkBlue grey',\r\n    value: 'PinkBlue grey',\r\n    catalog: NgGtdThemes.PinkBluegrey,\r\n    alternate: NgGtdThemes.PinkBluegrey,\r\n  },\r\n  {\r\n    backgroundColor: '#303030',\r\n    buttonColor: '#607d8b',\r\n    headingColor: '#7b1fa2',\r\n    label: 'Purple green',\r\n    value: 'Purple green',\r\n    catalog: NgGtdThemes.PurpleGreen,\r\n    alternate: NgGtdThemes.DeeppurpleAmber,\r\n  },\r\n];\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\nexport const UIOk = { tipo: '🎯', accion: 'Cerrar' };\r\nexport const UIEliminado = { tipo: '🎯', accion: '¡Eliminado!' };\r\nexport const UINoEliminado = { tipo: '🎯', accion: '¡No Eliminado!' };\r\nexport const UICreado = { tipo: '🎯', accion: '¡Creado!' };\r\nexport const UINoCreado = { tipo: '🎯', accion: '¡No Creado!' };\r\nexport const UIEditado = { tipo: '🎯', accion: 'Editado!' };\r\nexport const UINoEditado = { tipo: '🎯', accion: '¡No Editado!' };\r\n\r\nexport interface UIMessage {\r\n  tipo: string;\r\n  accion: string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // API_GATEWAY: 'https://devapi.fpicolombia.com'\r\n  API_GATEWAY: 'http://localhost:8092'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 7280;\nmodule.exports = webpackEmptyAsyncContext;"],"sourceRoot":"webpack:///"}