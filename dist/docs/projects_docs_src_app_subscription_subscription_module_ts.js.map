{"version":3,"sources":["./projects/docs/src/app/subscription/subscription-form.component.ts","./projects/docs/src/app/subscription/subscription.component.ts","./projects/docs/src/app/subscription/subscription.component.html","./projects/docs/src/app/subscription/subscription.module.ts","./projects/docs/src/app/subscription/subscription.routing.module.ts"],"names":[],"mappings":"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","file":"projects_docs_src_app_subscription_subscription_module_ts.js","sourcesContent":["import { Component, Inject } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { InMemService } from \"../srv/in-mem-service\";\r\n\r\n@Component({\r\n  selector: \"app-filter-value-dialog\",\r\n  template: `\r\n    <form [formGroup]=\"form\" class=\"pt-3 pb-3 m-0 d-flex main-container main-form\" style=\"overflow:visible\">\r\n      <div class=\"m-0 mat-card\">\r\n        <div class=\"mat-card-header card-header-primary\">\r\n        <h1 class=\"card-title\">{{ f.id.value ? 'Editar Subscripci贸n {{f.id.value}}' : 'Agregar Subscripci贸n' }}</h1>\r\n        <p class=\"card-category\">Informaci贸n de Subscripci贸n</p>\r\n        <p>What's your info?</p>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"type-tooltip-ne\"  *ngIf=\"inMemSrv.empresas | async as businesses\">\r\n          <span>Show business</span>\r\n          <mat-form-field>\r\n\t\t\t\t    <mat-select class=\"example-select\"\r\n            #business\r\n              tabindex=\"1\"\r\n              formControlName=\"business\"\r\n              id=\"business\">\r\n                <mat-option *ngFor=\"let bus of businesses\" [value]=\"bus\">\r\n                  {{bus.name}}\r\n                </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <mat-form-field>\r\n          <input\r\n            matInput\r\n            tabindex=\"1\"\r\n            formControlName=\"name\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n          />\r\n          <div\r\n            *ngIf=\"f.name.touched && f.name.invalid\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"f.name.errors?.required\">nombre es obligatorio.</div>\r\n          </div>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input\r\n            matInput\r\n            tabindex=\"1\"\r\n            formControlName=\"code\"\r\n            id=\"code\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n          />\r\n          <div\r\n            *ngIf=\"f.code.touched && f.code.invalid\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"f.code.errors?.required\">codigo es obligatorio.</div>\r\n          </div>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input\r\n            matInput\r\n            tabindex=\"1\"\r\n            formControlName=\"catalog\"\r\n            id=\"catalog\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n          />\r\n          <div\r\n            *ngIf=\"f.catalog.touched && f.catalog.invalid\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"f.catalog.errors?.required\">catalogo es obligatorio.</div>\r\n          </div>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n          <mat-label>Date</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" />\r\n          <mat-datepicker-toggle\r\n            matSuffix\r\n            [for]=\"picker\"\r\n          ></mat-datepicker-toggle>\r\n          <mat-datepicker touchUi #picker></mat-datepicker>\r\n        </mat-form-field>\r\n        <input\r\n          matInput\r\n          tabindex=\"1\"\r\n          formControlName=\"id\"\r\n          id=\"id\"\r\n          type=\"text\"\r\n          hidden\r\n          class=\"form-control\"\r\n        />\r\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">\r\n            Cerrar\r\n          </button>\r\n          <button mat-button (click)=\"save()\" tabindex=\"3\">Aceptar</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  `,\r\n})\r\nexport class SubscriptionFormComponent {\r\n  position = 'below';\r\n  form = new FormGroup({\r\n    id: new FormControl(undefined),\r\n    name: new FormControl(\"\", [Validators.required, Validators.minLength(3)]),\r\n    email: new FormControl(\"\", [Validators.required, Validators.nullValidator]),\r\n    code: new FormControl(\"\", [Validators.required, Validators.nullValidator]),\r\n    catalog: new FormControl(\"\", [Validators.required, Validators.nullValidator]),\r\n    business: this.builder.control({}),\r\n    fecha: new FormControl(new Date(), [\r\n      Validators.required,\r\n      Validators.nullValidator,\r\n    ]),\r\n  });\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SubscriptionFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public inMemSrv: InMemService,\r\n    public builder: FormBuilder\r\n  ) {\r\n    this.form.patchValue(data);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  save() {\r\n    this.dialogRef.close(this.form.value);\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { AuthError } from 'msal';\r\nimport { ValuesCatalog } from '../srv/in-mem-data-service';\r\nimport { InMemService } from '../srv/in-mem-service';\r\nimport { VALUES_CATALOG } from '../values-catalog';\r\nimport { SubscriptionFormComponent } from './subscription-form.component';\r\nconst GRAPH_ENDPOINT = 'https://graph.microsoft.com/v1.0/me';\r\n\r\n@Component({\r\n  selector: 'app-subscription',\r\n  templateUrl: 'subscription.component.html',\r\n  styleUrls: ['subscription.component.css'],\r\n})\r\nexport class SubscriptionComponent implements OnInit, AfterViewInit {\r\n  profile: any;\r\n\r\n  displayedColumns: string[] = ['id', 'name', 'code', 'fecha', 'action'];\r\n  dataSource: MatTableDataSource<ValuesCatalog>;\r\n\r\n  @ViewChild(MatPaginator, { static: true })\r\n  paginator!: MatPaginator;\r\n\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  constructor(\r\n    private authService: MsalService,\r\n    private http: HttpClient,\r\n    private memSrv: InMemService,\r\n    public dialog: MatDialog,\r\n    private _snackBar: MatSnackBar\r\n  ) {\r\n    this.dataSource = new MatTableDataSource<ValuesCatalog>(VALUES_CATALOG);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile() {\r\n    this.http.get(GRAPH_ENDPOINT).subscribe({\r\n      next: (profile) => {\r\n        this.profile = profile;\r\n      },\r\n      error: (err: AuthError) => {},\r\n    });\r\n  }\r\n\r\n  add(name: ValuesCatalog): void {\r\n    if (!name) {\r\n      return;\r\n    }let i = 0;\r\n    this.dataSource.data = [\r\n      ...this.dataSource.data,\r\n      { ...name, id: i++ },\r\n    ];\r\n  }\r\n\r\n  delete(hero: string): void {\r\n    this.dataSource.data = this.dataSource.data.filter((h) => h.name !== hero);\r\n    this._snackBar.open(`${hero}`, 'deleted!', { duration: 5000 });\r\n  }\r\n\r\n  edit(hero: ValuesCatalog): void {\r\n    const editedData = this.dataSource.data.map((h) =>\r\n      h.id !== hero.id ? h : hero\r\n    );\r\n    this.dataSource.data = editedData;\r\n  }\r\n\r\n  openDialog(id?: number): void {\r\n    const editing = this.dataSource.data.filter((v) => v.id == id)?.[0];\r\n    console.log(editing);\r\n    const dialogRef = this.dialog.open(SubscriptionFormComponent, {\r\n      width: '480px',\r\n      data: editing ? editing : { id: undefined, name: '' },\r\n      backdropClass: 'blur-overlay',\r\n      panelClass: 'ne-dialog-panel',\r\n      closeOnNavigation: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(result);\r\n      if (result?.id) this.edit(result);\r\n      else this.add(result);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header class=\"card-header card-header-primary card-header-icon\">\r\n    <mat-card-title>\r\n      <div class=\"card-icon\">\r\n        <em class=\"material-icons\">{{'1F4B3'|gtdEmoji}}</em>\r\n      </div>\r\n      <h1 class=\"card-title\">\r\n        <strong>Suscripciones</strong>\r\n      </h1>\r\n      <p class=\"card-category\">Total creados <a>{{dataSource.data.length}}</a></p>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <mat-card-subtitle><code>subscriptions</code> </mat-card-subtitle>\r\n    <h4>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Buscar</mat-label>\r\n        <input type=\"tel\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ej. Mia\" #input>\r\n        <mat-icon (click)=\"openDialog()\" matSuffix mat-fab color=\"primary\">add</mat-icon>\r\n      </mat-form-field>\r\n    </h4>\r\n\r\n    <div class=\"mat-elevation-z8\">\r\n      <table mat-table class=\"table-responsive-sm\" [dataSource]=\"dataSource\" matSort >\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Negocio</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.business?.name }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Nombre</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"code\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>C贸digo</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.code }}</td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"fecha\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Fecha</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.fecha | date:'short'}}</td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef>action</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button color=\"primary\" (click)=\"openDialog(element.id)\">\r\n              <span>{{'270F'|gtdEmoji}}</span>\r\n            </button>\r\n\r\n            <button mat-icon-button class=\"gtd-icon-button\" (click)=\"delete(element)\">\r\n              <span>{{'1F5D1'|gtdEmoji}}</span>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20, 200, 2000]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { CdkTableModule } from '@angular/cdk/table';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { DemoMaterialModule } from '../demo-material-module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SubscriptionFormComponent } from './subscription-form.component';\r\nimport { SubscriptionComponent } from './subscription.component';\r\nimport { SubscriptionRoutingModule } from './subscription.routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DemoMaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    CdkTableModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    SubscriptionRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [],\r\n  entryComponents: [SubscriptionFormComponent],\r\n  declarations: [SubscriptionComponent, SubscriptionFormComponent],\r\n})\r\nexport class SubscriptionComponentsModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { MsalGuard } from \"@azure/msal-angular\";\r\nimport { SubscriptionComponent } from \"./subscription.component\";\r\n\r\nconst SubscriptionRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: SubscriptionComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(SubscriptionRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SubscriptionRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}