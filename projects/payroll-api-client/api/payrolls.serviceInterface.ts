/**
 * FPI E-Invoice API
 * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: soporte@fpicolombia.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { BasicoDto } from '../model/models';
import { ListNominaIndividualRequest } from '../model/models';
import { PayrollSent } from '../model/models';
import { PrimasDto } from '../model/models';
import { ResponseEntityOfResourceOfobject } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface PayrollsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * delete
     * 
     * @param id id
     */
    deleteUsingDELETE(id?: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * findById
     * 
     * @param id id
     */
    findByIdUsingGET(id?: string, extraHttpRequestParams?: any): Observable<BasicoDto>;

    /**
     * Find a Payroll by docNumber in the system.
     * 
     */
    listBasicoUsingGET(extraHttpRequestParams?: any): Observable<Array<BasicoDto>>;

    /**
     * Find a Payroll by docNumber in the system.
     * 
     */
    payrollListUsingGET(extraHttpRequestParams?: any): Observable<string>;

    /**
     * Find a Payroll by docNumber in the system.
     * 
     */
    payrollListUsingGET1(extraHttpRequestParams?: any): Observable<Array<PrimasDto>>;

    /**
     * save
     * 
     * @param diasTrabajados 
     * @param id 
     * @param sueldoTrabajado 
     */
    saveUsingPOST(diasTrabajados?: number, id?: string, sueldoTrabajado?: number, extraHttpRequestParams?: any): Observable<BasicoDto>;

    /**
     * Send a Payroll to prepare and send the document to DIAN.
     * 
     * @param list list
     */
    sendListUsingPOST3(list: ListNominaIndividualRequest, extraHttpRequestParams?: any): Observable<Array<ResponseEntityOfResourceOfobject>>;

    /**
     * update
     * 
     * @param diasTrabajados 
     * @param id 
     * @param sueldoTrabajado 
     */
    updateUsingPUT(diasTrabajados?: number, id?: string, sueldoTrabajado?: number, extraHttpRequestParams?: any): Observable<BasicoDto>;

}
