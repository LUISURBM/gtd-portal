/**
 * FPI E-Invoice API
 * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: soporte@fpicolombia.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Customer } from '../model/models';
import { ResponseEntityOfobject } from '../model/index';


import { Configuration }                                     from '../configuration';



export interface CustomersServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Find a List of Customers by a List of Identification Numbers in the system.
     * Also return a link to retrieve all customers with rel customers.
     * @param idNumbers idNumbers
     */
    customerListByIdNumberUsingGET(idNumbers: Array<string>, extraHttpRequestParams?: any): Observable<Array<ResponseEntityOfobject>>;

    /**
     * Delete a Customer in the system.
     *
     * @param id id
     */
    deleteCustomerUsingDELETE(id: string, extraHttpRequestParams?: any): Observable<object>;

    /**
     * findRoles
     *
     * @param privateKey privateKey
     */
    findRolesUsingGET(privateKey: string, extraHttpRequestParams?: any): Observable<Array<string>>;

    /**
     * Add a new Customer in the system.
     *
     * @param list list
     */
    newCustomersUsingPOST(list: Array<Customer>, extraHttpRequestParams?: any): Observable<Array<ResponseEntityOfobject>>;

    /**
     * Update a List of Customers in the system. If a Customer is not found by the given id, a new customer will be created.
     *
     * @param list list
     */
    replaceCustomersUsingPUT(list: Array<Customer>, extraHttpRequestParams?: any): Observable<Array<ResponseEntityOfobject>>;

}
