/**
 * FPI E-Invoice API
 * The FPI E-Invoice API allows your applications to retrieve products, customers and manage electronic document exchange.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: soporte@fpicolombia.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
 import { HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';
import {
  ListNominaIndividualRequest,
  PrimasDto,
  RequestTBasicoDto,
  RequestTFechasPagoDto,
  RequestTLugarGeneracionXmlDto,
  RequestTNominaGeneralDto, RequestTNominaIndividualDto, RequestTPagoDto,
  RequestTPeriodoDto,
  RequestTProveedorXmlDto,
  ResponseTBasicoDto,
  ResponseTFechasPagoDto,
  ResponseTListBasicoDto,
  ResponseTListFechasPagoDto,
  ResponseTListLugarGeneracionXmlDto,
  ResponseTListNominaGeneralDto,
  ResponseTListNominaIndividualDto,
  ResponseTListPagoDto,
  ResponseTListPeriodoDto,
  ResponseTListProveedorXmlDto, ResponseTLugarGeneracionXmlDto,
  ResponseTNominaGeneralDto, ResponseTNominaIndividualDto, ResponseTPagoDto,
  ResponseTPeriodoDto,
  ResponseTProveedorXmlDto,
  ResponseTstring
} from '../../../../models/mgmt/payroll/api/index';
import { Configuration } from '../configuration';








export interface PayrollsServiceInterface {
  defaultHeaders: HttpHeaders;
  configuration: Configuration;

  /**
   * delete Básico in the system.
   *
   * @param id Id Básico
   */
  deleteUsingDELETE(id: string, extraHttpRequestParams?: any): Observable<ResponseTstring>;

  /**
   * delete Fecha Pago in the system.
   *
   * @param id Id Fecha Pago
   */
  deleteUsingDELETE1(id: string, extraHttpRequestParams?: any): Observable<{}>;

  /**
   * delete Lugar Generacion xml in the system.
   *
   * @param id Id Lugar Generacion xml
   */
  deleteUsingDELETE2(id: string, extraHttpRequestParams?: any): Observable<{}>;

  /**
   * delete Nomina General in the system.
   *
   * @param id Id Nomina General
   */
  deleteUsingDELETE3(id: string, extraHttpRequestParams?: any): Observable<ResponseTstring>;

  /**
   * delete Nomina Individual in the system.
   *
   * @param id Id Nomina Individual
   */
  deleteUsingDELETE4(id: string, extraHttpRequestParams?: any): Observable<ResponseTstring>;

  /**
   * delete Pago in the system.
   *
   * @param id Id Pago
   */
  deleteUsingDELETE5(id: string, extraHttpRequestParams?: any): Observable<{}>;

  /**
   * delete Periodo in the system.
   *
   * @param id Id Periodo
   */
  deleteUsingDELETE6(id: string, extraHttpRequestParams?: any): Observable<{}>;

  /**
   * delete Proveedor Xml in the system.
   *
   * @param id Id Proveedor Xml
   */
  deleteUsingDELETE7(id: string, extraHttpRequestParams?: any): Observable<{}>;

  /**
   * find by id Básico in the system.
   *
   * @param id Id Básico
   */
  findByIdUsingGET(id: string, extraHttpRequestParams?: any): Observable<ResponseTBasicoDto>;

  /**
   * find by id Fecha Pago in the system.
   *
   * @param id Id Fecha Pago
   */
  findByIdUsingGET1(id: string, extraHttpRequestParams?: any): Observable<ResponseTFechasPagoDto>;

  /**
   * find by id Lugar Generacion xml in the system.
   *
   * @param id Id Lugar Generacion xml
   */
  findByIdUsingGET2(id: string, extraHttpRequestParams?: any): Observable<ResponseTLugarGeneracionXmlDto>;

  /**
   * find by id Nomina General in the system.
   *
   * @param id Id Nomina General
   */
  findByIdUsingGET3(id: string, extraHttpRequestParams?: any): Observable<ResponseTNominaGeneralDto>;

  /**
   * find by id Nomina Individual in the system.
   *
   * @param id Id Nomina Individual
   */
  findByIdUsingGET4(id: string, extraHttpRequestParams?: any): Observable<ResponseTNominaIndividualDto>;

  /**
   * find by id Pago in the system.
   *
   * @param id Id Pago
   */
  findByIdUsingGET5(id: string, extraHttpRequestParams?: any): Observable<ResponseTPagoDto>;

  /**
   * find by id Periodo in the system.
   *
   * @param id Id Periodo
   */
  findByIdUsingGET6(id: string, extraHttpRequestParams?: any): Observable<ResponseTPeriodoDto>;

  /**
   * find by id Proveedor Xml in the system.
   *
   * @param id Id Proveedor Xml
   */
  findByIdUsingGET7(id: string, extraHttpRequestParams?: any): Observable<ResponseTProveedorXmlDto>;

  /**
   * List all Básico in the system.
   *
   */
  listBasicoUsingGET(extraHttpRequestParams?: any): Observable<ResponseTListBasicoDto>;

  /**
   * List all Fecha Pago in the system.
   *
   */
  listFindAllUsingGET(extraHttpRequestParams?: any): Observable<ResponseTListFechasPagoDto>;

  /**
   * List all Lugar Generacion xml in the system.
   *
   */
  listFindAllUsingGET1(extraHttpRequestParams?: any): Observable<ResponseTListLugarGeneracionXmlDto>;

  /**
   * List all Nomina General in the system.
   *
   * @param businessSubscriptionId businessSubscriptionId
   */
  listFindAllUsingGET2(businessSubscriptionId: string, extraHttpRequestParams?: any): Observable<ResponseTListNominaGeneralDto>;

  /**
   * List all Nomina Individual in the system.
   *
   * @param nominaGeneralId nominaGeneralId
   */
  listFindAllUsingGET3(nominaGeneralId: string, extraHttpRequestParams?: any): Observable<ResponseTListNominaIndividualDto>;

  /**
   * List all Pago in the system.
   *
   */
  listFindAllUsingGET4(extraHttpRequestParams?: any): Observable<ResponseTListPagoDto>;

  /**
   * List all Periodo in the system.
   *
   */
  listFindAllUsingGET5(extraHttpRequestParams?: any): Observable<ResponseTListPeriodoDto>;

  /**
   * List all Proveedor Xml in the system.
   *
   */
  listFindAllUsingGET6(extraHttpRequestParams?: any): Observable<ResponseTListProveedorXmlDto>;

  /**
   * Find a Payroll by docNumber in the system.
   *
   */
  payrollListUsingGET(extraHttpRequestParams?: any): Observable<string>;

  /**
   * Find a Payroll by docNumber in the system.
   *
   */
  payrollListUsingGET1(extraHttpRequestParams?: any): Observable<Array<PrimasDto>>;

  /**
   * save a Básico in the system.
   *
   * @param dto dto
   */
  saveUsingPOST(dto: RequestTBasicoDto, extraHttpRequestParams?: any): Observable<ResponseTBasicoDto>;

  /**
   * save a Fecha Pago in the system.
   *
   * @param dto dto
   */
  saveUsingPOST1(dto: RequestTFechasPagoDto, extraHttpRequestParams?: any): Observable<ResponseTFechasPagoDto>;

  /**
   * save a Lugar Generacion xml in the system.
   *
   * @param dto dto
   */
  saveUsingPOST2(dto: RequestTLugarGeneracionXmlDto, extraHttpRequestParams?: any): Observable<ResponseTLugarGeneracionXmlDto>;

  /**
   * save a Nomina General in the system.
   *
   * @param dto dto
   */
  saveUsingPOST3(dto: RequestTNominaGeneralDto, extraHttpRequestParams?: any): Observable<ResponseTNominaGeneralDto>;

  /**
   * save a Nomina Individual in the system.
   *
   * @param dto dto
   */
  saveUsingPOST4(dto: RequestTNominaIndividualDto, extraHttpRequestParams?: any): Observable<ResponseTNominaIndividualDto>;

  /**
   * save a Pago in the system.
   *
   * @param dto dto
   */
  saveUsingPOST5(dto: RequestTPagoDto, extraHttpRequestParams?: any): Observable<ResponseTPagoDto>;

  /**
   * save a Periodo in the system.
   *
   * @param dto dto
   */
  saveUsingPOST6(dto: RequestTPeriodoDto, extraHttpRequestParams?: any): Observable<ResponseTPeriodoDto>;

  /**
   * save a Proveedor Xml in the system.
   *
   * @param dto dto
   */
  saveUsingPOST7(dto: RequestTProveedorXmlDto, extraHttpRequestParams?: any): Observable<ResponseTProveedorXmlDto>;

  /**
   * Send a Payroll to prepare and send the document to DIAN.
   *
   * @param list list
   */
  sendListUsingPOST3(list: ListNominaIndividualRequest, extraHttpRequestParams?: any): Observable<Array<any>>;

  /**
   * update Básico in the system.
   *
   * @param dto dto
   */
  updateUsingPUT(dto: RequestTBasicoDto, extraHttpRequestParams?: any): Observable<ResponseTBasicoDto>;

  /**
   * update Fecha Pago in the system.
   *
   * @param dto dto
   */
  updateUsingPUT1(dto: RequestTFechasPagoDto, extraHttpRequestParams?: any): Observable<ResponseTFechasPagoDto>;

  /**
   * update Lugar Generacion xml in the system.
   *
   * @param dto dto
   */
  updateUsingPUT2(dto: RequestTLugarGeneracionXmlDto, extraHttpRequestParams?: any): Observable<ResponseTLugarGeneracionXmlDto>;

  /**
   * update Nomina General in the system.
   *
   * @param dto dto
   */
  updateUsingPUT3(dto: RequestTNominaGeneralDto, extraHttpRequestParams?: any): Observable<ResponseTNominaGeneralDto>;

  /**
   * update Nomina Individual in the system.
   *
   * @param dto dto
   */
  updateUsingPUT4(dto: RequestTNominaIndividualDto, extraHttpRequestParams?: any): Observable<ResponseTNominaIndividualDto>;

  /**
   * update Pago in the system.
   *
   * @param dto dto
   */
  updateUsingPUT5(dto: RequestTPagoDto, extraHttpRequestParams?: any): Observable<ResponseTPagoDto>;

  /**
   * update Periodo in the system.
   *
   * @param dto dto
   */
  updateUsingPUT6(dto: RequestTPeriodoDto, extraHttpRequestParams?: any): Observable<ResponseTPeriodoDto>;

  /**
   * update Proveedor Xml in the system.
   *
   * @param dto dto
   */
  updateUsingPUT7(dto: RequestTProveedorXmlDto, extraHttpRequestParams?: any): Observable<ResponseTProveedorXmlDto>;

}
